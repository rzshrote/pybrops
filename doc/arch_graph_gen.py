
#!/usr/bin/env python3

import graphviz
G = graphviz.Digraph('pybropt_arch', filename='pybropt_arch.gv')


G.node('DataFrame', shape = 'box', style = 'filled', color = '#EE6262')
G.node('PandasDataFrame', shape = 'box', style = 'filled', color = 'lightblue2')
G.node('HDF5InputOutput', shape = 'box', style = 'filled', color = '#EE6262')
G.node('DenseMatrix', shape = 'box', style = 'filled', color = 'lightblue2')
G.node('DenseMutableMatrix', shape = 'box', style = 'filled', color = 'lightblue2')
G.node('DensePhasedMatrix', shape = 'box', style = 'filled', color = 'lightblue2')
G.node('DensePhasedTaxaVariantMatrix', shape = 'box', style = 'filled', color = 'lightblue2')
G.node('DenseTaxaMatrix', shape = 'box', style = 'filled', color = 'lightblue2')
G.node('DenseTaxaTraitMatrix', shape = 'box', style = 'filled', color = 'lightblue2')
G.node('DenseTaxaVariantMatrix', shape = 'box', style = 'filled', color = 'lightblue2')
G.node('DenseTraitMatrix', shape = 'box', style = 'filled', color = 'lightblue2')
G.node('DenseVariantMatrix', shape = 'box', style = 'filled', color = 'lightblue2')
G.node('GroupableMatrix', shape = 'box', style = 'filled', color = '#EE6262')
G.node('Matrix', shape = 'box', style = 'filled', color = '#EE6262')
G.node('MutableMatrix', shape = 'box', style = 'filled', color = '#EE6262')
G.node('PhasedMatrix', shape = 'box', style = 'filled', color = '#EE6262')
G.node('PhasedTaxaVariantMatrix', shape = 'box', style = 'filled', color = '#EE6262')
G.node('PrunableMatrix', shape = 'box', style = 'filled', color = '#EE6262')
G.node('SortableMatrix', shape = 'box', style = 'filled', color = '#EE6262')
G.node('TaxaMatrix', shape = 'box', style = 'filled', color = '#EE6262')
G.node('TaxaTraitMatrix', shape = 'box', style = 'filled', color = '#EE6262')
G.node('TaxaVariantMatrix', shape = 'box', style = 'filled', color = '#EE6262')
G.node('TraitMatrix', shape = 'box', style = 'filled', color = '#EE6262')
G.node('VariantMatrix', shape = 'box', style = 'filled', color = '#EE6262')
G.node('BreedingValueMatrix', shape = 'box', style = 'filled', color = '#EE6262')
G.node('DenseBreedingValueMatrix', shape = 'box', style = 'filled', color = 'lightblue2')
G.node('CoancestryMatrix', shape = 'box', style = 'filled', color = '#EE6262')
G.node('DenseCoancestryMatrix', shape = 'box', style = 'filled', color = 'lightblue2')
G.node('DenseMolecularCoancestryMatrix', shape = 'box', style = 'filled', color = 'lightblue2')
G.node('DenseVanRadenCoancestryMatrix', shape = 'box', style = 'filled', color = 'lightblue2')
G.node('DenseGeneticMappableMatrix', shape = 'box', style = 'filled', color = 'lightblue2')
G.node('ExtendedGeneticMap', shape = 'box', style = 'filled', color = 'lightblue2')
G.node('GeneticMap', shape = 'box', style = 'filled', color = '#EE6262')
G.node('GeneticMapFunction', shape = 'box', style = 'filled', color = '#EE6262')
G.node('GeneticMappableMatrix', shape = 'box', style = 'filled', color = '#EE6262')
G.node('HaldaneMapFunction', shape = 'box', style = 'filled', color = 'lightblue2')
G.node('KosambiMapFunction', shape = 'box', style = 'filled', color = 'lightblue2')
G.node('StandardGeneticMap', shape = 'box', style = 'filled', color = 'lightblue2')
G.node('DenseGenotypeMatrix', shape = 'box', style = 'filled', color = 'lightblue2')
G.node('DensePhasedGenotypeMatrix', shape = 'box', style = 'filled', color = 'lightblue2')
G.node('GenotypeMatrix', shape = 'box', style = 'filled', color = '#EE6262')
G.node('HaplotypeMatrix', shape = 'box', style = 'filled', color = '#EE6262')
G.node('PhasedGenotypeMatrix', shape = 'box', style = 'filled', color = '#EE6262')
G.node('PhasedHaplotypeMatrix', shape = 'box', style = 'filled', color = '#EE6262')
G.node('PandasPhenotypeDataFrame', shape = 'box', style = 'filled', color = 'lightblue2')
G.node('PhenotypeDataFrame', shape = 'box', style = 'filled', color = '#EE6262')
G.node('BreedingEdge', shape = 'box', style = 'filled', color = '#EE6262')
G.node('BreedingGraph', shape = 'box', style = 'filled', color = '#EE6262')
G.node('BreedingNode', shape = 'box', style = 'filled', color = '#EE6262')
G.node('BreedingProgram', shape = 'box', style = 'filled', color = '#EE6262')
G.node('EmigrationOperator', shape = 'box', style = 'filled', color = '#EE6262')
G.node('GermplasmBank', shape = 'box', style = 'filled', color = '#EE6262')
G.node('ImmigrationOperator', shape = 'box', style = 'filled', color = '#EE6262')
G.node('RecurrentSelectionBreedingProgram', shape = 'box', style = 'filled', color = 'lightblue2')
G.node('GenomicModelCalibrationOperator', shape = 'box', style = 'filled', color = '#EE6262')
G.node('LinearGenomicModelCalibrationOperator', shape = 'box', style = 'filled', color = 'lightblue2')
G.node('NonlinearGenomicModelCalibrationOperator', shape = 'box', style = 'filled', color = 'lightblue2')
G.node('TrueGenomicModelCalibrationOperator', shape = 'box', style = 'filled', color = 'lightblue2')
G.node('EvaluationOperator', shape = 'box', style = 'filled', color = '#EE6262')
G.node('NoGxEEvaluationOperator', shape = 'box', style = 'filled', color = 'lightblue2')
G.node('PerformanceTrial', shape = 'box', style = 'filled', color = '#EE6262')
G.node('TrueEvaluationOperator', shape = 'box', style = 'filled', color = 'lightblue2')
G.node('GenerationalInitializationOperator', shape = 'box', style = 'filled', color = 'lightblue2')
G.node('InitializationOperator', shape = 'box', style = 'filled', color = '#EE6262')
G.node('RandomInitializationOperator', shape = 'box', style = 'filled', color = 'lightblue2')
G.node('SimpleInitializationOperator', shape = 'box', style = 'filled', color = 'lightblue2')



G.edge('PandasDataFrame', 'DataFrame')
# G.edge('DenseMatrix', 'Matrix')
# G.edge('DenseMutableMatrix', 'DenseMatrix')
# G.edge('DenseMutableMatrix', 'MutableMatrix')
# G.edge('DensePhasedMatrix', 'DenseMutableMatrix')
# G.edge('DensePhasedMatrix', 'PhasedMatrix')
# G.edge('DensePhasedTaxaVariantMatrix', 'DenseTaxaVariantMatrix')
# G.edge('DensePhasedTaxaVariantMatrix', 'DensePhasedMatrix')
# G.edge('DensePhasedTaxaVariantMatrix', 'PhasedTaxaVariantMatrix')
# G.edge('DenseTaxaMatrix', 'DenseMutableMatrix')
# G.edge('DenseTaxaMatrix', 'TaxaMatrix')
# G.edge('DenseTaxaVariantMatrix', 'DenseTaxaMatrix')
# G.edge('DenseTaxaVariantMatrix', 'DenseVariantMatrix')
# G.edge('DenseTaxaVariantMatrix', 'TaxaVariantMatrix')
# G.edge('DenseTraitMatrix', 'DenseMutableMatrix')
# G.edge('DenseTraitMatrix', 'TraitMatrix')
# G.edge('DenseVariantMatrix', 'DenseMutableMatrix')
# G.edge('DenseVariantMatrix', 'VariantMatrix')
# G.edge('GroupableMatrix', 'SortableMatrix')
# G.edge('MutableMatrix', 'Matrix')
# G.edge('PhasedMatrix', 'MutableMatrix')
# G.edge('PhasedTaxaVariantMatrix', 'PhasedMatrix')
# G.edge('PhasedTaxaVariantMatrix', 'TaxaMatrix')
# G.edge('PhasedTaxaVariantMatrix', 'VariantMatrix')
# G.edge('PrunableMatrix', 'Matrix')
# G.edge('SortableMatrix', 'MutableMatrix')
# G.edge('TaxaMatrix', 'GroupableMatrix')
# G.edge('TaxaTraitMatrix', 'TaxaMatrix')
# G.edge('TaxaTraitMatrix', 'TraitMatrix')
# G.edge('TaxaVariantMatrix', 'TaxaMatrix')
# G.edge('TaxaVariantMatrix', 'VariantMatrix')
# G.edge('TraitMatrix', 'SortableMatrix')
# G.edge('VariantMatrix', 'GroupableMatrix')
G.edge('BreedingValueMatrix', 'TaxaTraitMatrix')
G.edge('BreedingValueMatrix', 'HDF5InputOutput')
G.edge('DenseBreedingValueMatrix', 'DenseTaxaTraitMatrix')
G.edge('DenseBreedingValueMatrix', 'BreedingValueMatrix')
G.edge('CoancestryMatrix', 'TaxaMatrix')
G.edge('DenseCoancestryMatrix', 'DenseMutableMatrix')
G.edge('DenseCoancestryMatrix', 'CoancestryMatrix')
G.edge('DenseMolecularCoancestryMatrix', 'DenseCoancestryMatrix')
G.edge('DenseVanRadenCoancestryMatrix', 'DenseCoancestryMatrix')
G.edge('DenseGeneticMappableMatrix', 'DenseVariantMatrix')
G.edge('DenseGeneticMappableMatrix', 'GeneticMappableMatrix')
G.edge('ExtendedGeneticMap', 'GeneticMap')
G.edge('GeneticMappableMatrix', 'VariantMatrix')
G.edge('HaldaneMapFunction', 'GeneticMapFunction')
G.edge('KosambiMapFunction', 'GeneticMapFunction')
G.edge('StandardGeneticMap', 'GeneticMap')
G.edge('DenseGenotypeMatrix', 'DenseTaxaVariantMatrix')
G.edge('DenseGenotypeMatrix', 'DenseGeneticMappableMatrix')
G.edge('DenseGenotypeMatrix', 'GenotypeMatrix')
G.edge('DensePhasedGenotypeMatrix', 'DenseGenotypeMatrix')
G.edge('DensePhasedGenotypeMatrix', 'DensePhasedTaxaVariantMatrix')
G.edge('DensePhasedGenotypeMatrix', 'PhasedGenotypeMatrix')
G.edge('DensePhasedGenotypeMatrix', 'GeneticMap')
G.edge('GenotypeMatrix', 'TaxaVariantMatrix')
G.edge('GenotypeMatrix', 'GeneticMappableMatrix')
G.edge('HaplotypeMatrix', 'TaxaVariantMatrix')
G.edge('PhasedGenotypeMatrix', 'GenotypeMatrix')
G.edge('PhasedGenotypeMatrix', 'PhasedTaxaVariantMatrix')
G.edge('PhasedHaplotypeMatrix', 'PhasedTaxaVariantMatrix')
G.edge('PhasedHaplotypeMatrix', 'HaplotypeMatrix')
G.edge('PandasPhenotypeDataFrame', 'PandasDataFrame')
G.edge('PandasPhenotypeDataFrame', 'PhenotypeDataFrame')
G.edge('PhenotypeDataFrame', 'DataFrame')
G.edge('BreedingProgram', 'BreedingNode')
G.edge('RecurrentSelectionBreedingProgram', 'BreedingProgram')
G.edge('LinearGenomicModelCalibrationOperator', 'GenomicModelCalibrationOperator')
G.edge('NonlinearGenomicModelCalibrationOperator', 'GenomicModelCalibrationOperator')
G.edge('TrueGenomicModelCalibrationOperator', 'GenomicModelCalibrationOperator')
G.edge('NoGxEEvaluationOperator', 'EvaluationOperator')
G.edge('TrueEvaluationOperator', 'EvaluationOperator')
G.edge('GenerationalInitializationOperator', 'InitializationOperator')
G.edge('RandomInitializationOperator', 'InitializationOperator')
G.edge('SimpleInitializationOperator', 'InitializationOperator')


with G.subgraph(name='cluster_0') as C:
    C.attr(style='filled', color='lightgrey', label='pybropt.core.mat')
    C.edge('DenseMatrix', 'Matrix')
    C.edge('DenseMutableMatrix', 'DenseMatrix')
    C.edge('DenseMutableMatrix', 'MutableMatrix')
    C.edge('DensePhasedMatrix', 'DenseMutableMatrix')
    C.edge('DensePhasedMatrix', 'PhasedMatrix')
    C.edge('DensePhasedTaxaVariantMatrix', 'DenseTaxaVariantMatrix')
    C.edge('DensePhasedTaxaVariantMatrix', 'DensePhasedMatrix')
    C.edge('DensePhasedTaxaVariantMatrix', 'PhasedTaxaVariantMatrix')
    C.edge('DenseTaxaMatrix', 'DenseMutableMatrix')
    C.edge('DenseTaxaMatrix', 'TaxaMatrix')
    C.edge('DenseTaxaVariantMatrix', 'DenseTaxaMatrix')
    C.edge('DenseTaxaVariantMatrix', 'DenseVariantMatrix')
    C.edge('DenseTaxaVariantMatrix', 'TaxaVariantMatrix')
    C.edge('DenseTraitMatrix', 'DenseMutableMatrix')
    C.edge('DenseTraitMatrix', 'TraitMatrix')
    C.edge('DenseVariantMatrix', 'DenseMutableMatrix')
    C.edge('DenseVariantMatrix', 'VariantMatrix')
    C.edge('GroupableMatrix', 'SortableMatrix')
    C.edge('MutableMatrix', 'Matrix')
    C.edge('PhasedMatrix', 'MutableMatrix')
    C.edge('PhasedTaxaVariantMatrix', 'PhasedMatrix')
    C.edge('PhasedTaxaVariantMatrix', 'TaxaMatrix')
    C.edge('PhasedTaxaVariantMatrix', 'VariantMatrix')
    C.edge('PrunableMatrix', 'Matrix')
    C.edge('SortableMatrix', 'MutableMatrix')
    C.edge('TaxaMatrix', 'GroupableMatrix')
    C.edge('TaxaTraitMatrix', 'TaxaMatrix')
    C.edge('TaxaTraitMatrix', 'TraitMatrix')
    C.edge('TaxaVariantMatrix', 'TaxaMatrix')
    C.edge('TaxaVariantMatrix', 'VariantMatrix')
    C.edge('TraitMatrix', 'SortableMatrix')
    C.edge('VariantMatrix', 'GroupableMatrix')


G.view()
