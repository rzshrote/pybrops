Search.setIndex({"docnames": ["advanced_usage/advanced_usage", "api", "contributing/contributing", "faq/faq", "fundamentals/architecture/architecture", "fundamentals/architecture/philosophy", "fundamentals/fundamentals", "fundamentals/simulation/philosophy", "getting_started/getting_started", "index", "standard_usage/breeding_operators/evaluation_operators", "standard_usage/breeding_operators/initialization_operators", "standard_usage/breeding_operators/logbooks", "standard_usage/breeding_operators/mating_operators", "standard_usage/breeding_operators/parental_selection_operators", "standard_usage/breeding_operators/survivor_selection_operators", "standard_usage/breeding_protocols/breeding_value_protocols", "standard_usage/breeding_protocols/genotyping_protocols", "standard_usage/breeding_protocols/mating_protocols", "standard_usage/breeding_protocols/phenotyping_protocols", "standard_usage/breeding_protocols/selection_protocols", "standard_usage/core_infrastructure/random_number_generation", "standard_usage/examples/examples", "standard_usage/examples/pareto_frontier_visualization/biobjective_GEBV_pareto_frontier", "standard_usage/examples/pareto_frontier_visualization/biobjective_wGEBV_pareto_frontier", "standard_usage/genomic_modeling/genomic_models", "standard_usage/genomic_modeling/variance_matrices", "standard_usage/optimization/optimization_algorithms", "standard_usage/optimization/optimization_problems", "standard_usage/optimization/optimization_solutions", "standard_usage/population_genetics/breeding_value_matrices", "standard_usage/population_genetics/coancestry_matrices", "standard_usage/population_genetics/genetic_map_functions", "standard_usage/population_genetics/genetic_maps", "standard_usage/population_genetics/genotype_matrices", "standard_usage/population_genetics/phased_genotype_matrices", "standard_usage/standard_usage"], "filenames": ["advanced_usage/advanced_usage.rst", "api.rst", "contributing/contributing.rst", "faq/faq.rst", "fundamentals/architecture/architecture.rst", "fundamentals/architecture/philosophy.rst", "fundamentals/fundamentals.rst", "fundamentals/simulation/philosophy.rst", "getting_started/getting_started.rst", "index.rst", "standard_usage/breeding_operators/evaluation_operators.rst", "standard_usage/breeding_operators/initialization_operators.rst", "standard_usage/breeding_operators/logbooks.rst", "standard_usage/breeding_operators/mating_operators.rst", "standard_usage/breeding_operators/parental_selection_operators.rst", "standard_usage/breeding_operators/survivor_selection_operators.rst", "standard_usage/breeding_protocols/breeding_value_protocols.rst", "standard_usage/breeding_protocols/genotyping_protocols.rst", "standard_usage/breeding_protocols/mating_protocols.rst", "standard_usage/breeding_protocols/phenotyping_protocols.rst", "standard_usage/breeding_protocols/selection_protocols.rst", "standard_usage/core_infrastructure/random_number_generation.rst", "standard_usage/examples/examples.rst", "standard_usage/examples/pareto_frontier_visualization/biobjective_GEBV_pareto_frontier.rst", "standard_usage/examples/pareto_frontier_visualization/biobjective_wGEBV_pareto_frontier.rst", "standard_usage/genomic_modeling/genomic_models.rst", "standard_usage/genomic_modeling/variance_matrices.rst", "standard_usage/optimization/optimization_algorithms.rst", "standard_usage/optimization/optimization_problems.rst", "standard_usage/optimization/optimization_solutions.rst", "standard_usage/population_genetics/breeding_value_matrices.rst", "standard_usage/population_genetics/coancestry_matrices.rst", "standard_usage/population_genetics/genetic_map_functions.rst", "standard_usage/population_genetics/genetic_maps.rst", "standard_usage/population_genetics/genotype_matrices.rst", "standard_usage/population_genetics/phased_genotype_matrices.rst", "standard_usage/standard_usage.rst"], "titles": ["Advanced PyBrOpS Usage", "&lt;no title&gt;", "Contributing to PyBrOpS", "Frequently Asked Questions", "PyBrOpS Implemented Software Architecture", "PyBrOpS Software Architecture Philosophy", "PyBrOpS Fundamentals", "PyBrOpS Simulation Philosophy", "Getting Started", "PyBrOpS Main Page", "Evaluation Operators", "Initialization Operators", "Logbooks", "Mating Operators", "Parental Selection Operators", "Survivor Selection Operators", "Breeding Value Estimation Protocols", "Genotyping Protocols", "Mating Protocols", "Phenotyping Protocols", "Selection Protocols", "Random Number Generation", "Examples", "Bi-Objective GEBV Selection Pareto Frontier Visualization", "Bi-Objective Weighted Genomic Selection Pareto Frontier Visualization", "Genomic Models", "Variance Matrices", "Optimization Algorithms", "Optimization Problems", "Optimization Solutions", "Breeding Value Matrices", "Coancestry Matrices", "Genetic Map Functions", "Genetic Maps", "Genotype Matrices", "Phased Genotype Matrices", "Standard PyBrOpS Usage"], "terms": {"under": [0, 4, 14, 15], "construct": [0, 4, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 25, 26, 30, 31, 33, 34, 35], "guid": [5, 8], "its": [5, 8, 9, 12, 16, 17, 19, 28, 30, 32, 35], "By": 5, "i": [5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 28, 29, 30, 32, 33, 34, 35], "easili": 5, "comprehens": [5, 9], "extent": 5, "maintain": 5, "mani": [5, 25], "sourc": [5, 8, 19, 20, 26, 30, 31, 36], "commonli": 5, "plant": [5, 9], "anim": [5, 9], "breed": [5, 8, 9, 23, 24, 33, 34, 35], "commun": 5, "develop": [5, 8], "robust": 5, "set": [5, 6, 7, 9, 11, 12, 16, 17, 18, 20, 21, 23, 24, 25, 26, 29, 33, 34], "make": [5, 8, 9, 18, 20, 23, 24, 30, 31, 33, 34], "them": [5, 9, 20, 23, 24, 28], "difficult": 5, "understand": [5, 6, 8], "extend": [5, 9, 10, 11, 12, 13, 14, 15], "The": [5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35], "aim": 5, "remedi": 5, "thi": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35], "maxim": [5, 20, 23, 24], "user": [5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 23, 24, 28, 33], "briefli": 5, "ar": [5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36], "summar": [5, 16, 18, 19, 20, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35], "descript": [5, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35], "A": [5, 10, 11, 13, 14, 15, 17, 18, 19, 20, 25, 26, 28, 30, 31, 34, 35], "modul": [5, 9, 21], "should": [5, 27], "respons": [5, 7, 20, 28], "onli": [5, 17, 18, 20, 23, 24, 26, 27, 30, 31, 33, 34], "one": [5, 7, 12, 14, 15, 18, 19, 20, 21, 26, 28, 30, 31, 33, 34], "task": [5, 7, 20, 23, 26, 31], "have": [5, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35], "reason": 5, "chang": [5, 20, 26, 30, 31, 33, 34], "exens": 5, "modif": [5, 26, 30, 31], "deriv": [5, 20, 23, 24, 25, 26, 29, 31, 35], "substitut": 5, "base": [5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 20, 21, 23, 24, 25, 26, 28, 30, 31, 33], "narrow": [5, 16, 19], "focu": 5, "so": [5, 12, 17, 20, 23, 26, 30, 31, 32, 33, 34], "prevent": 5, "unnecessari": 5, "abstract": [5, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35], "concret": [5, 16, 17, 18, 19, 26, 27, 29, 30, 31, 32, 33, 34, 35], "To": [5, 8, 10, 11, 12, 13, 14, 15, 20, 23, 24, 26, 28, 30, 31, 33], "adher": [5, 25], "heavi": 5, "class": [5, 23, 24], "python": [5, 9, 21, 23, 24, 25, 26, 30, 31, 33, 34, 36], "": [5, 7, 8, 9, 11, 12, 20, 23, 24, 25, 26, 28, 29, 30, 31, 33, 34], "sinc": [5, 10, 11, 12, 13, 14, 15, 20, 23, 24, 25, 26, 27, 28, 30, 31], "duck": 5, "type": [5, 6, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35], "manual": [5, 8, 20, 33], "enforc": 5, "seek": [5, 23, 24], "creat": [5, 7, 8, 23, 24, 27, 28, 29, 32], "new": [5, 9, 12, 21, 25, 26, 28, 30, 31, 33, 34, 35], "implement": [5, 6, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 23, 24, 25, 26, 27, 28, 29, 30, 31, 34, 35], "must": [5, 8, 10, 11, 12, 13, 14, 15, 28, 33, 34, 35], "ensur": [5, 9], "function": [5, 7, 9, 20, 21, 23, 24, 25, 28, 29, 30, 31, 33, 35, 36], "requir": [5, 7, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 25, 27, 28, 32, 34], "everi": 5, "famili": 5, "ha": [5, 17, 20, 26, 30, 31, 33, 34, 35, 36], "singular": 5, "focus": [5, 26, 30, 31, 34], "purpos": [5, 10, 11, 12, 13, 14, 15, 25, 26, 29, 33, 34, 35], "repres": [5, 7, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35], "fundament": [5, 8, 9], "entiti": 5, "data": [5, 6, 8, 11, 12, 18, 25, 26, 30, 31, 33, 34, 35], "structur": [5, 6, 7], "program": [5, 7, 9, 23, 24, 25, 34], "almost": 5, "all": [5, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35], "least": 5, "most": [5, 7, 18, 20, 25, 26, 30, 32, 34], "method": [5, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 26, 27, 28, 30, 32, 33, 34, 35], "These": [5, 7, 12, 18, 20, 21, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35], "two": [5, 10, 12, 14, 15, 18, 19, 20, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34], "decis": [5, 7, 9, 20, 27, 28, 29, 30, 31, 34], "allow": [5, 7, 9, 25, 26, 30, 31, 32, 33, 34], "If": [5, 8, 10, 11, 13, 14, 15, 20, 26, 30, 31, 33, 35], "featur": [5, 9, 18], "desir": [5, 7, 8, 15, 17, 20, 21, 23, 24, 33], "can": [5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36], "simpli": [5, 23, 24], "instead": 5, "modifi": [5, 7, 34], "current": [5, 10, 12, 13, 14, 15, 17, 34], "which": [5, 7, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 35, 36], "an": [5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35], "do": [5, 8, 10, 11, 13, 14, 15, 16, 17, 18, 20, 30, 33], "signatur": 5, "ident": [5, 26, 30, 31], "those": [5, 33], "specifi": [5, 9, 18, 20, 30], "within": [5, 7, 10, 13, 16, 19, 20, 21, 25, 27, 28, 29, 30, 31, 32, 34, 35], "same": [5, 33, 35], "each": [5, 16, 19, 20, 25, 26, 31, 33, 34, 35, 36], "other": [5, 7, 9, 19, 20, 23, 24, 25, 26, 30, 31, 34], "provid": [5, 7, 9, 16, 18, 19, 20, 21, 23, 24, 25, 26, 30, 31, 32, 33, 35], "altern": [5, 8, 34, 35], "lean": 5, "from": [5, 7, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 27, 28, 29, 32], "As": [5, 25, 26, 31], "mention": 5, "section": [5, 8, 25, 26, 30, 31, 34], "decoupl": 5, "improv": [5, 9], "modular": [5, 9], "document": 6, "describ": [6, 20, 30], "crucial": [6, 7], "concept": 6, "architectur": [6, 9], "design": [6, 7, 8, 9, 26], "serv": [6, 14, 30, 31], "start": [6, 7, 9, 11, 26, 30, 31, 32, 33, 34, 35], "point": [6, 7, 20], "philosophi": [6, 8], "simul": [6, 8, 9, 10, 11, 12, 13, 14, 15, 17, 19, 21, 23, 24, 25, 32, 33, 34], "softwar": [6, 9], "adopt": [7, 9], "script": [7, 8, 9, 36], "strategi": [7, 9, 13, 20, 24], "defin": [7, 16, 17, 20, 25, 28, 31, 33], "maximum": [7, 9, 20, 25], "flexibl": [7, 9], "represent": [7, 25, 26, 31, 32, 35], "accomplish": [7, 19, 20, 25, 26, 27, 28, 29, 30, 31, 33], "us": [7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35], "three": [7, 18, 20, 25, 26, 28, 30, 31, 34], "compon": [7, 28], "equip": 7, "rich": 7, "arrai": [7, 8, 16, 17, 18, 19, 20, 23, 24, 28, 32], "plai": 7, "role": 7, "conduct": [7, 25, 33], "basic": [7, 19, 25, 34], "build": [7, 8], "block": [7, 20, 26, 30, 31], "unit": [7, 8, 23, 30], "inform": [7, 9, 12, 20, 28, 30, 33, 34], "e": [7, 25], "g": [7, 25], "genotyp": [7, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 26, 31, 36], "genom": [7, 10, 11, 12, 13, 14, 15, 16, 18, 20, 30, 31, 33, 34, 35], "predict": [7, 19, 20, 30, 31, 34], "model": [7, 10, 11, 12, 13, 14, 15, 16, 20, 30, 31, 33, 34], "util": [7, 23, 24, 26, 28, 33], "compos": 7, "framework": [7, 8, 9], "sever": [7, 8, 9, 12, 16, 19, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35], "kei": [7, 26, 30, 31, 33, 34, 35], "offer": [7, 9, 30, 34], "list": [7, 28, 33], "below": [7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36], "genet": [7, 8, 18, 23, 24, 27, 34, 35], "map": [7, 34, 35, 36], "object": [7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 25, 26, 30, 33, 34, 35], "essenti": [7, 8, 20, 21, 29, 35], "recombin": [7, 18, 33, 34, 35], "estim": [7, 20, 30, 31, 32, 33, 34, 36], "marker": [7, 16, 17, 18, 19, 20, 23, 24, 25, 26, 31, 32], "covari": [7, 23, 24], "work": [7, 8], "tandem": 7, "enabl": [7, 9], "calcul": [7, 10, 11, 12, 13, 14, 15, 16, 20, 23, 24, 28, 30, 34, 35], "probabl": [7, 18, 34, 35], "matric": [7, 25, 36], "pivot": 7, "store": [7, 10, 11, 12, 13, 14, 15, 20, 26, 29, 30, 31, 34, 35], "individu": [7, 13, 14, 16, 20, 23, 24, 26, 28, 30, 31, 34, 35], "popul": [7, 11, 19, 20, 23, 24, 33, 35], "valu": [7, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 24, 26, 27, 28, 29, 33, 34, 35, 36], "contain": [7, 11, 25, 28, 29, 32, 33, 34, 35], "merit": 7, "vital": 7, "select": [7, 10, 13, 36], "parent": [7, 10, 13, 18, 20, 23, 24, 26, 35, 36], "trait": [7, 14, 15, 16, 20], "coancestri": [7, 25, 36], "quantifi": [7, 19], "related": 7, "between": [7, 18, 26, 30, 31, 32, 34, 35], "indispens": 7, "manag": 7, "divers": [7, 10, 11, 13, 14, 15, 24, 25, 27], "avoid": 7, "inbreed": 7, "mai": [7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 35], "control": [7, 9], "more": [7, 8, 9, 14, 15, 16, 19, 28], "interest": 7, "support": [7, 8, 32, 33], "variou": [7, 9, 25, 30, 33, 34], "approach": [7, 9], "differ": [7, 20, 23, 24, 25, 30], "mode": 7, "progeni": [7, 15, 20, 23, 24, 26, 32], "varianc": [7, 32, 36], "help": [7, 20, 30, 31], "assess": [7, 25], "among": 7, "offspr": [7, 13, 18], "some": [7, 8, 18, 21, 25, 31, 32, 33], "techniqu": [7, 25], "optim": [7, 9, 23, 24, 31], "problem": [7, 23, 24, 36], "facilit": 7, "formul": [7, 20], "involv": [7, 10, 11, 14, 15], "mate": [7, 14, 20, 23, 24, 33, 36], "scheme": 7, "solut": [7, 20, 27, 36], "after": [7, 19, 20, 23, 24, 31, 33], "solv": 7, "record": [7, 12], "hous": 7, "breeder": [7, 9], "decid": 7, "algorithm": [7, 8, 10, 11, 12, 13, 14, 15, 23, 24, 28, 36], "rang": [7, 9, 16, 17, 18, 19, 20, 25, 26, 31, 33, 34, 35], "singl": [7, 9, 17, 21, 23, 24], "multi": [7, 9, 23, 24], "tackl": 7, "specif": [7, 9, 18, 26, 30, 33, 34], "face": 7, "small": [7, 31], "process": [7, 11, 26, 30, 31, 34], "take": [7, 16, 17, 18, 20, 28], "perform": [7, 9, 10, 13, 20, 23, 24, 26, 28, 30, 31, 33, 34], "special": [7, 12], "return": [7, 10, 11, 12, 13, 14, 15, 17, 19, 20, 28, 31], "output": [7, 10, 11, 13, 14, 15, 17, 20, 28], "five": [7, 21, 26, 30, 31, 34, 35], "phenotyp": [7, 10, 11, 12, 13, 14, 15, 16, 25, 36], "routin": [7, 8, 30, 34], "potenti": 7, "extern": 7, "packag": [7, 9, 23, 24], "like": [7, 26, 31, 32, 34, 35], "lme4": 7, "handl": 7, "cross": [7, 13, 18, 20, 23, 24, 26], "configur": [7, 12, 13, 14, 18, 20], "result": [7, 13, 20, 23, 24, 29], "field": [7, 10, 11, 13, 14, 15, 25], "trial": 7, "lastli": 7, "entir": [7, 10, 11, 12, 13, 14, 15, 16, 17, 31], "state": 7, "transform": [7, 20, 30], "versatil": [7, 9], "encompass": 7, "natur": [7, 20, 23, 24, 25, 26, 27, 31, 35], "thei": [7, 8, 18, 26, 31], "assembl": 7, "univers": [7, 10, 11, 12, 13, 14, 15], "effect": [7, 9, 16, 19, 20, 23, 24, 26], "On": [7, 8, 33], "hand": 7, "multipl": [7, 9, 12, 18, 25, 26, 30, 31, 34], "input": [7, 17, 20, 23, 24, 25, 30, 35], "produc": [7, 17, 18], "intend": [7, 25], "initi": [7, 18, 21, 36], "evalu": [7, 9, 20, 36], "survivor": [7, 36], "It": [7, 8, 10, 14, 15], "load": 7, "burn": [7, 11], "gener": [7, 11, 19, 27, 36], "relat": [7, 25, 26, 30, 31, 34], "measur": [7, 25], "includ": [7, 20, 23, 24, 25, 26, 30, 31, 34, 35], "determin": [7, 20, 30, 33, 34, 35], "reproduct": 7, "mimick": 7, "meiosi": 7, "mutat": 7, "final": [7, 25, 34], "choos": [7, 23, 24, 33], "next": [7, 8, 18, 20, 23, 24], "cycl": 7, "merg": 7, "subpopul": 7, "need": [7, 8, 9, 19, 20, 25, 33], "3": [8, 16, 17, 18, 19, 20, 26, 30, 31, 33, 34, 35], "8": [8, 32], "0": [8, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35], "download": 8, "see": [8, 28], "websit": 8, "In": [8, 20, 21, 23, 24, 25, 28, 32, 33], "addit": [8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 23, 24, 26, 28, 30, 31, 33, 34, 35], "reli": [8, 19], "numpi": [8, 16, 17, 18, 19, 20, 21, 23, 24, 28, 29, 32], "1": [8, 12, 16, 17, 18, 19, 20, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35], "22": 8, "2": [8, 16, 17, 18, 19, 20, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35], "matrix": [8, 16, 17, 18, 19, 20, 23, 24, 29], "storag": 8, "algebra": 8, "panda": [8, 19], "4": [8, 16, 17, 18, 19, 20, 23, 24, 26, 30, 31, 32, 34, 35], "frame": 8, "scipi": 8, "miscellan": [8, 10, 11, 13, 14, 15, 16, 19, 20, 23, 24, 25, 26], "numer": [8, 20, 30, 31, 34, 35], "matplotlib": 8, "5": [8, 10, 11, 13, 15, 18, 21, 26, 28, 29, 30, 31, 32, 34, 35], "graphic": 8, "pymoo": 8, "6": [8, 14], "cyvcf2": 8, "30": 8, "14": 8, "read": [8, 11, 23, 24, 25, 26, 30, 31, 34, 35], "vcf": 8, "h5py": 8, "hdf5": 8, "file": 8, "follow": [8, 12, 16, 18, 19, 20, 25, 26, 27, 28, 29, 30, 31, 34, 35], "also": [8, 19, 20, 21, 25, 26, 28, 30, 31, 33, 34], "pytest": 8, "7": [8, 16, 19, 26], "test": [8, 20, 25, 33], "datadir": 8, "setuptool": 8, "wheel": 8, "pip3": 8, "assumpt": 8, "tabl": [8, 16, 18, 19, 20, 25, 26, 29, 30, 31, 32, 33, 34, 35], "link": [8, 36], "refresh": 8, "cours": 8, "you": 8, "import": [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35], "languag": 8, "tutori": 8, "datafram": [8, 19], "10": [8, 16, 17, 18, 19, 20, 23, 24, 26, 28, 29, 30, 31, 33, 34, 35], "minut": 8, "option": [8, 10, 11, 13, 14, 15, 18, 23, 24, 26, 30, 31, 33, 34, 35], "org": 8, "learn": [8, 25], "how": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 23, 24, 25, 26, 27, 30, 31, 34], "custom": [8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 20, 23, 24, 28], "your": 8, "own": [8, 16, 17, 19, 33], "immedi": 8, "want": [8, 20, 23, 24], "complet": [8, 12, 25], "exampl": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35], "gain": 8, "depth": 8, "about": [8, 20, 33, 34], "befor": [8, 26, 30, 31, 33, 34, 35], "embark": 8, "standard": [8, 9, 20], "usag": [8, 9, 19, 20, 26, 31, 32], "detail": [8, 20, 25, 26, 30, 31], "instruct": 8, "system": 8, "header": 8, "even": 8, "though": 8, "written": [8, 26], "pure": [8, 19], "compil": 8, "distro": 8, "fedora": 8, "sudo": 8, "dnf": 8, "python3": 8, "devel": 8, "ubuntu": 8, "apt": 8, "dev": 8, "first": [8, 20, 26, 30, 31, 34, 35], "clone": 8, "repositori": [8, 36], "git": 8, "http": 8, "github": 8, "com": 8, "rzshrote": 8, "best": [8, 20], "practic": 8, "virtual": 8, "environ": [8, 16, 19], "where": [8, 10, 11, 13, 14, 15, 20, 25, 28, 33, 35], "makefil": 8, "done": [8, 19, 26, 30, 31, 33, 34], "m": [8, 35], "venv": 8, "env": 8, "bin": 8, "activ": [8, 10], "pip": 8, "edit": 8, "either": [8, 25], "sh": 8, "bash": 8, "now": 8, "access": [8, 19, 25, 26, 30, 31, 34], "through": [8, 9], "line": [8, 18], "interfac": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35], "prompt": 8, "execut": [8, 26, 30, 31], "capabl": 9, "stochast": 9, "associ": [9, 34, 35], "empow": 9, "research": [9, 21], "explor": 9, "possibl": [9, 34], "silico": 9, "studi": 9, "novel": 9, "establish": 9, "methodologi": [9, 10], "drive": 9, "signific": 9, "although": 9, "extant": 9, "apart": 9, "abil": [9, 33], "both": [9, 20, 21, 23, 24, 25, 26, 30, 31, 32], "tool": 9, "wide": 9, "applic": 9, "simultan": [9, 23, 24], "visual": 9, "complex": [9, 16, 19], "tradeoff": 9, "inher": [9, 26], "lead": [9, 19], "built": [9, 18, 27, 33], "solid": 9, "principl": 9, "extens": [9, 12, 20], "adapt": 9, "meet": 9, "expans": [9, 20], "seamlessli": 9, "integr": 9, "exist": [9, 26], "ones": [9, 25], "goal": 9, "evolv": [9, 23, 24], "aspect": 9, "easi": 9, "write": [9, 10, 11, 13, 14, 15, 25, 26, 30, 31, 33, 34], "precis": 9, "fine": 9, "tune": 9, "overview": 9, "explain": 9, "get": [9, 17, 23, 24, 26, 27, 30, 31], "advanc": [9, 28], "contribut": [9, 20, 26], "frequent": 9, "ask": 9, "question": 9, "index": [9, 26, 30, 31, 34, 35], "search": [9, 20, 23, 24], "evaluationoper": [10, 12], "step": [10, 12, 13, 14, 15, 18, 23, 24], "extrem": [10, 13, 14, 15, 25], "across": [10, 19, 25, 31, 34, 35], "speci": [10, 13], "combin": [10, 14, 15, 26], "job": [10, 11, 13, 14, 15], "evalut": 10, "evalutationoper": 10, "found": [10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36], "pybropo": [10, 11, 12, 13, 14, 15], "name": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35], "ani": [10, 11, 12, 13, 14, 15, 16, 17, 18, 23, 24, 25, 34], "demonstr": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 30, 31, 32, 33, 34, 35], "code": [10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 23, 24, 25, 26, 27, 30, 31, 32, 33, 34, 35], "incredibli": [10, 11, 13, 14, 15], "hi": [10, 11, 13, 14, 15, 16, 19], "her": [10, 11, 13, 14, 15, 16, 19], "overrid": [10, 11, 12, 13, 14, 15, 26, 28, 30, 31], "For": [10, 11, 12, 13, 14, 15, 20, 23, 24, 25, 26, 28, 31], "left": [10, 11, 12, 13, 14, 15, 17], "empti": [10, 11, 12, 13, 14, 15], "myevaluationoper": 10, "def": [10, 11, 12, 13, 14, 15, 20, 28], "__init__": [10, 11, 12, 13, 14, 15], "self": [10, 11, 12, 13, 14, 15, 18, 28], "arg": [10, 11, 12, 13, 14, 15, 28], "tupl": [10, 11, 12, 13, 14, 15, 28], "kwarg": [10, 11, 12, 13, 14, 15, 20, 28], "dict": [10, 11, 12, 13, 14, 15, 20, 28], "none": [10, 11, 12, 13, 14, 15, 16, 19, 20, 23, 24, 25, 26, 29, 31, 33, 34], "constructor": [10, 11, 12, 13, 14, 15, 19, 20, 25, 26, 28, 29, 30, 31, 33, 35], "paramet": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 28, 29, 30, 31, 35], "argument": [10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 23, 24, 25, 28, 30, 31, 32], "keyword": [10, 11, 12, 13, 14, 15, 20, 28], "pass": [10, 11, 12, 13, 14, 15, 20, 23, 24], "geno": [10, 11, 12, 13, 14, 15], "pheno": [10, 11, 12, 13, 14, 15], "bval": [10, 11, 12, 13, 14, 15], "gmod": [10, 11, 12, 13, 14, 15, 23, 24, 26], "t_cur": [10, 12, 13, 14, 15, 20, 23, 24], "int": [10, 12, 13, 14, 15, 33, 34, 35], "t_max": [10, 12, 13, 14, 15, 20, 23, 24], "miscout": [10, 11, 13, 14, 15], "dictionari": [10, 11, 12, 13, 14, 15], "time": [10, 12, 13, 14, 15, 23, 24, 33], "deadlin": [10, 12, 13, 14, 15], "pointer": [10, 11, 13, 14, 15, 26, 30, 31, 34, 35], "overwrit": [10, 11, 13, 14, 15], "previous": [10, 11, 13, 14, 15, 32, 35], "out": [10, 11, 13, 14, 15, 17, 20, 25, 26, 28, 30, 31, 32, 33, 34, 35], "length": [10, 11, 13, 14, 15, 28, 30, 31, 34, 35], "depend": [10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 25, 31], "There": [10, 11, 12, 13, 14, 15, 18, 33, 34], "restrict": [10, 11, 12, 13, 14, 15], "number": [10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 25, 26, 28, 29, 30, 31, 33, 34, 35, 36], "abov": [10, 11, 12, 13, 14, 15, 20, 28, 33], "evalop": 10, "initializationoper": [11, 12], "scratch": [11, 16, 17, 18, 19, 20, 26, 31, 34, 35], "typic": [11, 17, 19, 30], "seri": 11, "random": [11, 16, 17, 18, 19, 20, 25, 26, 28, 29, 30, 31, 33, 34, 35, 36], "real": [11, 20, 27, 28, 29, 33, 34], "world": [11, 34], "prepar": 11, "myinitializationoper": 11, "default": [11, 20, 23, 24, 26, 28, 30, 31, 33], "initop": 11, "metric": 12, "examin": [12, 20], "save": [12, 25, 26, 30, 31], "rep": 12, "replic": [12, 16, 19, 23, 24], "given": [12, 20, 23, 24, 25], "could": 12, "collect": [12, 20], "mylogbook": 12, "_data": 12, "setter": 12, "_rep": 12, "log_initi": 12, "directli": 12, "call": [12, 26, 30, 31], "log_pselect": 12, "mcfg": [12, 13, 14], "parentselectionoper": [12, 14], "pselect": [12, 14], "log_mat": 12, "matingoper": [12, 13], "log_evalu": 12, "log_sselect": 12, "survivorselectionoper": [12, 15], "sselect": [12, 15], "intern": [12, 20, 25, 28, 31], "filenam": [12, 25, 26, 30, 31], "str": [12, 16, 17, 18, 19, 20, 25, 26, 30, 31, 33, 34, 35], "correspond": [12, 20, 26, 28, 29, 31, 36], "oper": [12, 18, 25], "lbook": 12, "statist": [12, 25], "gather": 12, "eras": 12, "export": [12, 35], "csv": 12, "mymatingoper": 13, "mateop": 13, "myparentselectionoper": 14, "pselop": 14, "discard": 15, "undesir": [15, 25], "addition": 15, "surivor": 15, "mysurvivorselectionoper": 15, "sselop": 15, "breedingvalueprotocol": 16, "simpl": [16, 19], "scenario": [16, 19], "truebreedingvalu": 16, "true": [16, 19, 20, 23, 24, 28, 33], "meanphenotypicbreedingvalu": 16, "mean": [16, 23, 24, 26, 35], "statement": [16, 25, 26, 27, 28, 29, 31], "taxa": [16, 17, 18, 19, 20], "column": [16, 25, 26, 30, 31, 34], "bvprot": 16, "taxa_col": [16, 30, 31], "trait_col": [16, 26, 30], "trait01": 16, "trait02": 16, "nfix": [16, 19, 20, 25, 26], "fix": [16, 19, 20, 25, 26], "ntrait": [16, 19, 20, 23, 24, 25, 26, 30], "nmisc": [16, 19, 20, 25, 26], "naddit": [16, 19, 20, 25, 26], "50": [16, 18, 19, 20, 25, 26], "dummi": [16, 19, 20, 25, 26, 30], "beta": [16, 19, 20, 23, 24, 25, 26], "u_misc": [16, 19, 20, 23, 24, 25, 26], "u_a": [16, 19, 20, 23, 24, 25, 26], "zfill": [16, 17, 18, 19, 20, 25, 26, 30, 31, 33, 34, 35], "dtype": [16, 17, 18, 19, 20, 23, 24, 25, 26, 28, 30, 31, 33, 34, 35], "linear": [16, 19, 20, 23, 24, 26, 33], "algmod": [16, 19, 20, 23, 24, 25, 26], "denseadditivelineargenomicmodel": [16, 19, 20, 23, 24, 25, 26], "model_nam": [16, 19, 20, 23, 24, 25, 26], "param": [16, 19, 20, 25, 26], "shape": [16, 17, 18, 19, 20, 23, 24, 25, 26, 28, 30, 31, 34, 35], "ntaxa": [16, 17, 18, 19, 20, 25, 26, 30, 31, 34, 35], "100": [16, 17, 18, 19, 20, 23, 24, 26, 27, 30, 31, 33, 35], "nvrnt": [16, 17, 18, 19, 20, 23, 24, 25, 26, 31, 33, 34, 35], "ngroup": [16, 17, 18, 19, 20, 26, 30, 31, 34, 35], "20": [16, 17, 18, 19, 20, 23, 24, 26, 30, 31, 33, 35], "nchrom": [16, 17, 18, 19, 20, 26, 31, 34, 35], "nphase": [16, 17, 18, 19, 20, 34, 35], "mat": [16, 17, 18, 19, 20, 25, 26, 30, 31, 34, 35], "randint": [16, 17, 18, 19, 20, 25, 26, 30, 31, 33, 34, 35], "size": [16, 17, 18, 19, 20, 23, 24, 25, 26, 30, 31, 34, 35], "astyp": [16, 17, 18, 19, 20, 25, 26, 31, 33, 34, 35], "int8": [16, 17, 18, 19, 20, 25, 26, 31, 34, 35], "taxon": [16, 17, 18, 19, 20, 26, 30, 31, 34, 35], "group": [16, 17, 18, 19, 20, 23, 24, 25, 32], "taxa_grp": [16, 17, 18, 19, 20, 26, 30, 31, 34, 35], "sort": [16, 17, 18, 19, 20, 23, 24], "variant": [16, 17, 18, 19, 20, 23, 24, 26, 31], "chromsom": [16, 17, 18, 19, 20, 26, 31, 34, 35], "assign": [16, 17, 18, 19, 20, 23, 24, 25, 26, 31, 32, 33, 34, 35], "vrnt_chrgrp": [16, 17, 18, 19, 20, 26, 31, 32, 33, 34, 35], "physic": [16, 17, 18, 19, 20, 23, 24, 26, 31, 32, 33, 34, 35], "posit": [16, 17, 18, 19, 20, 23, 24, 26, 32, 34, 35], "vrnt_phypo": [16, 17, 18, 19, 20, 26, 31, 32, 33, 34, 35], "choic": [16, 17, 18, 19, 20, 26, 31, 33, 34, 35], "1000000": [16, 17, 18, 19, 20, 26, 31, 34, 35], "replac": [16, 17, 18, 19, 20, 26, 31, 34, 35], "fals": [16, 17, 18, 19, 20, 26, 31, 33, 34, 35], "vrnt_name": [16, 17, 18, 19, 20, 26, 31, 33, 34, 35], "snp": [16, 17, 18, 19, 20, 23, 24, 26, 31, 33, 34, 35], "phase": [16, 17, 18, 19, 20, 34, 36], "pgmat": [16, 17, 18, 19, 20, 23, 24, 26, 35], "densephasedgenotypematrix": [16, 17, 18, 19, 20, 26, 35], "ploidi": [16, 17, 18, 19, 20, 25, 26, 31, 34, 35], "nenv": [16, 19], "nrep": [16, 19], "ptprot": [16, 19], "g_e_phenotyp": [16, 19], "gpmod": [16, 19, 20, 23, 24], "sens": [16, 19], "herit": 16, "set_h2": [16, 19], "h2": [16, 19], "pheno_df": [16, 19], "without": [16, 19], "refer": [16, 25, 26, 30, 31, 33, 34, 35], "align": 16, "bvmat1": 16, "bvmat2": 16, "genotypingprotocol": 17, "genotypeprotocol": 17, "phasedgenotypematrix": [17, 26], "unphas": [17, 23, 24, 35], "denseunphasedgenotyp": 17, "flawless": 17, "whole": [17, 31, 33, 34], "deliber": 17, "open": 17, "dens": [17, 25, 26, 30, 31, 34, 35], "illustr": [17, 18, 21, 26, 27, 28, 29, 30, 31, 33, 34, 35], "creation": [17, 19, 21, 25, 26, 30, 31], "gtprot": 17, "genotypematrix": [17, 25, 35], "shown": 17, "1000": [17, 18, 23, 24, 31, 35], "gmat": [17, 20, 23, 24, 25, 31], "check": 17, "isinst": 17, "densegenotypematrix": [17, 20, 23, 24, 31, 34, 35], "pre": [18, 27], "avail": [18, 20, 25, 34], "wai": [18, 20, 26], "four": [18, 25, 26, 32], "child": [18, 19, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35], "selfcross": 18, "fertil": 18, "twowaycross": 18, "twowaydhcross": 18, "doubl": 18, "haploid": [18, 20], "threewaycross": 18, "threewaydhcross": 18, "fourwaycross": 18, "fourwaydhcross": 18, "share": [18, 20, 21, 25, 26, 30, 31, 33, 34], "common": [18, 23, 25, 26, 29, 30, 31, 34], "subsect": [18, 19, 20, 25, 26, 30, 31], "nparent": [18, 20, 23, 24], "counter": 18, "automat": [18, 23, 24, 30, 33], "straightforward": 18, "zero": [18, 20, 28, 30], "mate_self": 18, "mate_2w": 18, "mate_2wdh": 18, "mate_3w": 18, "mate_3wdh": 18, "mate_4w": 18, "mate_4wdh": 18, "non": [18, 20, 23, 24, 25, 28, 35], "progeny_count": 18, "family_count": 18, "rest": 18, "mtprot": 18, "accept": [18, 19, 25, 33], "indic": [18, 26, 30, 31, 33, 34, 35], "vrnt_genpo": [18, 26, 31, 32, 33, 34, 35], "uniform": [18, 26, 28, 29, 31], "crossov": [18, 34, 35], "vrnt_xoprob": [18, 31, 34, 35], "configu": 18, "xconfig": [18, 20], "nmate": [18, 20, 23, 24], "nprogeni": [18, 20, 23, 24, 26], "nself": [18, 26], "induc": 19, "increas": [19, 23, 24], "realism": [19, 33], "truephenotyp": 19, "environment": 19, "gxe": 19, "interact": 19, "coupl": 19, "via": [19, 21, 31, 33, 34, 35], "amount": 19, "ad": [19, 25, 33], "var_err": 19, "add": [19, 25], "definit": [19, 20, 28, 30, 32, 33, 34, 35], "implment": 19, "broad": [19, 25], "respect": [19, 20, 25, 26, 30, 32], "founder": 19, "said": [20, 25], "pair": [20, 23, 24, 32], "doe": [20, 25], "matter": 20, "broken": 20, "major": [20, 34, 35], "mateselectionprotocol": 20, "binari": [20, 27, 28, 29, 35], "integ": [20, 26, 27, 28, 29, 30, 31, 34, 35], "subset": [20, 27, 28, 29], "subtyp": [20, 25], "space": [20, 23, 24, 27, 28, 29], "binaryselectionprotocol": 20, "integerselectionprotocol": 20, "realselectionprotocol": 20, "subsetselectionprotocol": 20, "binarymateselectionprotocol": 20, "integermateselectionprotocol": 20, "realmateselectionprotocol": 20, "subsetmateselectionprotocol": 20, "estimatedbreedingvaluebinaryselect": 20, "estimatedbreedingvalueintegerselect": 20, "estimatedbreedingvaluerealselect": 20, "estimatedbreedingvaluesubsetselect": 20, "expectedmaximumbreedingvaluebinaryselect": 20, "expectedmaximumbreedingvalueintegerselect": 20, "expectedmaximumbreedingvaluerealselect": 20, "expectedmaximumbreedingvaluesubsetselect": 20, "expect": [20, 23, 24, 26, 32, 35], "familyestimatedbreedingvaluebinaryselect": 20, "familyestimatedbreedingvalueintegerselect": 20, "familyestimatedbreedingvaluerealselect": 20, "familyestimatedbreedingvaluesubsetselect": 20, "genomicestimatedbreedingvaluebinaryselect": 20, "genomicestimatedbreedingvalueintegerselect": 20, "genomicestimatedbreedingvaluerealselect": 20, "genomicestimatedbreedingvaluesubsetselect": [20, 23, 24], "genotypebuildersubsetselect": 20, "builder": 20, "optimalcontributionbinaryselect": 20, "optimalcontributionintegerselect": 20, "optimalcontributionrealselect": 20, "optimalcontributionsubsetselect": 20, "optimalhaploidvaluebinaryselect": 20, "optimalhaploidvalueintegerselect": 20, "optimalhaploidvaluerealselect": 20, "optimalhaploidvaluesubsetselect": 20, "optimalpopulationvaluesubsetselect": 20, "randombinaryselect": 20, "randomintegerselect": 20, "randomrealselect": 20, "randomsubsetselect": 20, "usefulnesscriterionbinaryselect": 20, "usefulnesscriterionintegerselect": 20, "usefulnesscriterionrealselect": 20, "usefulnesscriterionsubsetselect": 20, "criterion": 20, "weightedgenomicbinaryselect": 20, "weightedgenomicintegerselect": 20, "weightedgenomicrealselect": 20, "weightedgenomicsubsetselect": [20, 24], "weight": [20, 28, 29], "ebv": 20, "estimatedbreedingvalueselect": 20, "embv": 20, "expectedmaximumbreedingvalueselect": 20, "familyestimatedbreedingvalueselect": 20, "gebv": [20, 22, 25], "genomicestimatedbreedingvalueselect": [20, 23], "gb": 20, "genotypebuilderselect": 20, "optimalcontributionselect": 20, "ohv": 20, "optimalhaploidvalueselect": 20, "opv": 20, "optimalpopulationvalueselect": 20, "randomselect": 20, "uc": 20, "usefulnesscriterionselect": 20, "weightedgenomicselect": [20, 24], "categori": [20, 25, 26, 33], "nselindiv": 20, "ncross": [20, 23, 24, 26], "consid": 20, "per": [20, 23, 24], "event": [20, 23, 24, 31], "later": [20, 25, 34, 35], "nobj": [20, 23, 24, 28, 29], "obj_wt": [20, 28, 29], "obj_tran": 20, "latentfn": 20, "obj_trans_kwarg": 20, "latent": 20, "nineqcv": [20, 28, 29], "inequ": [20, 28, 29], "constraint": [20, 28, 29], "violat": [20, 28, 29], "ineqcv_wt": [20, 28, 29], "ineqcv_tran": 20, "ineqcv_trans_kwarg": 20, "neqcv": [20, 28, 29], "equal": [20, 28, 29], "eqcv_wt": [20, 28, 29], "eqcv_tran": 20, "eqcv_trans_kwarg": 20, "ndset_wt": 20, "nondomin": 20, "ndset_tran": 20, "ndset_trans_kwarg": 20, "rng": 20, "soalgo": [20, 27], "moalgo": [20, 23, 24, 27], "opim": 20, "selprot": [20, 23, 24], "40": [20, 23, 24], "assum": [20, 25, 26, 35], "here": [20, 23, 24, 34], "we": [20, 23, 24], "selprot_unconstrain": 20, "ten": 20, "total": [20, 23, 24], "suppos": 20, "wish": 20, "minim": [20, 23, 24, 28], "negat": [20, 23, 24], "sum": [20, 28], "equival": [20, 31], "our": [20, 23, 24], "while": [20, 25, 28, 33], "second": 20, "identifi": [20, 29, 30], "greater": 20, "than": 20, "convert": [20, 28, 32], "decnvec": 20, "ndarrai": [20, 28], "latentvec": 20, "maskvec": 20, "vector": [20, 28, 29], "ndecn": [20, 28, 29], "mask": [20, 25, 34, 35], "extract": [20, 25, 26, 30, 31, 34], "minvec": 20, "minimum": [20, 25], "neg": [20, 23, 24], "bool": 20, "don": 20, "t": 20, "care": 20, "inf": 20, "float": [20, 28], "selprot_constrain": 20, "prob_unconstrain": 20, "ptdf": [20, 23, 24], "bvmat": [20, 23, 24], "prob_constrain": 20, "soln": 20, "decn_spac": [20, 28, 29], "eval_unconstrain": 20, "evalfn": [20, 28], "eval_constrain": 20, "sosolv": 20, "soln_constrain": 20, "soln_decn": [20, 29], "soln_obj": [20, 23, 24, 29], "soln_ineqcv": [20, 29], "soltuion": 20, "soln_eqcv": [20, 29], "mosolv": [20, 23, 24], "soln_unconstrain": 20, "appropri": 20, "domin": [20, 34], "score": 20, "distanc": 20, "weigh": 20, "invari": 20, "scale": [20, 30], "selcfg_constrain": 20, "view": 20, "pareto": 20, "frontier": 20, "closest": 20, "project": 20, "selcfg_unconstrain": 20, "bulk": 21, "synchron": 21, "underneath": 21, "begin": [21, 23, 24], "prng": [21, 23, 24], "reproduc": 21, "remain": 21, "independ": 21, "despit": 21, "mechan": [21, 25], "core": [21, 23, 24], "48823": 21, "instanc": [21, 32, 33], "spawn": 21, "stream": 21, "prng_list": 21, "bi": 22, "wgebv": [22, 24], "candid": [23, 24], "namespac": [23, 24], "pybrop": [23, 24], "librari": [23, 24], "pyplot": [23, 24], "prot": [23, 24], "sel": [23, 24], "opt": [23, 24], "algo": [23, 24], "nsga2subsetgeneticalgorithm": [23, 24, 27], "popgen": [23, 24], "31621463": 23, "widiv_2000snp": [23, 24, 34, 35], "gz": [23, 24, 34, 35], "from_vcf": [23, 24, 34, 35], "chromosom": [23, 24, 32, 33, 34, 35], "auto_group_vrnt": [23, 24], "synthet": [23, 24], "draw": [23, 24], "variat": [23, 24, 25], "normal": [23, 24, 25, 30], "distribut": [23, 24], "pleiotroph": [23, 24], "compet": [23, 24], "mkreffect": [23, 24], "multivariate_norm": [23, 24], "cov": [23, 24], "randomli": [23, 24], "drawn": [23, 24], "float64": [23, 24], "25": [23, 24], "intercept": [23, 24], "syn1": [23, 24], "syn2": [23, 24], "synthetic_model": [23, 24], "hyperparam": [23, 24, 25], "protocol": [23, 24], "larg": [23, 24], "942": [23, 24], "ll": [23, 24], "abl": [23, 24], "slight": [23, 24], "250": [23, 24], "nsga": [23, 24, 27], "ii": [23, 24, 27], "ngen": [23, 24, 27], "pop_siz": [23, 24, 27], "unscal": 23, "just": [23, 24], "constuct": [23, 24], "leav": [23, 24, 34], "selsoln": [23, 24], "plot": [23, 24], "figur": [23, 24], "alwai": [23, 24, 32], "xdata": [23, 24], "ydata": [23, 24], "static": [23, 24], "fig": [23, 24], "ax": [23, 24, 30, 31, 34], "scatter": [23, 24], "set_titl": [23, 24], "set_xlabel": [23, 24], "set_ylabel": [23, 24], "savefig": [23, 24], "biobjective_gebv_pareto_fronti": 23, "png": [23, 24], "dpi": [23, 24], "close": [23, 24], "imag": [23, 24], "wa": [23, 24], "preserv": 24, "23947952": 24, "biobjective_wgebv_pareto_fronti": 24, "fit": 25, "central": 25, "behavior": 25, "nonlineargenomicmodel": 25, "suggest": 25, "former": [25, 33], "latter": [25, 33], "machin": 25, "epistasi": 25, "strictli": 25, "addititivelineargenomicmodel": 25, "exhibit": 25, "present": 25, "coancestrylineargenomicmodel": 25, "relationship": [25, 31, 34], "additivedomin": 25, "additivedominanceepistat": 25, "denselineargenomicmodel": 25, "categor": 25, "extra": 25, "case": 25, "been": [25, 30, 33, 35], "hyperparamet": 25, "pertain": [25, 28, 29], "dimension": 25, "explanatori": 25, "variabl": [25, 28, 29], "predictor": 25, "intension": 25, "veri": [25, 27], "becaus": 25, "nexplan": 25, "nparam": 25, "top": 25, "regress": 25, "mix": 25, "nexplan_beta": 25, "nparam_beta": 25, "nexplan_u": 25, "nparam_u": 25, "u": [25, 33], "subdivid": 25, "subdivis": 25, "nexplan_u_misc": 25, "nparam_u_misc": 25, "nexplan_u_a": 25, "nparam_u_a": 25, "nexplan_u_d": 25, "nparam_u_d": 25, "u_d": 25, "nexplan_u_i": 25, "nparam_u_i": 25, "u_i": 25, "aforement": 25, "lowest": 25, "denomin": 25, "norm": 25, "freedom": 25, "impract": 25, "from_pandas_dict": 25, "df_dict": 25, "mod": 25, "similar": [25, 26, 31], "manner": [25, 26, 31], "dic": 25, "from_csv_dict": 25, "reload": 25, "from_hdf5": [25, 26, 30, 31, 34, 35], "h5": [25, 26, 30, 31, 34, 35], "tmp": [25, 26, 30, 31, 33, 34, 35], "deepcopi": [25, 26, 30, 31, 33, 34, 35], "recurs": [25, 26, 30, 31, 33, 34], "made": [25, 26, 30, 31, 33], "predict_numpi": 25, "x": [25, 28], "z": 25, "cvobj": 25, "gtobj": 25, "b": [25, 26], "y": 25, "score_numpi": 25, "ptobj": 25, "gebv_numpi": 25, "gegv": 25, "gegv_numpi": 25, "var_g_numpi": 25, "var_g": 25, "var": 25, "var_a_numpi": 25, "var_a": 25, "linkag": [25, 26, 33], "equilibrium": [25, 26], "p": [25, 34, 35], "afreq": [25, 34, 35], "bulmer_numpi": 25, "much": 25, "valuabl": 25, "usl": 25, "usl_numpi": 25, "achiev": [25, 28], "fixat": 25, "lsl_numpi": 25, "lsl": 25, "when": 25, "count": [25, 35], "locu": [25, 34, 35], "facount": 25, "frequenc": [25, 35], "fafreq": 25, "faavail": 25, "fafix": 25, "loci": [25, 33, 35], "dacount": 25, "dafreq": 25, "daavail": 25, "dafix": 25, "anoth": [25, 34], "to_pandas_dict": 25, "to_csv_dict": 25, "to_hdf5": [25, 26, 30, 31, 34, 35], "saved_algmod": 25, "agnost": 26, "genomicmodel": 26, "determinist": 26, "equat": 26, "additivegeneticvariancematrix": 26, "additivegenicvariancematrix": 26, "respectfulli": 26, "disequilibrium": 26, "densegeneticvariancematrix": 26, "semi": [26, 28, 29, 31], "denseadditivegeneticvariancematrix": 26, "densetwowaydhadditivegeneticvariancematrix": 26, "densethreewaydhadditivegeneticvariancematrix": 26, "densefourwaydhadditivegeneticvariancematrix": 26, "densedihybriddhadditivegeneticvariancematrix": 26, "dihybrid": 26, "densegenicvariancematrix": 26, "denseadditivegenicvariancematrix": 26, "densetwowaydhadditivegenicvariancematrix": 26, "densethreewaydhadditivegenicvariancematrix": 26, "densefourwaydhadditivegenicvariancematrix": 26, "densedihybriddhadditivegenicvariancematrix": 26, "epgc": 26, "axi": [26, 28, 30, 31, 34, 35], "raw": [26, 30, 31, 33, 34, 35], "mat_ndim": [26, 30, 31, 34, 35], "dimens": [26, 30, 31, 34, 35], "mat_shap": [26, 30, 31, 34, 35], "metadata": [26, 28, 29, 30, 31, 33, 34, 35], "quick": [26, 30, 31], "taxa_axi": [26, 30, 31, 34, 35], "along": [26, 30, 34, 35], "label": [26, 30, 31, 33, 34, 35], "taxa_grp_nam": [26, 30, 31, 34, 35], "taxa_grp_stix": [26, 30, 31, 34, 35], "inclus": [26, 30, 31, 34, 35], "taxa_grp_spix": [26, 30, 31, 34, 35], "stop": [26, 30, 31, 33, 34, 35], "exclus": [26, 30, 31, 34, 35], "taxa_grp_len": [26, 30, 31, 34, 35], "trait_axi": [26, 30], "regard": [26, 28, 31], "nsquar": [26, 31], "square_ax": [26, 31], "square_axes_len": [26, 31], "gvmat": 26, "from_gmod": 26, "from_algmod": 26, "group_vrnt": [26, 31, 34, 35], "gmapfn": 26, "haldanemapfunct": [26, 32], "additivelineargenomicmodel": 26, "from_panda": [26, 30, 31], "df": [26, 30, 31], "femal": 26, "male": 26, "yield": 26, "tmp_vmat": 26, "female_col": 26, "female_grp_col": 26, "male_col": 26, "male_grp_col": 26, "variance_col": 26, "tmp_gvmat": 26, "from_csv": [26, 30, 31], "to_csv": [26, 30, 31], "saved_df": 26, "format": [26, 28, 30, 34, 35], "saved_vmat": 26, "saved_gvmat": 26, "level": [26, 30, 31, 33, 34], "origin": [26, 30, 31, 33, 34, 35], "affect": [26, 30, 31, 33, 34], "bound": [26, 30, 31], "occur": [26, 30, 31, 33, 34, 35], "down": [26, 30, 31, 33], "deepest": [26, 30, 31, 33, 34], "togeth": [26, 30, 31], "newvmat": 26, "newgvmat": 26, "adjoin_taxa": [26, 30, 31, 34, 35], "adjoin_trait": [26, 30], "delete_taxa": [26, 30, 31, 34, 35], "slice": [26, 30, 31, 34, 35], "sequenc": [26, 30, 31, 34, 35], "delete_trait": [26, 30], "insert_taxa": [26, 30, 34, 35], "insert_trait": [26, 30], "select_taxa": [26, 30, 31, 34, 35], "select_trait": [26, 30], "segment": [26, 30, 31, 32, 34], "append_taxa": [26, 30, 31, 34, 35], "append_trait": [26, 30], "seen": [26, 30, 31, 32, 34], "remove_taxa": [26, 30, 31, 34, 35], "remove_trait": [26, 30], "incorp": [26, 30, 31, 34, 35], "locat": [26, 30, 31, 34], "incorp_taxa": [26, 30, 31, 34, 35], "incorp_trait": [26, 30], "concat": [26, 30, 31, 34, 35], "concat_taxa": [26, 30, 34, 35], "concat_trait": [26, 30], "alphanumer": [26, 30, 31, 34], "arang": [26, 30, 31, 33, 34, 35], "shuffl": [26, 30, 31, 33, 34, 35], "reorder_taxa": [26, 30, 31, 34, 35], "reorder_trait": [26, 30], "indirect": [26, 30, 31, 33, 34], "stabl": [26, 28, 31, 33], "key1": [26, 30, 31, 33, 34, 35], "key2": [26, 30, 31, 33, 34, 35], "lexsort_taxa": [26, 30, 31, 34, 35], "sort_taxa": [26, 30, 31, 34, 35], "sort_trait": [26, 30], "group_taxa": [26, 30, 31, 34, 35], "is_group": [26, 30, 31, 33, 34, 35], "is_grouped_taxa": [26, 30, 31, 34, 35], "deal": 26, "is_squar": 26, "boolean": 26, "to_panda": [26, 30, 31], "out_df": 26, "regardless": 27, "optimizationalgorithm": 27, "binaryoptimizationalgorithm": 27, "integeroptimizationalgorithm": 27, "realoptimizationalgorithm": 27, "subsetoptimizationalgorithm": 27, "binarygeneticalgorithm": 27, "integergeneticalgorithm": 27, "realgeneticalgorithm": 27, "subsetgeneticalgorithm": 27, "nsga2binarygeneticalgorithm": 27, "nsga2integergeneticalgorithm": 27, "nsga2realgeneticalgorithm": 27, "steepestdescentsubsethillclimb": 27, "steepest": 27, "descent": 27, "hill": 27, "climb": 27, "climber": 27, "intuit": 27, "sosoln": [27, 29], "prob": 27, "soprob": [27, 28], "mosoln": [27, 29], "moprob": [27, 28], "submodul": [28, 29, 32], "express": 28, "binaryproblem": 28, "integerproblem": 28, "realproblem": 28, "subsetproblem": 28, "inherit": 28, "webpag": [28, 36], "overlai": 28, "boundari": [28, 29, 32], "decn_space_low": [28, 29], "lower": [28, 29], "decn_space_upp": [28, 29], "upper": [28, 29], "_evalu": 28, "overriden": 28, "compat": 28, "perhap": [28, 34], "better": 28, "sphere": 28, "min_": 28, "mathbf": 28, "f": 28, "sum_": 28, "n_": 28, "decn": 28, "x_": 28, "dummysingleobjectiverealproblem": 28, "init": 28, "unchang": 28, "math": 28, "v_": 28, "obj": 28, "w_": 28, "odot": 28, "f_": 28, "ineqcv": 28, "g_": 28, "eqcv": 28, "h_": 28, "keepdim": 28, "dual": 28, "dummymultiobjectiverealproblem": 28, "repeat": [28, 29, 30], "stack": [28, 29], "cand": 28, "obj1": 28, "ineqcv1": 28, "eqcv1": 28, "obj2": 28, "ineqcv2": 28, "eqcv2": 28, "unpack": 28, "zip": 28, "2d": 28, "binarysolut": 29, "integersolut": 29, "realsolut": 29, "subsetsolut": 29, "nsoln": 29, "impli": 30, "sometim": [30, 33], "reconstitut": 30, "un": 30, "row": [30, 31, 34], "densebreedingvaluematrix": 30, "main": [30, 31, 36], "around": 30, "chunk": 30, "from_numpi": 30, "101": 30, "trait1": 30, "trait2": 30, "trait3": 30, "explicit": 30, "taxa_grp_col": [30, 31], "sample_breeding_valu": 30, "whether": [30, 31, 33, 34, 35], "tmax": 30, "largest": 30, "targmax": 30, "tmin": 30, "smallest": 30, "targmin": 30, "tmean": 30, "trang": 30, "tstd": 30, "tvar": 30, "saved_breeding_valu": 30, "maodul": 31, "densecoancestrymatrix": 31, "densemolecularcoancestrymatrix": 31, "molecular": 31, "densevanradencoancestrymatrix": 31, "vanraden": 31, "2008": 31, "denseyangcoancestrymatrix": 31, "yang": 31, "fiel": 31, "from_gmat": 31, "vrnt_hapgrp": [31, 34, 35], "vrnt_hapalt": [31, 34, 35], "vrnt_hapref": [31, 34, 35], "vrnt_mask": [31, 34, 35], "saved_coancestry_matrix": 31, "sample_coancestry_matrix": 31, "guarante": 31, "correct": [31, 33], "coordin": 31, "NOT": 31, "bare": 31, "bone": 31, "mat_asformat": 31, "necessari": [31, 33], "is_positive_semidefinit": 31, "convex": 31, "apply_jitt": 31, "try": 31, "vari": 31, "particular": 31, "max_inbreed": 31, "min_inbreed": 31, "max": 31, "min": 31, "geneticmapfunct": 32, "popular": 32, "haldan": 32, "kosambi": 32, "box": 32, "kosambimapfunct": 32, "basal": 32, "arbitrari": 32, "mapfn": 32, "morgan": 32, "d": 32, "r_haldan": 32, "r_kosambi": 32, "invmapfn": 32, "invers": [32, 34], "invert": 32, "d_haldan": 32, "d_kosambi": 32, "rprob1g": 32, "rprob1p": 32, "rprob2g": 32, "rprob2p": 32, "success": 32, "xoprob": 32, "inter": 32, "wise": 33, "extendedgeneticmap": 33, "scope": [33, 34], "9": 33, "chrom": 33, "123456789": 33, "28": 33, "vrnt_stop": 33, "vrnt_fncode": 33, "who": 33, "empir": 33, "organ": 33, "maiz": 33, "nam": 33, "publish": 33, "mcmullen": 33, "et": 33, "al": 33, "2009": 33, "from_egmap": 33, "mcmullen_2009_us_nam": 33, "egmap": 33, "auto_group": 33, "auto_build_splin": 33, "constitut": 33, "vrnt_chrgrp_name": [33, 34, 35], "vrnt_chrgrp_stix": [33, 34, 35], "vrnt_chrgrp_spix": [33, 34, 35], "vrnt_chrgrp_len": [33, 34, 35], "spline_kind": 33, "spline_fill_valu": 33, "fill": 33, "At": 33, "order": 33, "prioriti": 33, "place": 33, "often": 33, "occasion": 33, "disagr": 33, "caus": 33, "error": 33, "assembli": 33, "unfortun": 33, "issu": 33, "elementwis": 33, "congruent": 33, "is_congru": 33, "agreement": 33, "remove_discrep": 33, "Be": 33, "mind": 33, "inspect": 33, "superior": 33, "build_splin": 33, "has_splin": 33, "interp_genpo": 33, "everyth": 33, "chrgrp": 33, "phypo": 33, "18203210": 33, "19293034": 33, "20110347": 33, "20474722": 33, "21398386": 33, "gentic": 33, "genpo": 33, "n": [34, 35], "sequenti": [34, 35], "haplotyp": [34, 35], "ploid": 34, "memori": [34, 35], "primarili": 34, "itself": 34, "mat_format": [34, 35], "post": [34, 35], "vrnt_axi": [34, 35], "belong": [34, 35], "previou": [34, 35], "reflect": 34, "unalt": 34, "adjoin_vrnt": [34, 35], "delete_vrnt": [34, 35], "insert_vrnt": [34, 35], "select_vrnt": [34, 35], "append_vrnt": [34, 35], "remove_vrnt": [34, 35], "incorp_vrnt": [34, 35], "concat_vrnt": [34, 35], "accord": 34, "reorder_vrnt": [34, 35], "lexsort_vrnt": [34, 35], "sort_vrnt": [34, 35], "vrnt": [34, 35], "is_grouped_vrnt": [34, 35], "acount": [34, 35], "int32": [34, 35], "float32": [34, 35], "presens": 34, "apoli": [34, 35], "gtcount": [34, 35], "homozyg": [34, 35], "recess": 34, "heterozyg": 34, "gtfreq": [34, 35], "maf": [34, 35], "meh": [34, 35], "tacount": [34, 35], "tafreq": [34, 35], "disk": 34, "saved_genotyp": [34, 35], "except": 35, "member": 35, "were": 35, "correctli": 35, "problemat": 35, "regular": 35, "phase_axi": 35, "deep": 35, "allel": 35, "polymorph": 35, "minor": 35, "heterozygos": 35, "directori": 36, "logbook": 36}, "objects": {}, "objtypes": {}, "objnames": {}, "titleterms": {"advanc": [0, 8], "pybrop": [0, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36], "usag": [0, 36], "contribut": 2, "frequent": 3, "ask": 3, "question": 3, "implement": [4, 20], "softwar": [4, 5], "architectur": [4, 5], "philosophi": [5, 7], "solid": 5, "design": 5, "principl": 5, "how": 5, "us": [5, 8], "singl": [5, 20, 27, 28, 29], "responsibl": 5, "srp": 5, "open": 5, "close": 5, "ocp": 5, "liskov": 5, "substitutuion": 5, "lsp": 5, "interfac": [5, 20], "segreg": 5, "isp": 5, "depend": [5, 8], "invers": [5, 31], "dip": 5, "fundament": [6, 7], "simul": [7, 18, 22, 36], "data": [7, 23, 24], "type": 7, "breed": [7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 25, 30, 36], "protocol": [7, 16, 17, 18, 19, 20, 36], "oper": [7, 10, 11, 13, 14, 15, 36], "get": 8, "start": 8, "basic": 8, "instal": 8, "python": 8, "requir": [8, 23, 24], "packag": 8, "releas": 8, "version": 8, "program": [8, 10, 11, 12, 13, 14, 15, 22, 36], "knowledg": 8, "prerequisit": 8, "linux": 8, "development": 8, "librari": 8, "command": 8, "main": 9, "page": 9, "what": 9, "i": [9, 31], "user": 9, "guid": 9, "content": 9, "indic": 9, "tabl": 9, "evalu": [10, 12, 28], "class": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35], "famili": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35], "overview": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35], "summari": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35], "op": [10, 11, 12, 13, 14, 15], "eval": 10, "modul": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36], "properti": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 25, 26, 28, 29, 30, 31, 33, 34, 35], "load": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35], "defin": [10, 11, 12, 13, 14, 15], "creat": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 30, 31, 33, 34, 35], "individu": [10, 17, 19], "initi": [11, 12], "init": 11, "logbook": 12, "log": 12, "state": 12, "after": 12, "parent": [12, 14], "select": [12, 14, 15, 20, 22, 23, 24, 25, 26, 30, 31, 34, 35], "mate": [12, 13, 18], "survivor": [12, 15], "reset": 12, "write": [12, 35], "file": [12, 23, 24, 25, 26, 30, 31, 33, 34, 35], "individiu": 13, "psel": 14, "ssel": 15, "valu": [16, 25, 30, 31], "estim": [16, 23, 24, 25], "prot": [16, 17, 18, 19, 20], "bv": 16, "genotyp": [17, 23, 24, 25, 34, 35], "gt": 17, "from": [17, 23, 24, 25, 26, 30, 31, 33, 34, 35], "genom": [17, 19, 23, 24, 25, 26, 36], "gener": [18, 20, 21, 23, 24, 25, 26, 30, 31, 34, 35], "matingprotocol": 18, "progeni": 18, "phenotyp": 19, "pt": 19, "model": [19, 23, 24, 25, 26, 36], "phenotypingprotocol": 19, "error": 19, "varianc": [19, 25, 26, 30], "set": 19, "trait": [19, 23, 24, 25, 26, 30], "herit": 19, "abstract": [20, 25], "sel": 20, "concret": [20, 25], "selectionprotocol": 20, "optim": [20, 27, 28, 29, 36], "problem": [20, 27, 28, 29], "algorithm": [20, 27], "setup": 20, "unconstrain": 20, "constrain": 20, "object": [20, 23, 24, 27, 28, 29, 31, 32], "multi": [20, 27, 28, 29], "random": [21, 23, 24], "number": [21, 23, 24], "seed": [21, 23, 24], "multipl": 21, "pseudorandom": 21, "exampl": [22, 36], "pareto": [22, 23, 24], "frontier": [22, 23, 24], "visual": [22, 23, 24], "pre": 22, "built": 22, "strategi": 22, "bi": [23, 24], "gebv": [23, 24], "global": [23, 24], "vcf": [23, 24, 34, 35], "construct": [23, 24, 27, 28, 29, 32], "subset": [23, 24], "matplotlib": [23, 24], "weight": 24, "gmod": 25, "genomicmodel": 25, "linear": 25, "addit": 25, "lineargenomicmodel": 25, "additivelineargenomicmodel": 25, "domin": 25, "additivedominancelineargenomicmodel": 25, "epistat": 25, "coeffici": 25, "additivedominanceepistaticlineargenomicmodel": 25, "raw": 25, "numpi": [25, 26, 30, 31, 33, 34, 35], "arrai": [25, 26, 30, 31, 33, 34, 35], "dictionari": 25, "panda": [25, 26, 30, 31], "datafram": [25, 26, 30, 31], "csv": [25, 26, 30, 31], "name": 25, "hdf5": [25, 26, 30, 31, 34, 35], "copi": [25, 26, 30, 31, 33, 34, 35], "shallow": [25, 26, 30, 31, 33, 34], "deep": [25, 26, 30, 31, 33, 34], "predict": 25, "method": [25, 31], "score": 25, "accuraci": 25, "calcul": [25, 26, 31, 32], "popul": [25, 34, 36], "genet": [25, 26, 32, 33, 36], "term": 25, "genic": [25, 26], "bulmer": 25, "effect": 25, "limit": 25, "upper": 25, "lower": 25, "favor": 25, "allel": [25, 34], "metric": 25, "deleteri": 25, "export": [25, 26, 30, 31, 34], "matric": [26, 30, 31, 34, 35], "matrix": [26, 30, 31, 34, 35], "vmat": 26, "geneticvariancematrix": 26, "genicvariancematrix": 26, "taxa": [26, 30, 31, 34, 35], "squar": [26, 31], "On": [26, 30, 31, 34, 35], "element": [26, 30, 31, 33, 34, 35], "manipul": [26, 30, 31, 34, 35], "adjoin": [26, 30, 31, 34, 35], "delet": [26, 30, 31, 34, 35], "insert": [26, 30, 31, 34, 35], "In": [26, 30, 31, 34, 35], "place": [26, 30, 31, 34, 35], "append": [26, 30, 31, 34, 35], "remov": [26, 30, 31, 33, 34, 35], "incorpor": [26, 30, 31, 34, 35], "concaten": [26, 30, 31, 34, 35], "group": [26, 30, 31, 33, 34, 35], "sort": [26, 30, 31, 33, 34, 35], "reorder": [26, 30, 31, 33, 34, 35], "lexsort": [26, 30, 31, 33, 34, 35], "function": [26, 32], "determin": [26, 31], "whether": 26, "all": 26, "ax": 26, "ar": 26, "equal": 26, "length": 26, "opt": [27, 28, 29], "algo": 27, "minim": 27, "prob": 28, "pymoo": 28, "specif": [28, 31], "deriv": 28, "candid": 28, "solut": [28, 29], "soln": 29, "popgen": [30, 31, 32, 33, 34, 35], "bvmat": 30, "breedingvaluematrix": 30, "statist": [30, 31, 34, 35], "maximum": [30, 31], "each": 30, "minimum": [30, 31], "mean": [30, 31, 34], "rang": 30, "standard": [30, 36], "deviat": 30, "unscal": 30, "de": 30, "center": 30, "coancestri": 31, "cmat": 31, "coancestrymatrix": 31, "genotypematrix": [31, 34], "kinship": 31, "retriev": 31, "format": 31, "posit": [31, 33], "semidefinit": 31, "appli": 31, "jitter": 31, "along": 31, "diagon": 31, "attain": 31, "inbreed": 31, "map": [32, 33], "gmap": [32, 33], "recombin": 32, "probabl": 32, "distanc": 32, "sequenti": 32, "pairwis": 32, "read": 33, "marker": [33, 34, 35], "variant": [33, 34, 35], "geneticmap": 33, "spline": 33, "congruenc": 33, "check": 33, "discrep": 33, "build": 33, "interpol": 33, "gmat": [34, 35], "count": 34, "frequenc": 34, "polymorph": 34, "presenc": 34, "minor": 34, "expect": 34, "heterozygos": 34, "save": [34, 35], "phase": 35, "phasedgenotypematrix": 35, "core": 36, "infrastructur": 36}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"Advanced PyBrOpS Usage": [[0, "advanced-pybrops-usage"]], "Contributing to PyBrOpS": [[2, "contributing-to-pybrops"]], "Frequently Asked Questions": [[3, "frequently-asked-questions"]], "PyBrOpS Implemented Software Architecture": [[4, "pybrops-implemented-software-architecture"]], "PyBrOpS Software Architecture Philosophy": [[5, "pybrops-software-architecture-philosophy"]], "SOLID Design Principles": [[5, "id1"]], "How PyBrOpS uses SOLID Design Principles": [[5, "how-pybrops-uses-solid-design-principles"]], "Use of the Single Responsiblity Principle (SRP)": [[5, "use-of-the-single-responsiblity-principle-srp"]], "Use of the Open-Closed Principle (OCP)": [[5, "use-of-the-open-closed-principle-ocp"]], "Use of the Liskov Substitutuion Principle (LSP)": [[5, "use-of-the-liskov-substitutuion-principle-lsp"]], "Use of the Interface Segregation Principle (ISP)": [[5, "use-of-the-interface-segregation-principle-isp"]], "Use of the Dependency Inversion Principle (DIP)": [[5, "use-of-the-dependency-inversion-principle-dip"]], "PyBrOpS Fundamentals": [[6, "pybrops-fundamentals"]], "PyBrOpS Fundamentals:": [[6, null]], "PyBrOpS Simulation Philosophy": [[7, "pybrops-simulation-philosophy"]], "Fundamental Data Types": [[7, "fundamental-data-types"]], "Breeding Protocols": [[7, "breeding-protocols"]], "Breeding Operators": [[7, "breeding-operators"]], "Getting Started": [[8, "getting-started"]], "Basic Installation": [[8, "basic-installation"]], "Python installation requirements": [[8, "python-installation-requirements"]], "Python package dependencies": [[8, "python-package-dependencies"]], "Release version installation": [[8, "release-version-installation"]], "Basic Programming Knowledge Prerequisites": [[8, "basic-programming-knowledge-prerequisites"]], "PyBrOpS Programming Knowledge Prerequisites": [[8, "id1"]], "Using PyBrOpS": [[8, "using-pybrops"]], "Advanced Installation": [[8, "advanced-installation"]], "Linux installation requirements": [[8, "linux-installation-requirements"]], "Linux Developmental Library Installation Commands": [[8, "id2"]], "Developmental version installation": [[8, "developmental-version-installation"]], "PyBrOpS Main Page": [[9, "pybrops-main-page"]], "What is PyBrOpS?": [[9, "what-is-pybrops"]], "PyBrOpS User Guide": [[9, "pybrops-user-guide"]], "Contents:": [[9, null]], "Indices and tables": [[9, "indices-and-tables"]], "Evaluation Operators": [[10, "evaluation-operators"]], "Class Family Overview": [[10, "class-family-overview"], [11, "class-family-overview"], [12, "class-family-overview"], [13, "class-family-overview"], [14, "class-family-overview"], [15, "class-family-overview"], [16, "class-family-overview"], [17, "class-family-overview"], [18, "class-family-overview"], [19, "class-family-overview"], [20, "class-family-overview"], [25, "class-family-overview"], [26, "class-family-overview"], [27, "class-family-overview"], [28, "class-family-overview"], [29, "class-family-overview"], [30, "class-family-overview"], [31, "class-family-overview"], [32, "class-family-overview"], [33, "class-family-overview"], [34, "class-family-overview"], [35, "class-family-overview"]], "Summary of Evaluation Operators": [[10, "summary-of-evaluation-operators"]], "Summary of classes in the pybrops.breed.op.eval module": [[10, "id1"]], "Evaluation Operator Properties": [[10, "evaluation-operator-properties"]], "Loading Class Modules": [[10, "loading-class-modules"], [11, "loading-class-modules"], [12, "loading-class-modules"], [13, "loading-class-modules"], [14, "loading-class-modules"], [15, "loading-class-modules"], [16, "loading-class-modules"], [17, "loading-class-modules"], [18, "loading-class-modules"], [19, "loading-class-modules"], [20, "loading-class-modules"], [34, "loading-class-modules"], [35, "loading-class-modules"]], "Defining Evaluation Operators": [[10, "defining-evaluation-operators"]], "Creating Evaluation Operators": [[10, "creating-evaluation-operators"]], "Evaluation of Individuals in a Breeding Program": [[10, "evaluation-of-individuals-in-a-breeding-program"]], "Initialization Operators": [[11, "initialization-operators"]], "Summary of Initialization Operators": [[11, "summary-of-initialization-operators"]], "Summary of classes in the pybrops.breed.op.init module": [[11, "id1"]], "Initialization Operators Properties": [[11, "initialization-operators-properties"]], "Defining Initialization Operators": [[11, "defining-initialization-operators"]], "Creating Initialization Operators": [[11, "creating-initialization-operators"]], "Initialization of a Breeding Program": [[11, "initialization-of-a-breeding-program"]], "Logbooks": [[12, "logbooks"]], "Summary of Logbook Classes": [[12, "summary-of-logbook-classes"]], "Summary of classes in the pybrops.breed.op.log module": [[12, "id1"]], "Logbook Properties": [[12, "logbook-properties"]], "Summary of Logbook properties": [[12, "id2"]], "Defining Logbooks": [[12, "defining-logbooks"]], "Creating Logbooks": [[12, "creating-logbooks"]], "Logging States in a Breeding Program": [[12, "logging-states-in-a-breeding-program"]], "Logging after breeding program initialization": [[12, "logging-after-breeding-program-initialization"]], "Logging after breeding program parent selection": [[12, "logging-after-breeding-program-parent-selection"]], "Logging after breeding program mating": [[12, "logging-after-breeding-program-mating"]], "Logging after breeding program evaluation": [[12, "logging-after-breeding-program-evaluation"]], "Logging after breeding program survivor selection": [[12, "logging-after-breeding-program-survivor-selection"]], "Resetting a Logbook": [[12, "resetting-a-logbook"]], "Writing a Logbook to a File": [[12, "writing-a-logbook-to-a-file"]], "Mating Operators": [[13, "mating-operators"]], "Summary of Mating Operators": [[13, "summary-of-mating-operators"]], "Summary of classes in the pybrops.breed.op.mate module": [[13, "id1"]], "Mating Operator Properties": [[13, "mating-operator-properties"]], "Defining Mating Operators": [[13, "defining-mating-operators"]], "Creating Mating Operators": [[13, "creating-mating-operators"]], "Mating Individiuals in a Breeding Program": [[13, "mating-individiuals-in-a-breeding-program"]], "Parental Selection Operators": [[14, "parental-selection-operators"]], "Summary of Parent Selection Operators": [[14, "summary-of-parent-selection-operators"]], "Summary of classes in the pybrops.breed.op.psel module": [[14, "id1"]], "Parent Selection Operator Properties": [[14, "parent-selection-operator-properties"]], "Defining Parent Selection Operators": [[14, "defining-parent-selection-operators"]], "Creating Parent Selection Operators": [[14, "creating-parent-selection-operators"]], "Parental Selection for a Breeding Program": [[14, "parental-selection-for-a-breeding-program"]], "Survivor Selection Operators": [[15, "survivor-selection-operators"]], "Summary of Survivor Selection Operators": [[15, "summary-of-survivor-selection-operators"]], "Summary of classes in the pybrops.breed.op.ssel module": [[15, "id1"]], "Survivor Selection Operator Properties": [[15, "survivor-selection-operator-properties"]], "Defining Survivor Selection Operators": [[15, "defining-survivor-selection-operators"]], "Creating Survivor Selection Operators": [[15, "creating-survivor-selection-operators"]], "Survivor Selection for a Breeding Program": [[15, "survivor-selection-for-a-breeding-program"]], "Breeding Value Estimation Protocols": [[16, "breeding-value-estimation-protocols"]], "Summary of Breeding Value Protocol Classes": [[16, "summary-of-breeding-value-protocol-classes"]], "Summary of classes in the pybrops.breed.prot.bv module": [[16, "id1"]], "Breeding Value Protocol Properties": [[16, "breeding-value-protocol-properties"]], "Creating Breeding Value Estimation Protocols": [[16, "creating-breeding-value-estimation-protocols"]], "Estimating Breeding Values": [[16, "estimating-breeding-values"]], "Genotyping Protocols": [[17, "genotyping-protocols"]], "Summary of Genotyping Protocol Classes": [[17, "summary-of-genotyping-protocol-classes"]], "Summary of classes in the pybrops.breed.prot.gt module": [[17, "id1"]], "Genotyping Protocol Properties": [[17, "genotyping-protocol-properties"]], "Creating Genotyping Protocols": [[17, "creating-genotyping-protocols"]], "Genotyping Individuals from their Genomes": [[17, "genotyping-individuals-from-their-genomes"]], "Mating Protocols": [[18, "mating-protocols"]], "Summary of Mating Protocol Classes": [[18, "summary-of-mating-protocol-classes"]], "Summary of classes in the pybrops.breed.prot.mate module": [[18, "id1"]], "Mating Protocol Properties": [[18, "mating-protocol-properties"]], "General properties": [[18, "general-properties"], [20, "general-properties"], [26, "general-properties"], [31, "general-properties"], [34, "general-properties"], [35, "general-properties"]], "Summary of MatingProtocol general properties": [[18, "id2"]], "Creating Mating Protocols": [[18, "creating-mating-protocols"]], "Simulating Mating and Progeny Generation": [[18, "simulating-mating-and-progeny-generation"]], "Phenotyping Protocols": [[19, "phenotyping-protocols"]], "Summary of Phenotyping Protocol Classes": [[19, "summary-of-phenotyping-protocol-classes"]], "Summary of classes in the pybrops.breed.prot.pt module": [[19, "id1"]], "Phenotyping Protocol Properties": [[19, "phenotyping-protocol-properties"]], "Genomic model properties": [[19, "genomic-model-properties"]], "Summary of PhenotypingProtocol genomic model properties": [[19, "id2"]], "Error variance properties": [[19, "error-variance-properties"]], "Summary of PhenotypingProtocol error variance properties": [[19, "id3"]], "Creating Phenotyping Protocols": [[19, "creating-phenotyping-protocols"]], "Setting Trait Heritabilities": [[19, "setting-trait-heritabilities"]], "Phenotyping Individuals": [[19, "phenotyping-individuals"]], "Selection Protocols": [[20, "selection-protocols"]], "Summary of Selection Protocol Classes": [[20, "summary-of-selection-protocol-classes"]], "Abstract selection protocol classes": [[20, "abstract-selection-protocol-classes"]], "Summary of abstract classes in the pybrops.breed.prot.sel module": [[20, "id1"]], "Concrete selection protocol classes": [[20, "concrete-selection-protocol-classes"]], "Summary of concrete classes in the pybrops.breed.prot.sel module": [[20, "id2"]], "Abstract interface classes": [[20, "abstract-interface-classes"]], "Concrete implementation classes": [[20, "concrete-implementation-classes"]], "Selection Protocol Properties": [[20, "selection-protocol-properties"]], "Summary of SelectionProtocol general properties": [[20, "id3"]], "Optimization problem properties": [[20, "optimization-problem-properties"]], "Summary of SelectionProtocol optimization problem properties": [[20, "id4"]], "Optimization algorithm properties": [[20, "optimization-algorithm-properties"]], "Summary of SelectionProtocol optimization algorithm properties": [[20, "id5"]], "Creating Selection Protocol Classes": [[20, "creating-selection-protocol-classes"]], "Generating Selection Problems for Optimization": [[20, "generating-selection-problems-for-optimization"]], "Setup for unconstrained optimization": [[20, "setup-for-unconstrained-optimization"]], "Setup for constrained optimization": [[20, "setup-for-constrained-optimization"]], "Generating the selection problem": [[20, "generating-the-selection-problem"]], "Single-Objective Optimization": [[20, "single-objective-optimization"]], "Multi-Objective Optimization": [[20, "multi-objective-optimization"]], "Selection": [[20, "selection"]], "Random Number Generation": [[21, "random-number-generation"]], "Seeding PyBrOpS": [[21, "seeding-pybrops"]], "Creating Multiple Pseudorandom Number Generators": [[21, "creating-multiple-pseudorandom-number-generators"]], "Examples": [[22, "examples"]], "Pareto Frontier Visualization Examples": [[22, "pareto-frontier-visualization-examples"]], "Pre-built selection strategies": [[22, null]], "Breeding Program Simulation Examples": [[22, "breeding-program-simulation-examples"]], "Bi-Objective GEBV Selection Pareto Frontier Visualization": [[23, "bi-objective-gebv-selection-pareto-frontier-visualization"]], "Loading Required Modules and Seeding the Global Random Number Generator": [[23, "loading-required-modules-and-seeding-the-global-random-number-generator"], [24, "loading-required-modules-and-seeding-the-global-random-number-generator"]], "Loading Genotypic Data from a VCF File": [[23, "loading-genotypic-data-from-a-vcf-file"], [24, "loading-genotypic-data-from-a-vcf-file"]], "Constructing a Bi-Trait Genomic Model": [[23, "constructing-a-bi-trait-genomic-model"], [24, "constructing-a-bi-trait-genomic-model"]], "Constructing a GEBV Subset Selection object": [[23, "constructing-a-gebv-subset-selection-object"], [24, "constructing-a-gebv-subset-selection-object"]], "Estimating the Pareto Frontier": [[23, "estimating-the-pareto-frontier"], [24, "estimating-the-pareto-frontier"]], "Visualizing the Pareto Frontier with matplotlib": [[23, "visualizing-the-pareto-frontier-with-matplotlib"], [24, "visualizing-the-pareto-frontier-with-matplotlib"]], "Bi-Objective Weighted Genomic Selection Pareto Frontier Visualization": [[24, "bi-objective-weighted-genomic-selection-pareto-frontier-visualization"]], "Genomic Models": [[25, "genomic-models"]], "Summary of Genomic Model Classes": [[25, "summary-of-genomic-model-classes"]], "Summary of abstract classes in the pybrops.model.gmod module": [[25, "id1"]], "Summary of concrete classes in the pybrops.model.gmod module": [[25, "id2"]], "Genomic Model Properties": [[25, "genomic-model-properties"]], "Genomic Models: General properties": [[25, "genomic-models-general-properties"]], "Summary of GenomicModel general properties": [[25, "id3"]], "Genomic Models: Model properties": [[25, "genomic-models-model-properties"]], "Summary of GenomicModel model properties": [[25, "id4"]], "Genomic Models: Trait properties": [[25, "genomic-models-trait-properties"]], "Summary of GenomicModel trait properties": [[25, "id5"]], "Linear Genomic Models: Additional model properties": [[25, "linear-genomic-models-additional-model-properties"]], "Summary of LinearGenomicModel additional model properties": [[25, "id6"]], "Additive Linear Genomic Models: Additional model properties": [[25, "additive-linear-genomic-models-additional-model-properties"]], "Summary of AdditiveLinearGenomicModel additional model properties": [[25, "id7"]], "Additive Dominance Linear Genomic Models: Additional model properties": [[25, "additive-dominance-linear-genomic-models-additional-model-properties"]], "Summary of AdditiveDominanceLinearGenomicModel additional model properties": [[25, "id8"]], "Additive Dominance Epistatic Linear Genomic Models: Model coefficient properties": [[25, "additive-dominance-epistatic-linear-genomic-models-model-coefficient-properties"]], "Summary of AdditiveDominanceEpistaticLinearGenomicModel model coefficient properties": [[25, "id9"]], "Loading Genomic Model Modules": [[25, "loading-genomic-model-modules"]], "Creating Genomic Models": [[25, "creating-genomic-models"]], "Creating genomic models from raw NumPy arrays": [[25, "creating-genomic-models-from-raw-numpy-arrays"]], "Loading linear genomic models from dictionaries of Pandas DataFrames": [[25, "loading-linear-genomic-models-from-dictionaries-of-pandas-dataframes"]], "Loading linear genomic models from dictionaries of CSV file names": [[25, "loading-linear-genomic-models-from-dictionaries-of-csv-file-names"]], "Loading genomic models HDF5 files": [[25, "loading-genomic-models-hdf5-files"]], "Copying Genomic Models": [[25, "copying-genomic-models"]], "Shallow copying": [[25, "shallow-copying"], [26, "shallow-copying"], [30, "shallow-copying"], [31, "shallow-copying"], [33, "shallow-copying"], [34, "shallow-copying"]], "Deep copying": [[25, "deep-copying"], [26, "deep-copying"], [30, "deep-copying"], [31, "deep-copying"], [33, "deep-copying"], [34, "deep-copying"]], "Model prediction methods": [[25, "model-prediction-methods"]], "Score model prediction accuracy": [[25, "score-model-prediction-accuracy"]], "Predicting genomic estimated breeding values": [[25, "predicting-genomic-estimated-breeding-values"]], "Predicting genomic estimated genotypic values": [[25, "predicting-genomic-estimated-genotypic-values"]], "Calculating population genetic variance terms": [[25, "calculating-population-genetic-variance-terms"]], "Predicting genetic variance": [[25, "predicting-genetic-variance"]], "Predicting additive genetic variance": [[25, "predicting-additive-genetic-variance"]], "Predicting additive genic variance": [[25, "predicting-additive-genic-variance"]], "Predicting the Bulmer effect": [[25, "predicting-the-bulmer-effect"]], "Calculating population selection limits": [[25, "calculating-population-selection-limits"]], "Upper selection limit": [[25, "upper-selection-limit"]], "Lower selection limit": [[25, "lower-selection-limit"]], "Calculating favorable allele metrics": [[25, "calculating-favorable-allele-metrics"]], "Calculating deleterious allele metrics": [[25, "calculating-deleterious-allele-metrics"]], "Exporting Genomic Models": [[25, "exporting-genomic-models"]], "Exporting to dictionaries of Pandas DataFrames": [[25, "exporting-to-dictionaries-of-pandas-dataframes"]], "Exporting to CSV files": [[25, "exporting-to-csv-files"]], "Exporting to HDF5": [[25, "exporting-to-hdf5"], [26, "exporting-to-hdf5"], [30, "exporting-to-hdf5"], [31, "exporting-to-hdf5"], [34, "exporting-to-hdf5"]], "Variance Matrices": [[26, "variance-matrices"]], "Summary of Variance Matrix Classes": [[26, "summary-of-variance-matrix-classes"]], "Genetic variance matrix classes": [[26, "genetic-variance-matrix-classes"]], "Summary of genetic variance classes in the pybrops.model.vmat module": [[26, "id1"]], "Genic variance matrix classes": [[26, "genic-variance-matrix-classes"]], "Summary of genic variance classes in the pybrops.model.vmat module": [[26, "id2"]], "Variance Matrix Properties": [[26, "variance-matrix-properties"]], "Summary of GeneticVarianceMatrix and GenicVarianceMatrix general properties": [[26, "id3"]], "Taxa properties": [[26, "taxa-properties"], [31, "taxa-properties"], [34, "taxa-properties"], [35, "taxa-properties"]], "Summary of GeneticVarianceMatrix and GenicVarianceMatrix taxa properties": [[26, "id4"]], "Trait properties": [[26, "trait-properties"]], "Summary of GeneticVarianceMatrix and GenicVarianceMatrix trait properties": [[26, "id5"]], "Square matrix properties": [[26, "square-matrix-properties"], [31, "square-matrix-properties"]], "Summary of GeneticVarianceMatrix and GenicVarianceMatrix square matrix properties": [[26, "id6"]], "Loading Variance Matrix Modules": [[26, "loading-variance-matrix-modules"]], "Loading genetic variance matrix modules": [[26, "loading-genetic-variance-matrix-modules"]], "Loading genic variance matrix modules": [[26, "loading-genic-variance-matrix-modules"]], "Creating Variance Matrices": [[26, "creating-variance-matrices"]], "Creating variance matrices from NumPy arrays": [[26, "creating-variance-matrices-from-numpy-arrays"]], "Calculating variance matrices from genomic models": [[26, "calculating-variance-matrices-from-genomic-models"]], "Creating variance matrices from Pandas DataFrames": [[26, "creating-variance-matrices-from-pandas-dataframes"]], "Loading variance matrices from CSV files": [[26, "loading-variance-matrices-from-csv-files"]], "Loading variance matrices from HDF5 files": [[26, "loading-variance-matrices-from-hdf5-files"]], "Copying Variance Matrices": [[26, "copying-variance-matrices"]], "Copy-On Element Manipulation": [[26, "copy-on-element-manipulation"], [30, "copy-on-element-manipulation"], [31, "copy-on-element-manipulation"], [34, "copy-on-element-manipulation"]], "Adjoining elements": [[26, "adjoining-elements"], [35, "adjoining-elements"]], "Deleting elements": [[26, "deleting-elements"], [35, "deleting-elements"]], "delete taxa": [[26, "delete-taxa"], [35, "delete-taxa"]], "delete traits": [[26, "delete-traits"]], "Inserting elements": [[26, "inserting-elements"], [35, "inserting-elements"]], "Selecting elements": [[26, "selecting-elements"], [35, "selecting-elements"]], "In-Place Element Manipulation": [[26, "in-place-element-manipulation"], [30, "in-place-element-manipulation"], [31, "in-place-element-manipulation"], [34, "in-place-element-manipulation"]], "Appending elements": [[26, "appending-elements"], [35, "appending-elements"]], "Removing elements": [[26, "removing-elements"], [35, "removing-elements"]], "remove taxa": [[26, "remove-taxa"], [35, "remove-taxa"]], "remove traits": [[26, "remove-traits"]], "Incorporating elements": [[26, "incorporating-elements"], [35, "incorporating-elements"]], "Concatenating matrices": [[26, "concatenating-matrices"], [35, "concatenating-matrices"]], "Grouping and Sorting": [[26, "grouping-and-sorting"], [30, "grouping-and-sorting"], [31, "grouping-and-sorting"], [34, "grouping-and-sorting"], [35, "grouping-and-sorting"]], "Reordering elements": [[26, "reordering-elements"], [30, "reordering-elements"], [31, "reordering-elements"], [34, "reordering-elements"]], "reorder taxa": [[26, "reorder-taxa"], [35, "reorder-taxa"]], "reorder traits": [[26, "reorder-traits"]], "Lexsorting elements": [[26, "lexsorting-elements"], [30, "lexsorting-elements"], [31, "lexsorting-elements"], [34, "lexsorting-elements"]], "lexsort taxa": [[26, "lexsort-taxa"], [35, "lexsort-taxa"]], "lexsort traits": [[26, "lexsort-traits"]], "Sorting elements": [[26, "sorting-elements"], [30, "sorting-elements"], [31, "sorting-elements"], [34, "sorting-elements"]], "sort taxa": [[26, "sort-taxa"], [35, "sort-taxa"]], "sort traits": [[26, "sort-traits"]], "Grouping elements": [[26, "grouping-elements"], [30, "grouping-elements"], [31, "grouping-elements"], [34, "grouping-elements"]], "Square matrix functions": [[26, "square-matrix-functions"]], "Determine whether all square axes are of equal length": [[26, "determine-whether-all-square-axes-are-of-equal-length"]], "Exporting Variance Matrices": [[26, "exporting-variance-matrices"]], "Exporting to Pandas DataFrame": [[26, "exporting-to-pandas-dataframe"], [30, "exporting-to-pandas-dataframe"], [31, "exporting-to-pandas-dataframe"]], "Exporting to CSV": [[26, "exporting-to-csv"], [30, "exporting-to-csv"], [31, "exporting-to-csv"]], "Optimization Algorithms": [[27, "optimization-algorithms"]], "Summary of Optimization Algorithm Classes": [[27, "summary-of-optimization-algorithm-classes"]], "Summary of classes in the pybrops.opt.algo module": [[27, "id1"]], "Loading Optimization Algorithm Modules": [[27, "loading-optimization-algorithm-modules"]], "Constructing Optimization Algorithms": [[27, "constructing-optimization-algorithms"]], "Single-objective optimization algorithms": [[27, "single-objective-optimization-algorithms"]], "Multi-objective optimization algorithms": [[27, "multi-objective-optimization-algorithms"]], "Minimizing Optimization Problems": [[27, "minimizing-optimization-problems"]], "Optimization of single-objective problems": [[27, "optimization-of-single-objective-problems"]], "Optimization of multi-objective problems": [[27, "optimization-of-multi-objective-problems"]], "Optimization Problems": [[28, "optimization-problems"]], "Summary of Optimization Problem Classes": [[28, "summary-of-optimization-problem-classes"]], "Summary of classes in the pybrops.opt.prob module": [[28, "id1"]], "Loading Optimization Problem Modules": [[28, "loading-optimization-problem-modules"]], "Optimization Problem Properties": [[28, "optimization-problem-properties"], [29, "optimization-problem-properties"]], "PyMOO specific properties": [[28, "pymoo-specific-properties"]], "PyBrOpS specific properties": [[28, "pybrops-specific-properties"]], "Summary of PyBrOpS specific Problem properties": [[28, "id2"]], "Deriving Problem Classes": [[28, "deriving-problem-classes"]], "Single objective problem specification": [[28, "single-objective-problem-specification"]], "Multi-objective problem specification": [[28, "multi-objective-problem-specification"]], "Constructing Problems": [[28, "constructing-problems"]], "Construct a single-objective problem": [[28, "construct-a-single-objective-problem"]], "Construct a multi-objective problem": [[28, "construct-a-multi-objective-problem"]], "Evaluating candidate solutions": [[28, "evaluating-candidate-solutions"]], "Optimization Solutions": [[29, "optimization-solutions"]], "Summary of Optimization Solution Classes": [[29, "summary-of-optimization-solution-classes"]], "Summary of classes in the pybrops.opt.soln module": [[29, "id1"]], "Loading Optimization Solution Modules": [[29, "loading-optimization-solution-modules"]], "Constructing Solutions": [[29, "constructing-solutions"]], "Construct a single-objective solution": [[29, "construct-a-single-objective-solution"]], "Construct a multi-objective solution": [[29, "construct-a-multi-objective-solution"]], "Summary of Solution properties": [[29, "id2"]], "Breeding Value Matrices": [[30, "breeding-value-matrices"]], "Summary of Breeding Value Matrix Classes": [[30, "summary-of-breeding-value-matrix-classes"]], "Summary of breeding value matrix classes in the pybrops.popgen.bvmat module": [[30, "id1"]], "Breeding Value Matrix Properties": [[30, "breeding-value-matrix-properties"]], "Breeding value matrix general properties": [[30, "breeding-value-matrix-general-properties"]], "Summary of BreedingValueMatrix general properties": [[30, "id2"]], "Breeding value matrix taxa properties": [[30, "breeding-value-matrix-taxa-properties"]], "Summary of BreedingValueMatrix taxa properties": [[30, "id3"]], "Breeding value matrix trait properties": [[30, "breeding-value-matrix-trait-properties"]], "Summary of BreedingValueMatrix trait properties": [[30, "id4"]], "Loading Breeding Value Matrix Modules": [[30, "loading-breeding-value-matrix-modules"]], "Creating Breeding Value Matrices": [[30, "creating-breeding-value-matrices"]], "Creating breeding value matrices from NumPy arrays": [[30, "creating-breeding-value-matrices-from-numpy-arrays"]], "Creating breeding value matrices from Pandas DataFrames": [[30, "creating-breeding-value-matrices-from-pandas-dataframes"]], "Loading breeding value matrices from CSV files": [[30, "loading-breeding-value-matrices-from-csv-files"]], "Loading breeding value matrices from HDF5 files": [[30, "loading-breeding-value-matrices-from-hdf5-files"]], "Copying Breeding Value Matrices": [[30, "copying-breeding-value-matrices"]], "Adjoin elements": [[30, "adjoin-elements"], [31, "adjoin-elements"], [34, "adjoin-elements"]], "Delete elements": [[30, "delete-elements"], [31, "delete-elements"], [34, "delete-elements"]], "Insert elements": [[30, "insert-elements"], [31, "insert-elements"], [34, "insert-elements"]], "Select elements": [[30, "select-elements"], [31, "select-elements"], [34, "select-elements"]], "Append elements": [[30, "append-elements"], [31, "append-elements"], [34, "append-elements"]], "Remove elements": [[30, "remove-elements"], [31, "remove-elements"], [34, "remove-elements"]], "Incorporate elements": [[30, "incorporate-elements"], [31, "incorporate-elements"], [34, "incorporate-elements"]], "Concatenate elements": [[30, "concatenate-elements"], [31, "concatenate-elements"], [34, "concatenate-elements"]], "Summary Statistics": [[30, "summary-statistics"], [31, "summary-statistics"], [34, "summary-statistics"], [35, "summary-statistics"]], "Maximum breeding values for each trait": [[30, "maximum-breeding-values-for-each-trait"]], "Minimum breeding values for each trait": [[30, "minimum-breeding-values-for-each-trait"]], "Mean breeding values for each trait": [[30, "mean-breeding-values-for-each-trait"]], "Breeding value ranges for each trait": [[30, "breeding-value-ranges-for-each-trait"]], "Breeding value standard deviations for each trait": [[30, "breeding-value-standard-deviations-for-each-trait"]], "Breeding value variances for each trait": [[30, "breeding-value-variances-for-each-trait"]], "Unscaling and de-centering breeding values": [[30, "unscaling-and-de-centering-breeding-values"]], "Exporting Breeding Value Matrices": [[30, "exporting-breeding-value-matrices"]], "Coancestry Matrices": [[31, "coancestry-matrices"]], "Summary of Coancestry Matrix Classes": [[31, "summary-of-coancestry-matrix-classes"]], "Summary of classes in the pybrops.popgen.cmat module": [[31, "id1"]], "Coancestry Matrix Properties": [[31, "coancestry-matrix-properties"]], "Summary of CoancestryMatrix general properties": [[31, "id2"]], "Summary of CoancestryMatrix taxa properties": [[31, "id3"]], "Summary of CoancestryMatrix square matrix properties": [[31, "id4"]], "Loading Coancestry Matrix Modules": [[31, "loading-coancestry-matrix-modules"]], "Creating Coancestry Matrices": [[31, "creating-coancestry-matrices"]], "Creating coancestry matrices from NumPy arrays": [[31, "creating-coancestry-matrices-from-numpy-arrays"]], "Creating coancestry matrices from GenotypeMatrix objects": [[31, "creating-coancestry-matrices-from-genotypematrix-objects"]], "Creating coancestry matrices from Pandas DataFrames": [[31, "creating-coancestry-matrices-from-pandas-dataframes"]], "Loading coancestry matrices from CSV files": [[31, "loading-coancestry-matrices-from-csv-files"]], "Loading coancestry matrices from HDF5 files": [[31, "loading-coancestry-matrices-from-hdf5-files"]], "Copying Coancestry Matrices": [[31, "copying-coancestry-matrices"]], "Coancestry and Kinship Methods": [[31, "coancestry-and-kinship-methods"]], "Retrieving coancestry values": [[31, "retrieving-coancestry-values"]], "Retrieving kinship values": [[31, "retrieving-kinship-values"]], "Retrieving the coancestry matrix as a specific format": [[31, "retrieving-the-coancestry-matrix-as-a-specific-format"]], "Determining if the coancestry matrix is positive semidefinite": [[31, "determining-if-the-coancestry-matrix-is-positive-semidefinite"]], "Applying jitter values along the diagonal": [[31, "applying-jitter-values-along-the-diagonal"]], "Calculating the matrix inverse": [[31, "calculating-the-matrix-inverse"]], "Calculating maximum attainable inbreeding": [[31, "calculating-maximum-attainable-inbreeding"]], "Calculating minimum attainable inbreeding": [[31, "calculating-minimum-attainable-inbreeding"]], "Maximum coancestry": [[31, "maximum-coancestry"]], "Mean coancestry": [[31, "mean-coancestry"]], "Minimum coancestry": [[31, "minimum-coancestry"]], "Exporting Coancestry Matrices": [[31, "exporting-coancestry-matrices"]], "Genetic Map Functions": [[32, "genetic-map-functions"]], "Summary of Genetic Map Function Classes": [[32, "summary-of-genetic-map-function-classes"]], "Summary of genetic map function classes in the pybrops.popgen.gmap module": [[32, "id1"]], "Loading Genetic Map Function Modules": [[32, "loading-genetic-map-function-modules"]], "Constructing Genetic Map Function Objects": [[32, "constructing-genetic-map-function-objects"]], "Calculating Recombination Probabilities": [[32, "calculating-recombination-probabilities"]], "Calculating Genetic Map Distances": [[32, "calculating-genetic-map-distances"]], "Calculating Sequential and Pairwise Recombination Probabilities": [[32, "calculating-sequential-and-pairwise-recombination-probabilities"]], "Calculating sequential recombination probabilities": [[32, "calculating-sequential-recombination-probabilities"]], "Calculating pairwise recombination probabilities": [[32, "calculating-pairwise-recombination-probabilities"]], "Genetic Maps": [[33, "genetic-maps"]], "Summary of Genetic Map Classes": [[33, "summary-of-genetic-map-classes"]], "Summary of genetic map classes in the pybrops.popgen.gmap module": [[33, "id1"]], "Loading Genetic Map Modules": [[33, "loading-genetic-map-modules"]], "Creating Genetic Maps": [[33, "creating-genetic-maps"]], "Creating genetic maps from NumPy arrays": [[33, "creating-genetic-maps-from-numpy-arrays"]], "Reading genetic maps from a file": [[33, "reading-genetic-maps-from-a-file"]], "Genetic Map Properties": [[33, "genetic-map-properties"]], "Marker variant properties": [[33, "marker-variant-properties"], [34, "marker-variant-properties"], [35, "marker-variant-properties"]], "Summary of GeneticMap marker variant properties": [[33, "id2"]], "Spline properties": [[33, "spline-properties"]], "Summary of GeneticMap spline properties": [[33, "id3"]], "Copying Genetic Maps": [[33, "copying-genetic-maps"]], "Sorting and Grouping Genetic Maps": [[33, "sorting-and-grouping-genetic-maps"]], "Reordering map elements": [[33, "reordering-map-elements"]], "Lexsorting map elements": [[33, "lexsorting-map-elements"]], "Sorting map elements": [[33, "sorting-map-elements"]], "Grouping map elements": [[33, "grouping-map-elements"]], "Genetic Map Congruency": [[33, "genetic-map-congruency"]], "Checking for congruency": [[33, "checking-for-congruency"]], "Removing map discrepancies": [[33, "removing-map-discrepancies"]], "Building Interpolation Splines": [[33, "building-interpolation-splines"]], "Interpolating Genetic Positions": [[33, "interpolating-genetic-positions"]], "Genotype Matrices": [[34, "genotype-matrices"]], "Summary of Genotype Matrix Classes": [[34, "summary-of-genotype-matrix-classes"]], "Summary of genotype matrix classes in the pybrops.popgen.gmat module": [[34, "id1"]], "Creating Genotype Matrices": [[34, "creating-genotype-matrices"]], "Creating genotype matrices from NumPy arrays": [[34, "creating-genotype-matrices-from-numpy-arrays"]], "Loading genotype matrices from VCF files": [[34, "loading-genotype-matrices-from-vcf-files"]], "Loading genotype matrices from HDF5 files": [[34, "loading-genotype-matrices-from-hdf5-files"]], "Genotype Matrix Properties": [[34, "genotype-matrix-properties"]], "Summary of GenotypeMatrix general properties": [[34, "id2"]], "Summary of GenotypeMatrix taxa properties": [[34, "id3"]], "Summary of GenotypeMatrix marker variant properties": [[34, "id4"]], "Copying Genotype Matrices": [[34, "copying-genotype-matrices"]], "Population allele counts": [[34, "population-allele-counts"]], "Population allele frequencies": [[34, "population-allele-frequencies"]], "Population allele polymorphism presence": [[34, "population-allele-polymorphism-presence"]], "Population genotype counts": [[34, "population-genotype-counts"]], "Population genotype frequencies": [[34, "population-genotype-frequencies"]], "Population minor allele frequencies": [[34, "population-minor-allele-frequencies"]], "Population mean expected heterozygosity": [[34, "population-mean-expected-heterozygosity"]], "Taxa allele counts": [[34, "taxa-allele-counts"]], "Taxa allele frequencies": [[34, "taxa-allele-frequencies"]], "Saving Genotype Matrices": [[34, "saving-genotype-matrices"], [35, "saving-genotype-matrices"]], "Phased Genotype Matrices": [[35, "phased-genotype-matrices"]], "Summary of Phased Genotype Matrix Classes": [[35, "summary-of-phased-genotype-matrix-classes"]], "Summary of phased genotype matrix classes in the pybrops.popgen.gmat module": [[35, "id1"]], "Creating Phased Genotype Matrices": [[35, "creating-phased-genotype-matrices"]], "Creating phased genotype matrices from NumPy arrays": [[35, "creating-phased-genotype-matrices-from-numpy-arrays"]], "Loading phased genotype matrices from VCF files": [[35, "loading-phased-genotype-matrices-from-vcf-files"]], "Loading phased genotype matrices from HDF5 files": [[35, "loading-phased-genotype-matrices-from-hdf5-files"]], "Phased Genotype Matrix Properties": [[35, "phased-genotype-matrix-properties"]], "Summary of PhasedGenotypeMatrix general properties": [[35, "id2"]], "Phase properties": [[35, "phase-properties"]], "Summary of PhasedGenotypeMatrix phase properties": [[35, "id3"]], "Summary of PhasedGenotypeMatrix taxa properties": [[35, "id4"]], "Summary of PhasedGenotypeMatrix marker variant properties": [[35, "id5"]], "Copying Phased Genotype Matrices": [[35, "copying-phased-genotype-matrices"]], "Phased Genotype Matrix Element Copy-On-Manipulation": [[35, "phased-genotype-matrix-element-copy-on-manipulation"]], "delete marker variants": [[35, "delete-marker-variants"]], "Phased Genotype Matrix Element In-Place-Manipulation": [[35, "phased-genotype-matrix-element-in-place-manipulation"]], "remove marker variants": [[35, "remove-marker-variants"]], "Reordering": [[35, "reordering"]], "reorder marker variants": [[35, "reorder-marker-variants"]], "Lexsorting": [[35, "lexsorting"]], "lexsort marker variants": [[35, "lexsort-marker-variants"]], "Sorting": [[35, "sorting"]], "sort marker variants": [[35, "sort-marker-variants"]], "Grouping": [[35, "grouping"]], "group taxa": [[35, "group-taxa"]], "group marker variants": [[35, "group-marker-variants"]], "Write to HDF5": [[35, "write-to-hdf5"]], "Standard PyBrOpS Usage": [[36, "standard-pybrops-usage"]], "Core Infrastructure Usage:": [[36, null]], "Population Genetics Modules Usage:": [[36, null]], "Optimization Modules Usage:": [[36, null]], "Genomic Modeling Modules Usage:": [[36, null]], "Breeding Protocol Modules Usage:": [[36, null]], "Breeding Operator Modules Usage:": [[36, null]], "Breeding Program Simulation Examples:": [[36, null]]}, "indexentries": {}})