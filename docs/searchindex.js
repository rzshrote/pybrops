Search.setIndex({"docnames": ["advanced_usage/advanced_usage", "api", "contributing/contributing", "examples", "faq/faq", "fundamentals/architecture/architecture", "fundamentals/architecture/philosophy", "fundamentals/core_infrastructure/core_infrastructure", "fundamentals/data_types/breeding_simulation", "fundamentals/data_types/data_types", "fundamentals/data_types/genomic_modeling", "fundamentals/data_types/optimization", "fundamentals/data_types/population_genetics", "fundamentals/fundamentals", "fundamentals/simulation/philosophy", "index", "installation/installation", "prerequisites/prerequisites", "standard_usage/breeding_operators/evaluation_operators", "standard_usage/breeding_operators/initialization_operators", "standard_usage/breeding_operators/logbooks", "standard_usage/breeding_operators/mating_operators", "standard_usage/breeding_operators/parental_selection_operators", "standard_usage/breeding_operators/survivor_selection_operators", "standard_usage/breeding_protocols/breeding_value_protocols", "standard_usage/breeding_protocols/genotyping_protocols", "standard_usage/breeding_protocols/mating_protocols", "standard_usage/breeding_protocols/phenotyping_protocols", "standard_usage/breeding_protocols/selection_protocols", "standard_usage/core_infrastructure/random_number_generation", "standard_usage/genomic_modeling/genomic_models", "standard_usage/genomic_modeling/variance_matrices", "standard_usage/optimization/optimization_algorithms", "standard_usage/optimization/optimization_problems", "standard_usage/optimization/optimization_solutions", "standard_usage/population_genetics/breeding_value_matrices", "standard_usage/population_genetics/coancestry_matrices", "standard_usage/population_genetics/genetic_map_functions", "standard_usage/population_genetics/genetic_maps", "standard_usage/population_genetics/genotype_matrices", "standard_usage/population_genetics/phased_genotype_matrices", "standard_usage/standard_usage"], "filenames": ["advanced_usage/advanced_usage.rst", "api.rst", "contributing/contributing.rst", "examples.rst", "faq/faq.rst", "fundamentals/architecture/architecture.rst", "fundamentals/architecture/philosophy.rst", "fundamentals/core_infrastructure/core_infrastructure.rst", "fundamentals/data_types/breeding_simulation.rst", "fundamentals/data_types/data_types.rst", "fundamentals/data_types/genomic_modeling.rst", "fundamentals/data_types/optimization.rst", "fundamentals/data_types/population_genetics.rst", "fundamentals/fundamentals.rst", "fundamentals/simulation/philosophy.rst", "index.rst", "installation/installation.rst", "prerequisites/prerequisites.rst", "standard_usage/breeding_operators/evaluation_operators.rst", "standard_usage/breeding_operators/initialization_operators.rst", "standard_usage/breeding_operators/logbooks.rst", "standard_usage/breeding_operators/mating_operators.rst", "standard_usage/breeding_operators/parental_selection_operators.rst", "standard_usage/breeding_operators/survivor_selection_operators.rst", "standard_usage/breeding_protocols/breeding_value_protocols.rst", "standard_usage/breeding_protocols/genotyping_protocols.rst", "standard_usage/breeding_protocols/mating_protocols.rst", "standard_usage/breeding_protocols/phenotyping_protocols.rst", "standard_usage/breeding_protocols/selection_protocols.rst", "standard_usage/core_infrastructure/random_number_generation.rst", "standard_usage/genomic_modeling/genomic_models.rst", "standard_usage/genomic_modeling/variance_matrices.rst", "standard_usage/optimization/optimization_algorithms.rst", "standard_usage/optimization/optimization_problems.rst", "standard_usage/optimization/optimization_solutions.rst", "standard_usage/population_genetics/breeding_value_matrices.rst", "standard_usage/population_genetics/coancestry_matrices.rst", "standard_usage/population_genetics/genetic_map_functions.rst", "standard_usage/population_genetics/genetic_maps.rst", "standard_usage/population_genetics/genotype_matrices.rst", "standard_usage/population_genetics/phased_genotype_matrices.rst", "standard_usage/standard_usage.rst"], "titles": ["Advanced PyBrOpS Usage", "&lt;no title&gt;", "Contributing to PyBrOpS", "Examples", "Frequently Asked Questions", "PyBrOpS Implemented Software Architecture", "PyBrOpS Software Architecture Philosophy", "Core PyBrOpS Infrastructure", "Breeding Simulation Data Types", "Data Types in PyBrOpS", "Genomic Modeling Data Types", "Optimization Data Types", "Population Genetics Data Types", "PyBrOpS Fundamentals", "PyBrOpS Simulation Philosophy", "PyBrOpS Main Page", "Installation", "Prerequisites", "Evaluation Operators", "Initialization Operators", "Logbooks", "Mating Operators", "Parental Selection Operators", "Survivor Selection Operators", "Breeding Value Estimation Protocols", "Genotyping Protocols", "Mating Protocols", "Phenotyping Protocols", "Selection Protocols", "Random Number Generation", "Genomic Models", "Variance Matrices", "Optimization Algorithms", "Optimization Problems", "Optimization Solutions", "Breeding Value Matrices", "Coancestry Matrices", "Genetic Map Functions", "Genetic Maps", "Genotype Matrices", "Phased Genotype Matrices", "Standard PyBrOpS Usage"], "terms": {"under": 0, "construct": [0, 24, 25, 26, 27, 28, 36, 38, 39, 40], "guid": [6, 17], "its": [6, 11, 12, 15, 16, 17, 35, 37, 40], "By": 6, "i": [6, 9, 10, 11, 12, 16, 17, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 37, 38, 39, 40], "easili": 6, "comprehens": [6, 9, 15], "extent": 6, "maintain": 6, "mani": [6, 9, 10, 30], "sourc": [6, 16], "commonli": 6, "plant": [6, 15], "anim": [6, 15], "breed": [6, 9, 10, 11, 15, 38, 39, 40], "commun": 6, "develop": 6, "robust": 6, "set": [6, 13, 15, 24, 28, 29, 33, 38, 39], "make": [6, 12, 15, 16, 17, 26, 28, 35, 36, 38, 39], "them": [6, 15], "difficult": 6, "understand": [6, 13], "extend": [6, 15, 29], "The": [6, 9, 10, 11, 12, 16, 26, 28, 29, 30, 31, 34, 35, 36, 37, 38, 39, 40], "aim": 6, "remedi": 6, "thi": [6, 9, 10, 11, 12, 13, 15, 16, 28, 30, 33, 35, 37, 38, 39, 40], "maxim": 6, "user": [6, 17, 38], "briefli": [6, 10, 30], "ar": [6, 10, 11, 12, 15, 16, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40], "summar": [6, 10, 30, 31, 37, 38, 39, 40], "descript": [6, 10, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40], "A": [6, 28, 30, 33, 39, 40], "modul": [6, 10, 11, 12, 15, 29], "should": 6, "respons": 6, "onli": [6, 11, 12, 28, 32, 38, 39], "one": [6, 28, 29, 35, 38, 39], "task": 6, "have": [6, 10, 12, 31, 35, 37, 38, 39, 40], "reason": 6, "chang": [6, 28, 38, 39], "exens": 6, "modif": 6, "deriv": [6, 10, 11, 12, 30, 31, 34, 36, 40], "substitut": 6, "base": [6, 15, 16, 29, 38], "narrow": [6, 24, 27], "focu": 6, "so": [6, 28, 37, 38, 39], "prevent": 6, "unnecessari": 6, "abstract": [6, 24, 25, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40], "concret": [6, 24, 25, 26, 27, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40], "To": [6, 16, 38], "adher": 6, "heavi": 6, "class": [6, 10, 11, 12], "python": [6, 15, 17, 29, 38, 39], "": [6, 11, 15, 28, 34, 38, 39], "sinc": [6, 11, 12, 28, 32], "duck": 6, "type": [6, 13, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40], "manual": [6, 16, 38], "enforc": 6, "seek": 6, "creat": [6, 10, 12, 16, 17, 32, 33, 37], "new": [6, 15, 29, 31, 35, 36, 38, 39, 40], "implement": [6, 10, 11, 13, 24, 25, 26, 27, 30, 31, 32, 33, 35, 36, 39, 40], "must": [6, 11, 16, 33, 38, 39, 40], "ensur": [6, 15], "function": [6, 10, 11, 15, 28, 29, 30, 33, 38, 40, 41], "requir": [6, 11, 26, 32, 33, 37, 39], "everi": 6, "famili": [6, 10, 11, 12], "ha": [6, 31, 35, 36, 38, 39, 40], "singular": 6, "focus": [6, 39], "purpos": [6, 9, 10, 11, 12, 30, 31, 34, 38, 39, 40], "repres": [6, 11, 12, 24, 25, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40], "fundament": [6, 15], "entiti": 6, "data": [6, 13, 16, 38, 39, 40], "structur": [6, 13], "program": [6, 11, 12, 15, 16, 17, 39], "almost": 6, "all": [6, 11, 24, 25, 26, 27, 28, 30, 32, 33, 34, 36, 37, 38, 39, 40], "least": 6, "most": [6, 12, 37, 39], "method": [6, 11, 32, 33, 35, 37, 38, 39, 40], "These": [6, 29, 37, 38, 39, 40], "two": [6, 10, 26, 28, 31, 35, 37, 38, 39], "decis": [6, 11, 12, 15, 28, 32, 33, 34, 35, 36, 39], "allow": [6, 10, 12, 15, 30, 31, 37, 38, 39], "If": [6, 17, 31, 35, 36, 38, 40], "featur": [6, 11, 15], "desir": [6, 17, 28, 29, 38], "can": [6, 9, 10, 12, 16, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40], "simpli": 6, "instead": 6, "modifi": [6, 39], "current": [6, 39], "which": [6, 10, 11, 12, 25, 28, 29, 30, 31, 33, 35, 36, 37, 38, 39, 40], "an": [6, 9, 10, 11, 15, 16, 24, 25, 27, 28, 29, 31, 33, 34, 35, 36, 37, 38, 39, 40], "do": [6, 16, 28, 38], "signatur": 6, "ident": 6, "those": [6, 9, 38], "specifi": [6, 15], "within": [6, 12, 24, 27, 28, 29, 37, 39, 40], "same": [6, 12, 38, 40], "each": [6, 24, 27, 31, 33, 36, 38, 39, 40], "other": [6, 11, 15, 39], "provid": [6, 9, 10, 12, 15, 29, 30, 37, 38, 40], "altern": [6, 16, 39, 40], "lean": 6, "from": [6, 10, 11, 12, 15, 24, 26, 27, 28, 29, 32, 33, 34, 37], "As": [6, 10, 30], "mention": 6, "section": [6, 9, 39], "decoupl": 6, "improv": [6, 15], "modular": [6, 15], "larg": 9, "softwar": [9, 11, 13, 15], "packag": [9, 15, 17], "differ": [9, 11, 12, 35], "goal": [9, 15], "brief": 9, "overview": [9, 15], "essenti": [9, 11, 29, 34, 40], "group": [9, 24, 25, 26, 27, 28, 37], "four": [9, 10, 26, 31, 37], "gener": [9, 11, 32, 41], "categori": [9, 38], "associ": [9, 15, 39, 40], "popul": [9, 10, 28, 38, 40], "genet": [9, 10, 16, 17, 26, 32, 39, 40], "genom": [9, 12, 24, 26, 27, 28, 35, 36, 38, 39, 40], "model": [9, 12, 24, 27, 28, 35, 36, 38, 39], "optim": [9, 15], "final": [9, 39], "simul": [9, 11, 12, 13, 15, 29, 37, 38, 39], "pybrop": [10, 11, 12, 16, 17, 35], "gmod": [10, 31], "hous": [10, 12], "submodul": [10, 11, 33, 34, 37], "relat": [10, 12, 39], "In": [10, 16, 28, 29, 33, 37, 38], "context": 10, "refer": [10, 24, 38, 39, 40], "anyth": 10, "take": [10, 25, 28], "inform": [10, 12, 15, 35, 38, 39], "input": [10, 30, 35, 40], "output": [10, 25, 33], "genomicmodel": [10, 30, 31], "represent": [10, 12, 30, 31, 37, 40], "ani": [10, 30, 39], "primarili": [10, 30, 39], "fit": [10, 30], "predict": [10, 12, 28, 35, 36, 39], "estim": [10, 12, 28, 35, 36, 37, 38, 39, 41], "valu": [10, 26, 27, 28, 32, 33, 38, 39, 40, 41], "also": [10, 11, 12, 16, 29, 30, 33, 35, 38, 39], "genic": 10, "allel": [10, 12, 40], "metric": 10, "upper": 10, "lower": 10, "select": [10, 12, 41], "limit": 10, "There": [10, 30, 38, 39], "interfac": [10, 11, 16, 24, 25, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40], "main": [10, 30], "divid": [10, 30], "lineargenomicmodel": [10, 30], "nonlineargenomicmodel": [10, 30], "name": [10, 12, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40], "suggest": [10, 12, 30], "former": [10, 12, 30, 38], "defin": [10, 11, 28, 30, 33, 36, 38], "linear": [10, 16, 24, 27, 28, 30, 31, 38], "natur": [10, 11, 30, 32, 40], "while": [10, 12, 30, 38], "latter": [10, 12, 30, 38], "non": [10, 26, 30, 33, 40], "mai": [10, 11, 16, 28, 29, 30, 37, 38, 39, 40], "us": [10, 11, 12, 15, 16, 17, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40], "machin": [10, 30], "learn": [10, 30], "sever": [10, 15, 16, 30, 31, 37, 38, 39, 40], "subtyp": [10, 30], "below": [10, 16, 29, 30, 31, 37, 38, 39, 40], "additivelineargenomicmodel": [10, 30, 31], "assum": [10, 30, 31, 40], "strictli": [10, 30], "addit": [10, 24, 27, 28, 31, 33, 38, 39, 40], "effect": [10, 15, 24, 27, 28, 31], "coancestrylineargenomicmodel": [10, 30], "calcul": [10, 12, 24, 28, 31, 33, 39, 40], "coancestri": [10, 30, 41], "relationship": [10, 12, 30, 36, 39], "additivedominancelineargenomicmodel": [10, 30], "domin": [10, 30, 39], "additivedominanceepistaticlineargenomicmodel": [10, 30], "epistat": [10, 30], "geneticvariancematrix": 10, "genicvariancematrix": 10, "expect": [10, 12, 28, 31, 37, 40], "progeni": [10, 12, 31, 37], "trait": [10, 24, 28], "cross": [10, 26, 28, 31], "between": [10, 12, 31, 35, 36, 37, 39, 40], "individu": [10, 12, 24, 28, 31, 33, 36, 39, 40], "linkag": [10, 31, 38], "both": [10, 15, 29, 31, 37], "util": [10, 11, 31, 38], "design": [10, 13, 15, 31], "agnost": [10, 31], "For": [10, 17, 31], "exist": [10, 15, 31], "determinist": [10, 31], "equat": [10, 31], "three": [10, 26, 31, 33, 39], "wai": [10, 26, 28, 31], "additivegeneticvariancematrix": [10, 31], "additivegenicvariancematrix": [10, 31], "respectfulli": [10, 31], "thei": [10, 12, 16, 31], "densetwowaydhadditivegeneticvariancematrix": [10, 31], "densethreewaydhadditivegeneticvariancematrix": [10, 31], "densefourwaydhadditivegeneticvariancematrix": [10, 31], "densedihybriddhadditivegeneticvariancematrix": [10, 31], "dihybrid": [10, 31], "One": 11, "kei": [11, 31, 33, 35, 36, 38, 39, 40], "separ": 11, "abil": [11, 12, 15, 38], "nativ": 11, "perform": [11, 15, 28, 38, 39], "singl": [11, 15, 29], "multi": [11, 15], "object": [11, 12, 15, 24, 25, 26, 27, 30, 31, 35, 38, 39, 40], "encapul": 11, "appropri": 11, "approach": [11, 15], "framework": [11, 15, 17], "centric": 11, "strategi": [11, 15, 28], "conduct": [11, 38], "opitm": 11, "infrastructur": [11, 13], "found": [11, 29, 37, 38, 39, 40], "opt": 11, "prob": [11, 32], "contain": [11, 33, 34, 37, 38, 39, 40], "metadata": [11, 33, 34, 38, 39, 40], "pertain": [11, 33, 34], "space": [11, 28, 32, 33, 34], "inequ": [11, 28, 33, 34], "equal": [11, 28, 33, 34], "constraint": [11, 28, 33, 34], "evalu": [11, 15, 28, 41], "candid": 11, "express": [11, 33], "minim": [11, 28, 33], "soln": [11, 28], "identifi": [11, 34], "store": [11, 12, 31, 34, 35, 36, 39, 40], "result": [11, 34], "regardless": [11, 32], "optimizationalgorithm": [11, 32], "veri": [11, 32], "divers": [11, 32], "popgen": [12, 35], "serv": [12, 13], "foundat": 12, "marker": [12, 24, 25, 26, 27, 28, 31, 36, 37], "wise": [12, 38], "posit": [12, 24, 25, 26, 27, 28, 31, 37, 39, 40], "mate": [12, 28, 38, 41], "read": [12, 16, 31, 35, 36, 39, 40], "write": [12, 15, 35, 36, 38, 39], "interpol": 12, "via": [12, 29, 38, 39, 40], "geneticmap": 12, "file": [12, 16, 30], "real": [12, 28, 32, 33, 34, 38, 39], "recombin": [12, 38, 39, 40], "ad": [12, 38], "realism": [12, 38], "geneticmapfunct": [12, 37], "convert": [12, 33, 37], "probabl": [12, 26, 39, 40], "varianc": [12, 37, 41], "popular": [12, 37], "like": [12, 37, 39, 40], "haldan": [12, 37], "kosambi": [12, 37], "out": [12, 25, 28, 30, 31, 33, 35, 36, 37, 38, 39, 40], "box": [12, 37], "perhap": [12, 39], "import": [12, 15, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40], "genotypematrix": [12, 40], "possibl": [12, 15, 39], "vcf": [12, 16], "world": [12, 39], "phasedgenotypematrix": 12, "includ": [12, 39, 40], "state": 12, "chromosom": [12, 37, 38, 39, 40], "regular": [12, 40], "breedingvaluematrix": 12, "impli": [12, 35], "coancestrymatrix": 12, "document": 13, "describ": 13, "crucial": 13, "concept": 13, "architectur": [13, 15], "start": [13, 31, 35, 36, 37, 38, 39, 40], "point": [13, 28], "philosophi": 13, "core": [13, 29], "capabl": 15, "stochast": 15, "empow": 15, "research": [15, 29], "breeder": 15, "explor": 15, "silico": 15, "studi": 15, "novel": 15, "establish": 15, "methodologi": 15, "drive": 15, "signific": 15, "although": 15, "extant": 15, "apart": 15, "versatil": 15, "tool": 15, "wide": 15, "rang": [15, 24, 25, 26, 27, 28, 30, 31, 36, 38, 39, 40], "applic": 15, "enabl": 15, "multipl": [15, 39], "simultan": 15, "visual": 15, "complex": 15, "tradeoff": 15, "inher": 15, "lead": 15, "more": 15, "built": [15, 38], "solid": 15, "principl": 15, "extens": [15, 17], "flexibl": 15, "adapt": 15, "meet": 15, "specif": [15, 38, 39], "need": [15, 16, 28, 38], "custom": [15, 17, 28], "expans": 15, "seamlessli": 15, "integr": [15, 33], "ones": [15, 30], "evolv": 15, "adopt": 15, "script": [15, 16], "offer": [15, 39], "maximum": [15, 28], "control": 15, "variou": [15, 38, 39], "aspect": 15, "through": [15, 16], "easi": 15, "precis": 15, "fine": 15, "tune": 15, "explain": 15, "instal": 15, "prerequisit": 15, "standard": [15, 28], "usag": [15, 29, 37], "advanc": 15, "contribut": [15, 28, 31], "frequent": 15, "ask": 15, "question": 15, "exampl": [15, 24, 26, 27, 28, 30, 31, 35, 37, 38, 39, 40], "index": [15, 31, 35, 36, 39, 40], "search": [15, 28], "3": [16, 24, 25, 26, 27, 28, 31, 35, 36, 38, 39, 40], "8": [16, 37], "0": [16, 24, 25, 26, 27, 28, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40], "reli": [16, 17], "cyvcf2": 16, "30": 16, "14": 16, "cvxpy": 16, "1": [16, 24, 25, 26, 27, 28, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40], "18": 16, "deap": 16, "algorithm": [16, 17, 41], "h5py": 16, "6": 16, "hdf5": 16, "support": [16, 37, 38], "matplotlib": 16, "5": [16, 26, 29, 31, 33, 34, 35, 36, 37, 39, 40], "graphic": 16, "numpi": [16, 17, 24, 25, 26, 27, 28, 29, 33, 34, 37], "22": 16, "2": [16, 24, 25, 26, 27, 28, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40], "matrix": [16, 24, 25, 26, 27, 28], "storag": 16, "algebra": 16, "panda": 16, "4": [16, 24, 25, 26, 27, 28, 31, 35, 36, 37, 39, 40], "frame": 16, "pymoo": [16, 17, 33], "scipi": 16, "miscellan": [16, 24, 27, 28, 30, 31], "numer": [16, 39, 40], "routin": [16, 39], "follow": [16, 26, 32, 33, 34, 36, 39, 40], "pytest": 16, "7": [16, 24, 27], "unit": [16, 35], "test": [16, 28, 30, 38], "datadir": 16, "setuptool": 16, "build": 16, "wheel": 16, "On": [16, 38], "you": [16, 17], "header": 16, "even": 16, "though": 16, "written": 16, "pure": 16, "some": [16, 29, 30, 37, 38], "compil": 16, "command": 16, "distro": 16, "fedora": 16, "sudo": 16, "dnf": 16, "python3": 16, "devel": 16, "ubuntu": 16, "apt": 16, "dev": 16, "pip3": 16, "first": [16, 28, 31, 35, 36, 39, 40], "clone": 16, "repositori": [16, 29], "git": 16, "http": 16, "github": 16, "com": 16, "rzshrote": 16, "It": 16, "best": [16, 28], "practic": 16, "virtual": 16, "environ": [16, 24, 27], "where": [16, 28, 33, 38, 40], "makefil": 16, "done": [16, 27, 38, 39], "m": [16, 40], "venv": 16, "env": 16, "bin": 16, "activ": 16, "pip": 16, "edit": 16, "next": 16, "either": [16, 33], "sh": 16, "bash": 16, "now": 16, "access": [16, 39], "line": [16, 26], "prompt": 16, "execut": 16, "knowledg": 17, "languag": 17, "refresh": 17, "see": 17, "tutori": 17, "arrai": [17, 24, 25, 26, 27, 28, 33, 37], "breedingvalueprotocol": 24, "truebreedingvalu": 24, "true": [24, 27, 28, 33, 38], "meanphenotypicbreedingvalu": 24, "simpl": 24, "mean": [24, 40], "bvprot": 24, "taxa_col": 24, "taxa": [24, 25, 26, 27, 28], "trait_col": 24, "trait01": 24, "trait02": 24, "paramet": [24, 25, 26, 27, 28, 30, 31, 33, 34, 35, 36, 40], "nfix": [24, 27, 28, 30, 31], "number": [24, 26, 27, 28, 30, 31, 33, 35, 36, 38, 39, 40, 41], "fix": [24, 27, 28, 30, 31], "ntrait": [24, 27, 28, 30, 31, 35], "nmisc": [24, 27, 28, 30, 31], "random": [24, 25, 26, 27, 28, 30, 31, 33, 34, 35, 36, 38, 39, 40, 41], "naddit": [24, 27, 28, 30, 31], "50": [24, 26, 27, 28, 30, 31], "dummi": [24, 27, 28, 30, 31], "beta": [24, 27, 28, 30, 31], "u_misc": [24, 27, 28, 30, 31], "u_a": [24, 27, 28, 30, 31], "str": [24, 25, 26, 27, 28, 30, 31, 35, 36, 38, 39, 40], "zfill": [24, 25, 26, 27, 28, 30, 31, 35, 36, 38, 39, 40], "dtype": [24, 25, 26, 27, 28, 30, 31, 33, 35, 36, 38, 39, 40], "algmod": [24, 27, 28, 30, 31], "denseadditivelineargenomicmodel": [24, 27, 28, 30, 31], "model_nam": [24, 27, 28, 30, 31], "param": [24, 27, 28, 30, 31], "none": [24, 27, 28, 30, 31, 33, 34, 36, 38, 39], "shape": [24, 25, 26, 27, 28, 30, 31, 33, 35, 36, 39, 40], "ntaxa": [24, 25, 26, 27, 28, 30, 31, 35, 36, 39, 40], "100": [24, 25, 26, 27, 28, 31, 32, 35, 36, 38, 40], "nvrnt": [24, 25, 26, 27, 28, 30, 31, 36, 38, 39, 40], "ngroup": [24, 25, 26, 27, 28, 31, 35, 36, 39, 40], "20": [24, 25, 26, 27, 28, 31, 35, 36, 38, 40], "nchrom": [24, 25, 26, 27, 28, 31, 36, 39, 40], "10": [24, 25, 26, 27, 28, 31, 33, 34, 35, 36, 38, 39, 40], "nphase": [24, 25, 26, 27, 28, 39, 40], "genotyp": [24, 26, 27, 28, 30, 31, 35, 36, 41], "mat": [24, 25, 26, 27, 28, 30, 31, 35, 36, 39, 40], "randint": [24, 25, 26, 27, 28, 30, 31, 35, 36, 38, 39, 40], "size": [24, 25, 26, 27, 28, 30, 31, 35, 36, 39, 40], "astyp": [24, 25, 26, 27, 28, 30, 31, 36, 38, 39, 40], "int8": [24, 25, 26, 27, 28, 30, 31, 36, 39, 40], "taxon": [24, 25, 26, 27, 28, 31, 35, 36, 39, 40], "taxa_grp": [24, 25, 26, 27, 28, 31, 35, 36, 39, 40], "sort": [24, 25, 26, 27, 28], "variant": [24, 25, 26, 27, 28, 31, 36], "chromsom": [24, 25, 26, 27, 28, 31, 36, 39, 40], "assign": [24, 25, 26, 27, 28, 30, 31, 36, 37, 38, 39, 40], "vrnt_chrgrp": [24, 25, 26, 27, 28, 31, 36, 37, 38, 39, 40], "physic": [24, 25, 26, 27, 28, 31, 36, 37, 38, 39, 40], "vrnt_phypo": [24, 25, 26, 27, 28, 31, 36, 37, 38, 39, 40], "choic": [24, 25, 26, 27, 28, 31, 36, 38, 39, 40], "1000000": [24, 25, 26, 27, 28, 31, 36, 39, 40], "replac": [24, 25, 26, 27, 28, 31, 36, 39, 40], "fals": [24, 25, 26, 27, 28, 31, 36, 38, 39, 40], "vrnt_name": [24, 25, 26, 27, 28, 31, 36, 38, 39, 40], "snp": [24, 25, 26, 27, 28, 31, 36, 38, 39, 40], "phase": [24, 25, 26, 27, 28, 39, 41], "scratch": [24, 25, 26, 27, 28, 31, 36, 39, 40], "pgmat": [24, 25, 26, 27, 28, 31, 40], "densephasedgenotypematrix": [24, 25, 26, 27, 28, 31, 40], "ploidi": [24, 25, 26, 27, 28, 30, 31, 36, 39, 40], "phenotyp": [24, 41], "nenv": [24, 27], "nrep": [24, 27], "replic": [24, 27], "ptprot": [24, 27], "g_e_phenotyp": [24, 27], "gpmod": [24, 27, 28], "sens": [24, 27], "herit": 24, "set_h2": [24, 27], "h2": [24, 27], "pheno_df": [24, 27], "without": [24, 27], "align": 24, "bvmat1": 24, "bvmat2": 24, "genotypingprotocol": 25, "denseunphasedgenotyp": 25, "whole": [25, 36, 38, 39], "produc": 25, "dens": [25, 30, 31, 36, 39, 40], "unphas": [25, 40], "creation": [25, 29], "argument": [25, 28, 33, 37], "gtprot": 25, "1000": [25, 26, 36, 40], "get": [25, 31, 32, 33, 35, 36], "gmat": [25, 28, 30, 36], "check": 25, "isinst": 25, "densegenotypematrix": [25, 28, 36, 39, 40], "child": [26, 27, 31, 32, 33, 34, 36, 37, 38, 39, 40], "selfcross": 26, "self": [26, 33], "fertil": 26, "twowaycross": 26, "twowaydhcross": 26, "doubl": 26, "haploid": [26, 28], "threewaycross": 26, "threewaydhcross": 26, "fourwaycross": 26, "fourwaydhcross": 26, "initi": [26, 29, 41], "oper": 26, "counter": 26, "zero": [26, 28, 33, 35], "mate_self": 26, "mate_2w": 26, "mate_2wdh": 26, "mate_3w": 26, "mate_3wdh": 26, "mate_4w": 26, "mate_4wdh": 26, "option": [26, 31, 33, 35, 36, 38, 39, 40], "progeny_count": 26, "family_count": 26, "rest": 26, "mtprot": 26, "nparent": [26, 28], "parent": [26, 31, 40, 41], "vrnt_genpo": [26, 31, 36, 37, 38, 39, 40], "uniform": [26, 31, 33, 34, 36], "crossov": [26, 39, 40], "vrnt_xoprob": [26, 36, 39, 40], "step": 26, "configu": 26, "xconfig": [26, 28], "nmate": [26, 28], "nprogeni": [26, 28, 31], "nself": [26, 31], "phenotypingprotocol": 27, "truephenotyp": 27, "error": [27, 38], "environment": 27, "broad": 27, "selectionprotocol": 28, "binaryselectionprotocol": 28, "integerselectionprotocol": 28, "realselectionprotocol": 28, "subsetselectionprotocol": 28, "binari": [28, 32, 33, 34, 40], "integ": [28, 31, 32, 33, 34, 35, 36, 39, 40], "subset": [28, 32, 33, 34], "respect": [28, 37], "mateselectionprotocol": 28, "binarymateselectionprotocol": 28, "integermateselectionprotocol": 28, "realmateselectionprotocol": 28, "subsetmateselectionprotocol": 28, "estimatedbreedingvaluebinaryselect": 28, "estimatedbreedingvalueintegerselect": 28, "estimatedbreedingvaluerealselect": 28, "estimatedbreedingvaluesubsetselect": 28, "expectedmaximumbreedingvaluebinaryselect": 28, "expectedmaximumbreedingvalueintegerselect": 28, "expectedmaximumbreedingvaluerealselect": 28, "expectedmaximumbreedingvaluesubsetselect": 28, "familyestimatedbreedingvaluebinaryselect": 28, "familyestimatedbreedingvalueintegerselect": 28, "familyestimatedbreedingvaluerealselect": 28, "familyestimatedbreedingvaluesubsetselect": 28, "genomicestimatedbreedingvaluebinaryselect": 28, "genomicestimatedbreedingvalueintegerselect": 28, "genomicestimatedbreedingvaluerealselect": 28, "genomicestimatedbreedingvaluesubsetselect": 28, "genotypebuildersubsetselect": 28, "builder": 28, "optimalcontributionbinaryselect": 28, "optimalcontributionintegerselect": 28, "optimalcontributionrealselect": 28, "optimalcontributionsubsetselect": 28, "optimalhaploidvaluebinaryselect": 28, "optimalhaploidvalueintegerselect": 28, "optimalhaploidvaluerealselect": 28, "optimalhaploidvaluesubsetselect": 28, "optimalpopulationvaluesubsetselect": 28, "randombinaryselect": 28, "randomintegerselect": 28, "randomrealselect": 28, "randomsubsetselect": 28, "usefulnesscriterionbinaryselect": 28, "usefulnesscriterionintegerselect": 28, "usefulnesscriterionrealselect": 28, "usefulnesscriterionsubsetselect": 28, "criterion": 28, "weightedgenomicbinaryselect": 28, "weightedgenomicintegerselect": 28, "weightedgenomicrealselect": 28, "weightedgenomicsubsetselect": 28, "weight": 28, "ebv": 28, "estimatedbreedingvalueselect": 28, "embv": 28, "expectedmaximumbreedingvalueselect": 28, "familyestimatedbreedingvalueselect": 28, "gebv": [28, 30], "genomicestimatedbreedingvalueselect": 28, "gb": 28, "genotypebuilderselect": 28, "optimalcontributionselect": 28, "ohv": 28, "optimalhaploidvalueselect": 28, "opv": 28, "optimalpopulationvalueselect": 28, "randomselect": 28, "uc": 28, "usefulnesscriterionselect": 28, "weightedgenomicselect": 28, "selprot": 28, "ncross": [28, 31], "40": 28, "nobj": [28, 33, 34], "selprot_unconstrain": 28, "ten": 28, "total": 28, "suppos": 28, "we": 28, "negat": 28, "our": 28, "second": 28, "transform": [28, 35, 36], "def": [28, 33], "obj_tran": 28, "decnvec": 28, "ndarrai": [28, 33], "latentvec": 28, "maskvec": 28, "kwarg": [28, 33], "dict": [28, 33], "vector": [28, 33], "ndecn": [28, 33, 34], "latent": 28, "mask": [28, 39, 40], "return": [28, 33], "sum": [28, 33], "extract": [28, 39], "violat": [28, 33], "ineqcv_tran": 28, "minvec": 28, "minimum": 28, "neg": 28, "keyword": [28, 33], "obj_trans_kwarg": 28, "want": 28, "bool": 28, "ineqcv_trans_kwarg": 28, "don": 28, "t": 28, "care": 28, "about": [28, 38, 39], "inf": 28, "float": [28, 33], "selprot_constrain": 28, "nineqcv": [28, 33, 34], "prob_unconstrain": 28, "ptdf": 28, "bvmat": [28, 35], "t_cur": 28, "t_max": 28, "prob_constrain": 28, "solut": [28, 32, 41], "decn_spac": [28, 33, 34], "eval_unconstrain": 28, "evalfn": [28, 33], "eval_constrain": 28, "soln_constrain": 28, "sosolv": 28, "examin": 28, "soln_decn": [28, 34], "soln_obj": [28, 34], "soln_ineqcv": [28, 34], "soltuion": 28, "soln_eqcv": [28, 34], "soln_unconstrain": 28, "mosolv": 28, "formul": 28, "determin": [28, 35, 38, 39, 40], "selcfg_constrain": 28, "view": 28, "configur": 28, "pareto": 28, "frontier": 28, "closest": 28, "project": 28, "invari": 28, "how": [28, 39], "selcfg_unconstrain": 28, "bulk": 29, "synchron": 29, "underneath": 29, "begin": 29, "prng": 29, "reproduc": 29, "remain": 29, "independ": 29, "despit": 29, "share": [29, 38, 39], "mechan": 29, "illustr": [29, 38, 39, 40], "48823": 29, "instanc": [29, 37, 38], "spawn": 29, "stream": 29, "five": [29, 31, 35, 36, 39, 40], "prng_list": 29, "exhibit": 29, "directori": 29, "denselineargenomicmodel": 30, "hyperparamet": 30, "e": 30, "g": [30, 33], "u": [30, 38], "tmp": [30, 31, 33, 35, 36, 38, 39, 40], "deepcopi": [30, 31, 35, 36, 38, 39, 40], "x": [30, 33], "z": 30, "predict_numpi": 30, "cvobj": 30, "gtobj": 30, "matric": [30, 41], "b": 30, "y": 30, "normal": [30, 35], "score_numpi": 30, "ptobj": 30, "gebv_numpi": 30, "var": 30, "var_g_numpi": 30, "var_g": 30, "var_a_numpi": 30, "var_a": 30, "p": [30, 39, 40], "afreq": [30, 39, 40], "bulmer_numpi": 30, "usl_numpi": 30, "usl": 30, "lsl_numpi": 30, "lsl": 30, "count": [30, 40], "facount": 30, "frequenc": [30, 40], "fafreq": 30, "avail": [30, 39], "loci": [30, 38, 40], "faavail": 30, "fixat": 30, "fafix": 30, "dacount": 30, "dafreq": 30, "daavail": 30, "dafix": 30, "to_hdf5": [30, 31, 35, 36, 39, 40], "saved_algmod": 30, "h5": [30, 31, 35, 36, 39, 40], "from_hdf5": [30, 31, 35, 36, 39, 40], "densegeneticvariancematrix": 31, "semi": [31, 33, 34, 36], "denseadditivegeneticvariancematrix": 31, "densegenicvariancematrix": 31, "denseadditivegenicvariancematrix": 31, "densetwowaydhadditivegenicvariancematrix": 31, "densethreewaydhadditivegenicvariancematrix": 31, "densefourwaydhadditivegenicvariancematrix": 31, "densedihybriddhadditivegenicvariancematrix": 31, "gvmat": 31, "group_vrnt": [31, 36, 39, 40], "from_gmod": 31, "gmapfn": 31, "haldanemapfunct": [31, 37], "from_algmod": 31, "saved_vmat": 31, "saved_gvmat": 31, "raw": [31, 35, 36, 38, 39, 40], "pointer": [31, 35, 36, 39, 40], "mat_ndim": [31, 35, 36, 39, 40], "dimens": [31, 35, 36, 39, 40], "mat_shap": [31, 35, 36, 39, 40], "epgc": 31, "axi": [31, 33, 35, 36, 39, 40], "nsquar": [31, 36], "square_ax": [31, 36], "indic": [31, 35, 36, 38, 39, 40], "square_axes_len": [31, 36], "taxa_axi": [31, 35, 36, 39, 40], "along": [31, 35, 39, 40], "label": [31, 35, 36, 38, 39, 40], "taxa_grp_nam": [31, 35, 36, 39, 40], "taxa_grp_stix": [31, 35, 36, 39, 40], "inclus": [31, 35, 36, 39, 40], "taxa_grp_spix": [31, 35, 36, 39, 40], "stop": [31, 35, 36, 38, 39, 40], "exclus": [31, 35, 36, 39, 40], "taxa_grp_len": [31, 35, 36, 39, 40], "trait_axi": [31, 35], "deep": [31, 40], "demonstr": [31, 35, 36, 37, 38, 39, 40], "newvmat": 31, "newgvmat": 31, "adjoin_taxa": [31, 35, 36, 39, 40], "adjoin_trait": [31, 35], "delete_taxa": [31, 35, 36, 39, 40], "slice": [31, 35, 36, 39, 40], "sequenc": [31, 35, 36, 39, 40], "delete_trait": [31, 35], "befor": [31, 35, 36, 38, 39, 40], "insert_taxa": [31, 35, 39, 40], "insert_trait": [31, 35], "select_taxa": [31, 35, 36, 39, 40], "select_trait": [31, 35], "origin": [31, 35, 36, 38, 39, 40], "append_taxa": [31, 35, 36, 39, 40], "append_trait": [31, 35], "remove_taxa": [31, 35, 36, 39, 40], "remove_trait": [31, 35], "incorp": [31, 35, 36, 39, 40], "incorp_taxa": [31, 35, 36, 39, 40], "incorp_trait": [31, 35], "concat": [31, 35, 39, 40], "concat_taxa": [31, 35, 39, 40], "concat_trait": [31, 35], "arang": [31, 35, 36, 38, 39, 40], "shuffl": [31, 35, 36, 38, 39, 40], "reorder_taxa": [31, 35, 36, 39, 40], "reorder_trait": [31, 35], "key1": [31, 35, 36, 38, 39, 40], "key2": [31, 35, 36, 38, 39, 40], "lexsort_taxa": [31, 35, 36, 39, 40], "sort_taxa": [31, 35, 36, 39, 40], "sort_trait": [31, 35], "group_taxa": [31, 35, 36, 39, 40], "occur": [31, 35, 36, 38, 39, 40], "is_group": [31, 35, 36, 38, 39, 40], "is_grouped_taxa": [31, 35, 36, 39, 40], "boolean": 31, "is_squar": 31, "to_csv": 31, "binaryoptimizationalgorithm": 32, "integeroptimizationalgorithm": 32, "realoptimizationalgorithm": 32, "subsetoptimizationalgorithm": 32, "binarygeneticalgorithm": 32, "integergeneticalgorithm": 32, "realgeneticalgorithm": 32, "subsetgeneticalgorithm": 32, "nsga2binarygeneticalgorithm": 32, "nsga": 32, "ii": 32, "nsga2integergeneticalgorithm": 32, "nsga2realgeneticalgorithm": 32, "nsga2subsetgeneticalgorithm": 32, "steepestdescentsubsethillclimb": 32, "steepest": 32, "descent": 32, "hill": 32, "climb": 32, "accomplish": [32, 33, 34, 36, 38], "statement": [32, 33, 34, 36], "climber": 32, "soalgo": 32, "ngen": 32, "pop_siz": 32, "moalgo": 32, "sosoln": [32, 34], "soprob": [32, 33], "mosoln": [32, 34], "moprob": [32, 33], "binaryproblem": 33, "integerproblem": 33, "realproblem": 33, "subsetproblem": 33, "inherit": 33, "dummysingleobjectiverealproblem": 33, "__init__": 33, "union": 33, "decn_space_low": [33, 34], "decn_space_upp": [33, 34], "obj_wt": [33, 34], "ineqcv_wt": [33, 34], "neqcv": [33, 34], "eqcv_wt": [33, 34], "constructor": [33, 35, 38, 40], "super": 33, "arg": 33, "tupl": 33, "sphere": 33, "math": 33, "mathbf": 33, "v_": 33, "obj": 33, "w_": 33, "odot": 33, "f_": 33, "ineqcv": 33, "g_": 33, "eqcv": 33, "h_": 33, "keepdim": 33, "_evalu": 33, "nsoln": [33, 34], "variabl": 33, "dictionari": 33, "demand": 33, "accept": [33, 38], "1d": 33, "2d": 33, "handl": 33, "case": 33, "ndim": 33, "val": 33, "temporari": 33, "zip": 33, "f": 33, "h": 33, "len": 33, "updat": 33, "els": 33, "list": [33, 38], "accumul": 33, "row": [33, 39], "v": 33, "append": 33, "stack": [33, 34], "dummymultiobjectiverealproblem": 33, "na": 33, "dual": 33, "repeat": [33, 34], "cand": 33, "obj1": 33, "ineqcv1": 33, "eqcv1": 33, "length": [33, 35, 36, 39, 40], "obj2": 33, "ineqcv2": 33, "eqcv2": 33, "unpack": 33, "compon": 33, "binarysolut": 34, "integersolut": 34, "realsolut": 34, "subsetsolut": 34, "densebreedingvaluematrix": 35, "locat": [35, 36, 39], "from_numpi": 35, "automat": [35, 38], "sample_breeding_valu": 35, "been": [35, 36, 38, 40], "whether": [35, 36, 38, 39, 40], "targmax": 35, "tmax": 35, "targmin": 35, "tmin": 35, "tmean": 35, "trang": 35, "tstd": 35, "tvar": 35, "descal": 35, "saved_breeding_valu": 35, "densecoancestrymatrix": 36, "densemolecularcoancestrymatrix": 36, "molecular": 36, "densevanradencoancestrymatrix": 36, "vanraden": 36, "2008": 36, "denseyangcoancestrymatrix": 36, "yang": 36, "vrnt_hapgrp": [36, 39, 40], "vrnt_hapalt": [36, 39, 40], "vrnt_hapref": [36, 39, 40], "vrnt_mask": [36, 39, 40], "from_gmat": 36, "sample_coancestry_matrix": 36, "scale": 36, "ax": [36, 39], "coordin": 36, "mat_asformat": 36, "convex": 36, "is_positive_semidefinit": 36, "try": 36, "apply_jitt": 36, "after": [36, 38], "max_inbreed": 36, "min_inbreed": 36, "max": 36, "min": 36, "saved_coancestry_matrix": 36, "definit": [37, 38, 39, 40], "tabl": [37, 38, 39, 40], "kosambimapfunct": 37, "basal": 37, "seen": [37, 39], "arbitrari": 37, "mapfn": 37, "morgan": 37, "d": 37, "r_haldan": 37, "r_kosambi": 37, "invmapfn": 37, "invers": [37, 39], "invert": 37, "previous": [37, 40], "d_haldan": 37, "d_kosambi": 37, "rprob1g": 37, "rprob1p": 37, "rprob2g": 37, "rprob2p": 37, "success": 37, "boundari": 37, "alwai": 37, "code": [37, 38, 39, 40], "segment": [37, 39], "xoprob": 37, "inter": 37, "pair": 37, "extendedgeneticmap": 38, "abov": 38, "scope": [38, 39], "9": 38, "chrom": 38, "123456789": 38, "28": 38, "vrnt_stop": 38, "vrnt_fncode": 38, "who": 38, "own": 38, "empir": 38, "organ": 38, "choos": 38, "maiz": 38, "nam": 38, "publish": 38, "mcmullen": 38, "et": 38, "al": 38, "2009": 38, "from_egmap": 38, "mcmullen_2009_us_nam": 38, "egmap": 38, "auto_group": 38, "auto_build_splin": 38, "constitut": 38, "necessari": 38, "vrnt_chrgrp_name": [38, 39, 40], "vrnt_chrgrp_stix": [38, 39, 40], "vrnt_chrgrp_spix": [38, 39, 40], "vrnt_chrgrp_len": [38, 39, 40], "spline_kind": 38, "spline_fill_valu": 38, "default": 38, "fill": 38, "At": 38, "time": 38, "level": [38, 39], "affect": [38, 39], "recurs": [38, 39], "copyi": 38, "down": 38, "deepest": [38, 39], "indirect": [38, 39], "stabl": 38, "order": 38, "prioriti": 38, "place": 38, "often": 38, "occasion": 38, "sometim": 38, "disagr": 38, "caus": 38, "made": 38, "assembli": 38, "unfortun": 38, "issu": 38, "correct": 38, "elementwis": 38, "congruent": 38, "is_congru": 38, "agreement": 38, "remove_discrep": 38, "Be": 38, "mind": 38, "inspect": 38, "superior": 38, "build_splin": 38, "has_splin": 38, "interp_genpo": 38, "everyth": 38, "chrgrp": 38, "int": [38, 39, 40], "phypo": 38, "18203210": 38, "19293034": 38, "20110347": 38, "20474722": 38, "21398386": 38, "gentic": 38, "genpo": 38, "moduel": [39, 40], "n": [39, 40], "here": 39, "format": [39, 40], "map": [39, 40, 41], "sequenti": [39, 40], "haplotyp": [39, 40], "ploid": 39, "from_vcf": [39, 40], "widiv_2000snp": [39, 40], "gz": [39, 40], "later": [39, 40], "memori": [39, 40], "common": 39, "itself": 39, "mat_format": [39, 40], "basic": 39, "post": [39, 40], "vrnt_axi": [39, 40], "belong": [39, 40], "previou": [39, 40], "reflect": 39, "leav": 39, "unalt": 39, "anoth": 39, "process": 39, "adjoin_vrnt": [39, 40], "column": 39, "delete_vrnt": [39, 40], "insert_vrnt": [39, 40], "select_vrnt": [39, 40], "append_vrnt": [39, 40], "remove_vrnt": [39, 40], "incorp_vrnt": [39, 40], "concat_vrnt": [39, 40], "alphanumer": 39, "accord": 39, "reorder_vrnt": [39, 40], "lexsort_vrnt": [39, 40], "sort_vrnt": [39, 40], "vrnt": [39, 40], "is_grouped_vrnt": [39, 40], "locu": [39, 40], "acount": [39, 40], "major": [39, 40], "across": [39, 40], "int32": [39, 40], "float32": [39, 40], "presens": 39, "apoli": [39, 40], "gtcount": [39, 40], "homozyg": [39, 40], "recess": 39, "heterozyg": 39, "gtfreq": [39, 40], "maf": [39, 40], "meh": [39, 40], "tacount": [39, 40], "tafreq": [39, 40], "disk": 39, "saved_genotyp": [39, 40], "except": 40, "member": 40, "were": 40, "correctli": 40, "problemat": 40, "export": 40, "phase_axi": 40, "polymorph": 40, "minor": 40, "heterozygos": 40, "problem": 41, "survivor": 41, "logbook": 41}, "objects": {}, "objtypes": {}, "objnames": {}, "titleterms": {"advanc": 0, "pybrop": [0, 2, 5, 6, 7, 9, 13, 14, 15, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41], "usag": [0, 41], "contribut": 2, "exampl": [3, 29], "doubl": 3, "haploid": 3, "frequent": 4, "ask": 4, "question": 4, "implement": [5, 28], "softwar": [5, 6], "architectur": [5, 6, 8], "philosophi": [6, 14], "solid": 6, "design": 6, "principl": 6, "how": 6, "us": 6, "singl": [6, 28, 32, 33, 34], "responsibl": 6, "srp": 6, "open": 6, "close": 6, "ocp": 6, "liskov": 6, "substitutuion": 6, "lsp": 6, "interfac": [6, 28], "segreg": 6, "isp": 6, "depend": [6, 16], "invers": [6, 36], "dip": 6, "core": [7, 41], "infrastructur": [7, 41], "random": [7, 29], "number": [7, 29], "gener": [7, 16, 26, 28, 29, 30, 31, 35, 36, 39, 40], "error": 7, "subroutin": 7, "breed": [8, 12, 24, 25, 26, 27, 28, 30, 31, 35, 41], "simul": [8, 14, 26], "data": [8, 9, 10, 11, 12], "type": [8, 9, 10, 11, 12], "introduct": 8, "univers": 8, "program": 8, "algorithm": [8, 11, 32], "protocol": [8, 24, 25, 26, 27, 28, 41], "genotyp": [8, 12, 25, 39, 40], "phenotyp": [8, 27], "valu": [8, 12, 24, 30, 31, 35, 36], "estim": [8, 24, 30], "mate": [8, 21, 26], "select": [8, 22, 23, 28, 30, 31, 35, 36, 39, 40], "problem": [8, 11, 28, 32, 33], "solut": [8, 11, 33, 34], "oper": [8, 18, 19, 21, 22, 23, 41], "initi": [8, 19], "parent": [8, 22], "evalut": 8, "survivor": [8, 23], "logbook": [8, 20], "larg": 8, "scale": [8, 35], "genom": [10, 25, 30, 31, 41], "model": [10, 30, 31, 41], "varianc": [10, 30, 31, 35], "matric": [10, 12, 31, 35, 36, 39, 40], "optim": [11, 28, 32, 33, 34, 41], "popul": [12, 30, 39, 41], "genet": [12, 30, 31, 37, 38, 41], "map": [12, 37, 38], "function": [12, 31, 37], "phase": [12, 40], "coancestri": [12, 36], "fundament": 13, "main": 15, "page": 15, "what": 15, "i": [15, 36], "user": 15, "guid": 15, "content": 15, "indic": 15, "tabl": 15, "instal": 16, "requir": 16, "python": 16, "packag": 16, "addit": [16, 30], "linux": 16, "titl": 16, "releas": 16, "version": 16, "development": 16, "prerequisit": 17, "evalu": [18, 33], "class": [24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40], "famili": [24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40], "overview": [24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40], "summari": [24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40], "prot": [24, 25, 26, 27, 28], "bv": 24, "modul": [24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41], "load": [24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40], "creat": [24, 25, 26, 27, 28, 29, 30, 31, 35, 36, 38, 39, 40], "gt": 25, "individu": [25, 27], "from": [25, 30, 31, 35, 36, 38, 39, 40], "properti": [26, 30, 31, 35, 36, 38, 39, 40], "matingprotocol": 26, "progeni": 26, "pt": 27, "set": 27, "trait": [27, 30, 31, 35], "herit": 27, "abstract": 28, "sel": 28, "concret": 28, "setup": 28, "unconstrain": 28, "constrain": 28, "object": [28, 32, 33, 34, 36, 37], "multi": [28, 32, 33, 34], "seed": 29, "multipl": 29, "pseudorandom": 29, "script": 29, "gmod": 30, "numpi": [30, 31, 35, 36, 38, 39, 40], "arrai": [30, 31, 35, 36, 38, 39, 40], "genotypematrix": [30, 36, 39], "coeffici": 30, "taxa": [30, 31, 35, 36, 39, 40], "marker": [30, 38, 39, 40], "variant": [30, 38, 39, 40], "copi": [30, 31, 35, 36, 38, 39, 40], "shallow": [30, 35, 36, 38, 39], "deep": [30, 35, 36, 38, 39], "predict": 30, "method": [30, 36], "score": 30, "accuraci": 30, "calcul": [30, 36, 37], "term": 30, "genic": [30, 31], "bulmer": 30, "effect": 30, "limit": 30, "upper": 30, "lower": 30, "favor": 30, "allel": [30, 39], "metric": 30, "deleteri": 30, "read": [30, 38], "write": [30, 31, 40], "matrix": [31, 35, 36, 39, 40], "vmat": 31, "hdf5": [31, 35, 36, 39, 40], "file": [31, 35, 36, 38, 39, 40], "geneticvariancematrix": 31, "genicvariancematrix": 31, "squar": [31, 36], "element": [31, 35, 36, 38, 39, 40], "On": [31, 35, 36, 39, 40], "manipul": [31, 35, 36, 39, 40], "adjoin": [31, 35, 36, 39, 40], "delet": [31, 35, 36, 39, 40], "insert": [31, 35, 36, 39, 40], "In": [31, 35, 36, 39, 40], "place": [31, 35, 36, 39, 40], "append": [31, 35, 36, 39, 40], "remov": [31, 35, 36, 38, 39, 40], "incorpor": [31, 35, 36, 39, 40], "concaten": [31, 35, 36, 39, 40], "group": [31, 35, 36, 38, 39, 40], "sort": [31, 35, 36, 38, 39, 40], "reorder": [31, 35, 36, 38, 39, 40], "lexsort": [31, 35, 36, 38, 39, 40], "determin": [31, 36], "whether": 31, "all": 31, "ax": 31, "ar": 31, "equal": 31, "length": 31, "save": [31, 35, 36, 39, 40], "csv": 31, "opt": [32, 33, 34], "algo": 32, "construct": [32, 33, 34, 37], "minim": 32, "prob": 33, "deriv": 33, "specif": [33, 36], "candid": 33, "soln": 34, "breedingvaluematrix": 35, "statist": [35, 36, 39, 40], "maximum": [35, 36], "each": 35, "minimum": [35, 36], "mean": [35, 36, 39], "rang": 35, "standard": [35, 41], "deviat": 35, "de": 35, "center": 35, "export": [35, 36, 39], "popgen": [36, 37, 38, 39, 40], "cmat": 36, "coancestrymatrix": 36, "relat": 36, "kinship": 36, "retriev": 36, "format": 36, "posit": [36, 38], "semidefinit": 36, "appli": 36, "jitter": 36, "along": 36, "diagon": 36, "attain": 36, "inbreed": 36, "gmap": [37, 38], "recombin": 37, "probabl": 37, "distanc": 37, "sequenti": 37, "pairwis": 37, "geneticmap": 38, "spline": 38, "congruenc": 38, "check": 38, "discrep": 38, "build": 38, "interpol": 38, "gmat": [39, 40], "vcf": [39, 40], "count": 39, "frequenc": 39, "polymorph": 39, "presenc": 39, "minor": 39, "expect": 39, "heterozygos": 39, "phasedgenotypematrix": 40}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"Advanced PyBrOpS Usage": [[0, "advanced-pybrops-usage"]], "Contributing to PyBrOpS": [[2, "contributing-to-pybrops"]], "Examples": [[3, "examples"]], "Doubled haploid example": [[3, "doubled-haploid-example"]], "Frequently Asked Questions": [[4, "frequently-asked-questions"]], "PyBrOpS Implemented Software Architecture": [[5, "pybrops-implemented-software-architecture"]], "PyBrOpS Software Architecture Philosophy": [[6, "pybrops-software-architecture-philosophy"]], "SOLID Design Principles": [[6, "id1"]], "How PyBrOpS uses SOLID Design Principles": [[6, "how-pybrops-uses-solid-design-principles"]], "Use of the Single Responsiblity Principle (SRP)": [[6, "use-of-the-single-responsiblity-principle-srp"]], "Use of the Open-Closed Principle (OCP)": [[6, "use-of-the-open-closed-principle-ocp"]], "Use of the Liskov Substitutuion Principle (LSP)": [[6, "use-of-the-liskov-substitutuion-principle-lsp"]], "Use of the Interface Segregation Principle (ISP)": [[6, "use-of-the-interface-segregation-principle-isp"]], "Use of the Dependency Inversion Principle (DIP)": [[6, "use-of-the-dependency-inversion-principle-dip"]], "Core PyBrOpS Infrastructure": [[7, "core-pybrops-infrastructure"]], "Random Number Generation": [[7, "random-number-generation"], [29, "random-number-generation"]], "Error Subroutines": [[7, "error-subroutines"]], "Breeding Simulation Data Types": [[8, "breeding-simulation-data-types"]], "Introduction to the Universal Breeding Program Algorithm": [[8, "introduction-to-the-universal-breeding-program-algorithm"]], "Breeding Protocols": [[8, "breeding-protocols"]], "Genotyping Protocols": [[8, "genotyping-protocols"], [25, "genotyping-protocols"]], "Phenotyping Protocols": [[8, "phenotyping-protocols"], [27, "phenotyping-protocols"]], "Breeding Value Estimation Protocols": [[8, "breeding-value-estimation-protocols"], [24, "breeding-value-estimation-protocols"]], "Mating Protocols": [[8, "mating-protocols"], [26, "mating-protocols"]], "Selection Protocols": [[8, "selection-protocols"], [28, "selection-protocols"]], "Selection Problems for Selection Protocols": [[8, "selection-problems-for-selection-protocols"]], "Selection Solutions for Selection Protocols": [[8, "selection-solutions-for-selection-protocols"]], "Breeding Operators": [[8, "breeding-operators"]], "Initialization Operators": [[8, "initialization-operators"], [19, "initialization-operators"]], "Parental Selection Operators": [[8, "parental-selection-operators"], [22, "parental-selection-operators"]], "Mating Operators": [[8, "mating-operators"], [21, "mating-operators"]], "Evalution Operators": [[8, "evalution-operators"]], "Survivor Selection Operators": [[8, "survivor-selection-operators"], [23, "survivor-selection-operators"]], "Logbooks": [[8, "logbooks"], [20, "logbooks"]], "Large-Scale Architecture Operators": [[8, "large-scale-architecture-operators"]], "Data Types in PyBrOpS": [[9, "data-types-in-pybrops"]], "PyBrOpS Data Types:": [[9, null]], "Genomic Modeling Data Types": [[10, "genomic-modeling-data-types"]], "Genomic Models": [[10, "genomic-models"], [30, "genomic-models"]], "Variance Matrices": [[10, "variance-matrices"], [31, "variance-matrices"]], "Optimization Data Types": [[11, "optimization-data-types"]], "Optimization Problems": [[11, "optimization-problems"], [33, "optimization-problems"]], "Optimization Solutions": [[11, "optimization-solutions"], [34, "optimization-solutions"]], "Optimization Algorithms": [[11, "optimization-algorithms"], [32, "optimization-algorithms"]], "Population Genetics Data Types": [[12, "population-genetics-data-types"]], "Genetic Maps": [[12, "genetic-maps"], [38, "genetic-maps"]], "Genetic Map Functions": [[12, "genetic-map-functions"], [37, "genetic-map-functions"]], "Genotype Matrices": [[12, "genotype-matrices"], [39, "genotype-matrices"]], "Phased Genotype Matrices": [[12, "phased-genotype-matrices"], [40, "phased-genotype-matrices"]], "Breeding Value Matrices": [[12, "breeding-value-matrices"], [35, "breeding-value-matrices"]], "Coancestry Matrices": [[12, "coancestry-matrices"], [36, "coancestry-matrices"]], "PyBrOpS Fundamentals": [[13, "pybrops-fundamentals"]], "PyBrOpS Fundamentals:": [[13, null]], "PyBrOpS Simulation Philosophy": [[14, "pybrops-simulation-philosophy"]], "PyBrOpS Main Page": [[15, "pybrops-main-page"]], "What is PyBrOpS?": [[15, "what-is-pybrops"]], "PyBrOpS User Guide": [[15, "pybrops-user-guide"]], "Contents:": [[15, null]], "Indices and tables": [[15, "indices-and-tables"]], "Installation": [[16, "installation"]], "General installation requirements": [[16, "general-installation-requirements"]], "Python package dependencies": [[16, "python-package-dependencies"]], "Additional Linux installation requirements": [[16, "additional-linux-installation-requirements"]], "Title": [[16, "id1"]], "Release version installation": [[16, "release-version-installation"]], "Developmental version installation": [[16, "developmental-version-installation"]], "Prerequisites": [[17, "prerequisites"]], "Evaluation Operators": [[18, "evaluation-operators"]], "Class Family Overview": [[24, "class-family-overview"], [25, "class-family-overview"], [26, "class-family-overview"], [27, "class-family-overview"], [28, "class-family-overview"], [30, "class-family-overview"], [31, "class-family-overview"], [32, "class-family-overview"], [33, "class-family-overview"], [34, "class-family-overview"], [35, "class-family-overview"], [36, "class-family-overview"], [37, "class-family-overview"], [38, "class-family-overview"], [39, "class-family-overview"], [40, "class-family-overview"]], "Summary of Breeding Value Protocol Classes": [[24, "summary-of-breeding-value-protocol-classes"]], "Summary of classes in the pybrops.breed.prot.bv module": [[24, "id1"]], "Loading Class Modules": [[24, "loading-class-modules"], [25, "loading-class-modules"], [26, "loading-class-modules"], [27, "loading-class-modules"], [28, "loading-class-modules"], [39, "loading-class-modules"], [40, "loading-class-modules"]], "Creating Breeding Value Estimation Protocols": [[24, "creating-breeding-value-estimation-protocols"]], "Estimating Breeding Values": [[24, "estimating-breeding-values"]], "Summary of Genotyping Protocol Classes": [[25, "summary-of-genotyping-protocol-classes"]], "Summary of classes in the pybrops.breed.prot.gt module": [[25, "id1"]], "Creating Genotyping Protocols": [[25, "creating-genotyping-protocols"]], "Genotyping Individuals from their Genomes": [[25, "genotyping-individuals-from-their-genomes"]], "Summary of Mating Protocol Classes": [[26, "summary-of-mating-protocol-classes"]], "Summary of classes in the pybrops.breed.prot.mate module": [[26, "id1"]], "Creating Mating Protocols": [[26, "creating-mating-protocols"]], "Mating Protocol Properties": [[26, "mating-protocol-properties"]], "Mating protocol general properties": [[26, "mating-protocol-general-properties"]], "Summary of MatingProtocol general properties": [[26, "id2"]], "Simulating Mating and Progeny Generation": [[26, "simulating-mating-and-progeny-generation"]], "Summary of Phenotyping Protocol Classes": [[27, "summary-of-phenotyping-protocol-classes"]], "Summary of classes in the pybrops.breed.prot.pt module": [[27, "id1"]], "Creating Phenotyping Protocols": [[27, "creating-phenotyping-protocols"]], "Setting Trait Heritabilities": [[27, "setting-trait-heritabilities"]], "Phenotyping Individuals": [[27, "phenotyping-individuals"]], "Summary of Selection Protocol Classes": [[28, "summary-of-selection-protocol-classes"]], "Abstract selection protocol classes": [[28, "abstract-selection-protocol-classes"]], "Summary of abstract classes in the pybrops.breed.prot.sel module": [[28, "id1"]], "Concrete selection protocol classes": [[28, "concrete-selection-protocol-classes"]], "Summary of concrete classes in the pybrops.breed.prot.sel module": [[28, "id2"]], "Abstract interface classes": [[28, "abstract-interface-classes"]], "Concrete implementation classes": [[28, "concrete-implementation-classes"]], "Creating Selection Protocol Classes": [[28, "creating-selection-protocol-classes"]], "Generating Selection Problems for Optimization": [[28, "generating-selection-problems-for-optimization"]], "Setup for unconstrained optimization": [[28, "setup-for-unconstrained-optimization"]], "Setup for constrained optimization": [[28, "setup-for-constrained-optimization"]], "Generating the selection problem": [[28, "generating-the-selection-problem"]], "Single-Objective Optimization": [[28, "single-objective-optimization"]], "Multi-Objective Optimization": [[28, "multi-objective-optimization"]], "Selection": [[28, "selection"]], "Seeding PyBrOpS": [[29, "seeding-pybrops"]], "Creating Multiple Pseudorandom Number Generators": [[29, "creating-multiple-pseudorandom-number-generators"]], "Example Script": [[29, "example-script"]], "Summary of Genomic Model Classes": [[30, "summary-of-genomic-model-classes"]], "Summary of classes in pybrops.model.gmod module": [[30, "id1"]], "Loading Genomic Model Modules": [[30, "loading-genomic-model-modules"]], "Creating Genomic Models": [[30, "creating-genomic-models"]], "Creating genomic models from NumPy arrays": [[30, "creating-genomic-models-from-numpy-arrays"]], "Genomic Model Properties": [[30, "genomic-model-properties"]], "General properties": [[30, "general-properties"], [31, "general-properties"], [36, "general-properties"], [39, "general-properties"], [40, "general-properties"]], "Summary of GenotypeMatrix general properties": [[30, "id2"], [39, "id2"]], "Model coefficient properties": [[30, "model-coefficient-properties"]], "Summary of GenotypeMatrix taxa properties": [[30, "id3"], [39, "id3"]], "Trait properties": [[30, "trait-properties"], [31, "trait-properties"]], "Summary of GenotypeMatrix marker variant properties": [[30, "id4"], [39, "id4"]], "Copying Genomic Models": [[30, "copying-genomic-models"]], "Shallow copying": [[30, "shallow-copying"], [35, "shallow-copying"], [36, "shallow-copying"], [38, "shallow-copying"], [39, "shallow-copying"]], "Deep copying": [[30, "deep-copying"], [35, "deep-copying"], [36, "deep-copying"], [38, "deep-copying"], [39, "deep-copying"]], "Model prediction methods": [[30, "model-prediction-methods"]], "Score model prediction accuracy": [[30, "score-model-prediction-accuracy"]], "Predicting genomic estimated breeding values": [[30, "predicting-genomic-estimated-breeding-values"]], "Calculating population genetic variance terms": [[30, "calculating-population-genetic-variance-terms"]], "Predicting genetic variance": [[30, "predicting-genetic-variance"]], "Predicting additive genetic variance": [[30, "predicting-additive-genetic-variance"]], "Predicting additive genic variance": [[30, "predicting-additive-genic-variance"]], "Predicting the Bulmer effect": [[30, "predicting-the-bulmer-effect"]], "Calculating population selection limits": [[30, "calculating-population-selection-limits"]], "Upper selection limit": [[30, "upper-selection-limit"]], "Lower selection limit": [[30, "lower-selection-limit"]], "Calculating favorable allele metrics": [[30, "calculating-favorable-allele-metrics"]], "Calculating deleterious allele metrics": [[30, "calculating-deleterious-allele-metrics"]], "Reading and writing a genomic model": [[30, "reading-and-writing-a-genomic-model"]], "Summary of Variance Matrix Classes": [[31, "summary-of-variance-matrix-classes"]], "Genetic variance matrix classes": [[31, "genetic-variance-matrix-classes"]], "Summary of genetic variance classes in the pybrops.model.vmat module": [[31, "id1"]], "Genic variance matrix classes": [[31, "genic-variance-matrix-classes"]], "Summary of genic variance classes in the pybrops.model.vmat module": [[31, "id2"]], "Loading Variance Matrix Modules": [[31, "loading-variance-matrix-modules"]], "Loading genetic variance matrix modules": [[31, "loading-genetic-variance-matrix-modules"]], "Loading genic variance matrix modules": [[31, "loading-genic-variance-matrix-modules"]], "Creating Variance Matrices": [[31, "creating-variance-matrices"]], "Creating variance matrices from NumPy arrays": [[31, "creating-variance-matrices-from-numpy-arrays"]], "Creating variance matrices from genomic models": [[31, "creating-variance-matrices-from-genomic-models"]], "Loading variance matrices from HDF5 files": [[31, "loading-variance-matrices-from-hdf5-files"]], "Variance matrix properties": [[31, "variance-matrix-properties"]], "Summary of GeneticVarianceMatrix and GenicVarianceMatrix general properties": [[31, "id3"]], "Square properties": [[31, "square-properties"]], "Summary of GeneticVarianceMatrix and GenicVarianceMatrix square matrix properties": [[31, "id4"], [31, "id6"]], "Taxa properties": [[31, "taxa-properties"], [39, "taxa-properties"], [40, "taxa-properties"]], "Summary of GeneticVarianceMatrix and GenicVarianceMatrix taxa properties": [[31, "id5"]], "Copying": [[31, "copying"]], "Variance Matrix Element Copy-On-Manipulation": [[31, "variance-matrix-element-copy-on-manipulation"]], "Adjoining elements": [[31, "adjoining-elements"], [40, "adjoining-elements"]], "Deleting elements": [[31, "deleting-elements"], [40, "deleting-elements"]], "Inserting elements": [[31, "inserting-elements"], [40, "inserting-elements"]], "Selecting elements": [[31, "selecting-elements"], [40, "selecting-elements"]], "Variance Matrix Element In-Place-Manipulation": [[31, "variance-matrix-element-in-place-manipulation"]], "Appending elements": [[31, "appending-elements"], [40, "appending-elements"]], "Removing elements": [[31, "removing-elements"], [40, "removing-elements"]], "remove taxa": [[31, "remove-taxa"], [40, "remove-taxa"]], "remove traits": [[31, "remove-traits"]], "Incorporating elements": [[31, "incorporating-elements"], [40, "incorporating-elements"]], "Concatenating matrices": [[31, "concatenating-matrices"], [40, "concatenating-matrices"]], "Grouping and sorting": [[31, "grouping-and-sorting"]], "Reordering": [[31, "reordering"], [40, "reordering"]], "reorder taxa": [[31, "reorder-taxa"], [40, "reorder-taxa"]], "reorder traits": [[31, "reorder-traits"]], "Lexsorting": [[31, "lexsorting"], [40, "lexsorting"]], "lexsort taxa": [[31, "lexsort-taxa"], [40, "lexsort-taxa"]], "lexsort traits": [[31, "lexsort-traits"]], "Sorting": [[31, "sorting"], [40, "sorting"]], "sort taxa": [[31, "sort-taxa"], [40, "sort-taxa"]], "sort traits": [[31, "sort-traits"]], "Grouping": [[31, "grouping"], [40, "grouping"]], "Square matrix functions": [[31, "square-matrix-functions"]], "Determine whether all square axes are of equal length": [[31, "determine-whether-all-square-axes-are-of-equal-length"]], "Saving Breeding Value Matrices": [[31, "saving-breeding-value-matrices"], [35, "saving-breeding-value-matrices"]], "Write to HDF5 file": [[31, "write-to-hdf5-file"]], "Write to CSV file": [[31, "write-to-csv-file"]], "Summary of Optimization Algorithm Classes": [[32, "summary-of-optimization-algorithm-classes"]], "Summary of classes in the pybrops.opt.algo module": [[32, "id1"]], "Loading Optimization Algorithm Modules": [[32, "loading-optimization-algorithm-modules"]], "Constructing Optimization Algorithms": [[32, "constructing-optimization-algorithms"]], "Single-objective optimization algorithms": [[32, "single-objective-optimization-algorithms"]], "Multi-objective optimization algorithms": [[32, "multi-objective-optimization-algorithms"]], "Minimizing Optimization Problems": [[32, "minimizing-optimization-problems"]], "Optimization of single-objective problems": [[32, "optimization-of-single-objective-problems"]], "Optimization of multi-objective problems": [[32, "optimization-of-multi-objective-problems"]], "Summary of Optimization Problem Classes": [[33, "summary-of-optimization-problem-classes"]], "Summary of classes in the pybrops.opt.prob module": [[33, "id1"]], "Loading Optimization Problem Modules": [[33, "loading-optimization-problem-modules"]], "Deriving Problem Classes": [[33, "deriving-problem-classes"]], "Single objective problem specification": [[33, "single-objective-problem-specification"]], "Multi-objective problem specification": [[33, "multi-objective-problem-specification"]], "Constructing Problems": [[33, "constructing-problems"]], "Construct a single-objective problem": [[33, "construct-a-single-objective-problem"]], "Construct a multi-objective problem": [[33, "construct-a-multi-objective-problem"]], "Evaluating candidate solutions": [[33, "evaluating-candidate-solutions"]], "Summary of Optimization Solution Classes": [[34, "summary-of-optimization-solution-classes"]], "Summary of classes in the pybrops.opt.soln module": [[34, "id1"]], "Loading Optimization Solution Modules": [[34, "loading-optimization-solution-modules"]], "Constructing Solutions": [[34, "constructing-solutions"]], "Construct a single-objective solution": [[34, "construct-a-single-objective-solution"]], "Construct a multi-objective solution": [[34, "construct-a-multi-objective-solution"]], "Loading Breeding Value Matrix Modules": [[35, "loading-breeding-value-matrix-modules"]], "Creating Breeding Value Matrices": [[35, "creating-breeding-value-matrices"]], "Creating breeding value matrices from NumPy arrays": [[35, "creating-breeding-value-matrices-from-numpy-arrays"]], "Loading breeding value matrices from HDF5 files": [[35, "loading-breeding-value-matrices-from-hdf5-files"]], "Breeding Value Matrix Properties": [[35, "breeding-value-matrix-properties"]], "Breeding value matrix general properties": [[35, "breeding-value-matrix-general-properties"]], "Summary of BreedingValueMatrix general properties": [[35, "id1"]], "Breeding value matrix taxa properties": [[35, "breeding-value-matrix-taxa-properties"]], "Summary of BreedingValueMatrix taxa properties": [[35, "id2"]], "Breeding value matrix trait properties": [[35, "breeding-value-matrix-trait-properties"]], "Summary of BreedingValueMatrix trait properties": [[35, "id3"]], "Copying Breeding Value Matrices": [[35, "copying-breeding-value-matrices"]], "Copy-On Element Manipulation": [[35, "copy-on-element-manipulation"], [36, "copy-on-element-manipulation"], [39, "copy-on-element-manipulation"]], "Adjoin elements": [[35, "adjoin-elements"], [36, "adjoin-elements"], [39, "adjoin-elements"]], "Delete elements": [[35, "delete-elements"], [36, "delete-elements"], [39, "delete-elements"]], "Insert elements": [[35, "insert-elements"], [36, "insert-elements"], [39, "insert-elements"]], "Select elements": [[35, "select-elements"], [36, "select-elements"], [39, "select-elements"]], "In-Place Element Manipulation": [[35, "in-place-element-manipulation"], [36, "in-place-element-manipulation"], [39, "in-place-element-manipulation"]], "Append elements": [[35, "append-elements"], [36, "append-elements"], [39, "append-elements"]], "Remove elements": [[35, "remove-elements"], [36, "remove-elements"], [39, "remove-elements"]], "Incorporate elements": [[35, "incorporate-elements"], [36, "incorporate-elements"], [39, "incorporate-elements"]], "Concatenate elements": [[35, "concatenate-elements"], [36, "concatenate-elements"], [39, "concatenate-elements"]], "Grouping and Sorting": [[35, "grouping-and-sorting"], [36, "grouping-and-sorting"], [39, "grouping-and-sorting"], [40, "grouping-and-sorting"]], "Reordering elements": [[35, "reordering-elements"], [36, "reordering-elements"], [39, "reordering-elements"]], "Lexsorting elements": [[35, "lexsorting-elements"], [36, "lexsorting-elements"], [39, "lexsorting-elements"]], "Sorting elements": [[35, "sorting-elements"], [36, "sorting-elements"], [39, "sorting-elements"]], "Grouping elements": [[35, "grouping-elements"], [36, "grouping-elements"], [39, "grouping-elements"]], "Summary Statistics": [[35, "summary-statistics"], [36, "summary-statistics"], [39, "summary-statistics"], [40, "summary-statistics"]], "Maximum breeding values for each trait": [[35, "maximum-breeding-values-for-each-trait"]], "Minimum breeding values for each trait": [[35, "minimum-breeding-values-for-each-trait"]], "Mean breeding values for each trait": [[35, "mean-breeding-values-for-each-trait"]], "Breeding value ranges for each trait": [[35, "breeding-value-ranges-for-each-trait"]], "Breeding value standard deviations for each trait": [[35, "breeding-value-standard-deviations-for-each-trait"]], "Breeding value variances for each trait": [[35, "breeding-value-variances-for-each-trait"]], "De-scaling and de-centering breeding values": [[35, "de-scaling-and-de-centering-breeding-values"]], "Exporting to HDF5": [[35, "exporting-to-hdf5"], [36, "exporting-to-hdf5"], [39, "exporting-to-hdf5"]], "Summary of Coancestry Matrix Classes": [[36, "summary-of-coancestry-matrix-classes"]], "Summary of classes in the pybrops.popgen.cmat module": [[36, "id1"]], "Loading Coancestry Matrix Modules": [[36, "loading-coancestry-matrix-modules"]], "Creating Coancestry Matrices": [[36, "creating-coancestry-matrices"]], "Creating coancestry matrices from NumPy arrays": [[36, "creating-coancestry-matrices-from-numpy-arrays"]], "Creating coancestry matrices from GenotypeMatrix objects": [[36, "creating-coancestry-matrices-from-genotypematrix-objects"]], "Loading coancestry matrices from HDF5 files": [[36, "loading-coancestry-matrices-from-hdf5-files"]], "Coancestry Matrix Properties": [[36, "coancestry-matrix-properties"]], "Summary of CoancestryMatrix general properties": [[36, "id2"]], "Taxa-related properties": [[36, "taxa-related-properties"]], "Summary of CoancestryMatrix taxa properties": [[36, "id3"]], "Square matrix-related properties": [[36, "square-matrix-related-properties"]], "Summary of CoancestryMatrix square matrix properties": [[36, "id4"]], "Copying Coancestry Matrices": [[36, "copying-coancestry-matrices"]], "Coancestry and Kinship Methods": [[36, "coancestry-and-kinship-methods"]], "Retrieving coancestry values": [[36, "retrieving-coancestry-values"]], "Retrieving kinship values": [[36, "retrieving-kinship-values"]], "Retrieving the coancestry matrix as a specific format": [[36, "retrieving-the-coancestry-matrix-as-a-specific-format"]], "Determining if the coancestry matrix is positive semidefinite": [[36, "determining-if-the-coancestry-matrix-is-positive-semidefinite"]], "Applying jitter values along the diagonal": [[36, "applying-jitter-values-along-the-diagonal"]], "Calculating the matrix inverse": [[36, "calculating-the-matrix-inverse"]], "Calculating maximum attainable inbreeding": [[36, "calculating-maximum-attainable-inbreeding"]], "Calculating minimum attainable inbreeding": [[36, "calculating-minimum-attainable-inbreeding"]], "Maximum coancestry": [[36, "maximum-coancestry"]], "Mean coancestry": [[36, "mean-coancestry"]], "Minimum coancestry": [[36, "minimum-coancestry"]], "Saving Coancestry Matrices": [[36, "saving-coancestry-matrices"]], "Summary of Genetic Map Function Classes": [[37, "summary-of-genetic-map-function-classes"]], "Summary of genetic map function classes in the pybrops.popgen.gmap module": [[37, "id1"]], "Loading Genetic Map Function Modules": [[37, "loading-genetic-map-function-modules"]], "Constructing Genetic Map Function Objects": [[37, "constructing-genetic-map-function-objects"]], "Calculating Recombination Probabilities": [[37, "calculating-recombination-probabilities"]], "Calculating Genetic Map Distances": [[37, "calculating-genetic-map-distances"]], "Calculating Sequential and Pairwise Recombination Probabilities": [[37, "calculating-sequential-and-pairwise-recombination-probabilities"]], "Calculating sequential recombination probabilities": [[37, "calculating-sequential-recombination-probabilities"]], "Calculating pairwise recombination probabilities": [[37, "calculating-pairwise-recombination-probabilities"]], "Summary of Genetic Map Classes": [[38, "summary-of-genetic-map-classes"]], "Summary of genetic map classes in the pybrops.popgen.gmap module": [[38, "id1"]], "Loading Genetic Map Modules": [[38, "loading-genetic-map-modules"]], "Creating Genetic Maps": [[38, "creating-genetic-maps"]], "Creating genetic maps from NumPy arrays": [[38, "creating-genetic-maps-from-numpy-arrays"]], "Reading genetic maps from a file": [[38, "reading-genetic-maps-from-a-file"]], "Genetic Map Properties": [[38, "genetic-map-properties"]], "Marker variant properties": [[38, "marker-variant-properties"], [39, "marker-variant-properties"], [40, "marker-variant-properties"]], "Summary of GeneticMap marker variant properties": [[38, "id2"]], "Spline properties": [[38, "spline-properties"]], "Summary of GeneticMap spline properties": [[38, "id3"]], "Copying Genetic Maps": [[38, "copying-genetic-maps"]], "Sorting and Grouping Genetic Maps": [[38, "sorting-and-grouping-genetic-maps"]], "Reordering map elements": [[38, "reordering-map-elements"]], "Lexsorting map elements": [[38, "lexsorting-map-elements"]], "Sorting map elements": [[38, "sorting-map-elements"]], "Grouping map elements": [[38, "grouping-map-elements"]], "Genetic Map Congruency": [[38, "genetic-map-congruency"]], "Checking for congruency": [[38, "checking-for-congruency"]], "Removing map discrepancies": [[38, "removing-map-discrepancies"]], "Building Interpolation Splines": [[38, "building-interpolation-splines"]], "Interpolating Genetic Positions": [[38, "interpolating-genetic-positions"]], "Summary of Genotype Matrix Classes": [[39, "summary-of-genotype-matrix-classes"]], "Summary of genotype matrix classes in the pybrops.popgen.gmat module": [[39, "id1"]], "Creating Genotype Matrices": [[39, "creating-genotype-matrices"]], "Creating genotype matrices from NumPy arrays": [[39, "creating-genotype-matrices-from-numpy-arrays"]], "Loading genotype matrices from VCF files": [[39, "loading-genotype-matrices-from-vcf-files"]], "Loading genotype matrices from HDF5 files": [[39, "loading-genotype-matrices-from-hdf5-files"]], "Genotype Matrix Properties": [[39, "genotype-matrix-properties"]], "Copying Genotype Matrices": [[39, "copying-genotype-matrices"]], "Population allele counts": [[39, "population-allele-counts"]], "Population allele frequencies": [[39, "population-allele-frequencies"]], "Population allele polymorphism presence": [[39, "population-allele-polymorphism-presence"]], "Population genotype counts": [[39, "population-genotype-counts"]], "Population genotype frequencies": [[39, "population-genotype-frequencies"]], "Population minor allele frequencies": [[39, "population-minor-allele-frequencies"]], "Population mean expected heterozygosity": [[39, "population-mean-expected-heterozygosity"]], "Taxa allele counts": [[39, "taxa-allele-counts"]], "Taxa allele frequencies": [[39, "taxa-allele-frequencies"]], "Saving Genotype Matrices": [[39, "saving-genotype-matrices"], [40, "saving-genotype-matrices"]], "Summary of Phased Genotype Matrix Classes": [[40, "summary-of-phased-genotype-matrix-classes"]], "Summary of phased genotype matrix classes in the pybrops.popgen.gmat module": [[40, "id1"]], "Creating Phased Genotype Matrices": [[40, "creating-phased-genotype-matrices"]], "Creating phased genotype matrices from NumPy arrays": [[40, "creating-phased-genotype-matrices-from-numpy-arrays"]], "Loading phased genotype matrices from VCF files": [[40, "loading-phased-genotype-matrices-from-vcf-files"]], "Loading phased genotype matrices from HDF5 files": [[40, "loading-phased-genotype-matrices-from-hdf5-files"]], "Phased Genotype Matrix Properties": [[40, "phased-genotype-matrix-properties"]], "Summary of PhasedGenotypeMatrix general properties": [[40, "id2"]], "Phase properties": [[40, "phase-properties"]], "Summary of PhasedGenotypeMatrix phase properties": [[40, "id3"]], "Summary of PhasedGenotypeMatrix taxa properties": [[40, "id4"]], "Summary of PhasedGenotypeMatrix marker variant properties": [[40, "id5"]], "Copying Phased Genotype Matrices": [[40, "copying-phased-genotype-matrices"]], "Phased Genotype Matrix Element Copy-On-Manipulation": [[40, "phased-genotype-matrix-element-copy-on-manipulation"]], "delete taxa": [[40, "delete-taxa"]], "delete marker variants": [[40, "delete-marker-variants"]], "Phased Genotype Matrix Element In-Place-Manipulation": [[40, "phased-genotype-matrix-element-in-place-manipulation"]], "remove marker variants": [[40, "remove-marker-variants"]], "reorder marker variants": [[40, "reorder-marker-variants"]], "lexsort marker variants": [[40, "lexsort-marker-variants"]], "sort marker variants": [[40, "sort-marker-variants"]], "group taxa": [[40, "group-taxa"]], "group marker variants": [[40, "group-marker-variants"]], "Write to HDF5": [[40, "write-to-hdf5"]], "Standard PyBrOpS Usage": [[41, "standard-pybrops-usage"]], "Core Infrastructure Usage:": [[41, null]], "Population Genetics Modules Usage:": [[41, null]], "Optimization Modules Usage:": [[41, null]], "Genomic Modeling Modules Usage:": [[41, null]], "Breeding Protocol Modules Usage:": [[41, null]], "Breeding Operator Modules Usage:": [[41, null]]}, "indexentries": {}})